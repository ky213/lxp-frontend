[{"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/index.js":"1","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/reportWebVitals.js":"2","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Utils/i18n.js":"3","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/App.js":"4","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Utils/validators.js":"5","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/empty_state_icon.js":"6","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/courses.js":"7","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/activities.js":"8","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/programicon.js":"9","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/homeicon.js":"10","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/searchicon.js":"11","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/notification.js":"12","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/myreport.js":"13","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/planet_icon.js":"14","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/clock.js":"15","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/library.js":"16","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/profile_settings_icon.js":"17","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/logout_icon.js":"18","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Store/reduxStore.js":"19","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Store/Reducers/common.js":"20","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Store/Reducers/activities.js":"21","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Store/Reducers/courses.js":"22","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Store/Reducers/programs.js":"23","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Store/Reducers/notifications.js":"24","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Courses/CoursesContainer.jsx":"25","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Home/HomeContainer.jsx":"26","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Reports/ReportsContainer.jsx":"27","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Programs/ProgramsContainer.jsx":"28","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Profile/Profile.jsx":"29","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/SearchResult/SearchResultContainer.jsx":"30","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Auth/Login/Login.jsx":"31","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Auth/Forgot/ForgotPassword.jsx":"32","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Courses/Courses.jsx":"33","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Home/Home.jsx":"34","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Reports/Reports.jsx":"35","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/SearchResult/SearchResult.jsx":"36","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Programs/Programs.jsx":"37","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Profile/Notifications/ProfileNotifications.jsx":"38","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Profile/Password/ProfilePassword.jsx":"39","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Profile/Email/ProfileEmail.jsx":"40","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Profile/Info/ProfileInfo.jsx":"41","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Courses/CourseItemView/CourseItemView.jsx":"42","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Home/Statistic/Statistic.jsx":"43","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Reports/ReportDetails/ReportDetails.jsx":"44","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Reports/ReportMain/ReportMain.jsx":"45","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Reports/UserInfo/UserInfo.jsx":"46","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Home/Courses/Courses.jsx":"47","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Reports/Filter/Filter.jsx":"48","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Home/Courses/CourseItem/CourseItem.jsx":"49","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Services/activities.js":"50","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Services/courses.js":"51","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Services/notifications.js":"52","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Services/programs.js":"53","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Notifications/NotificationsContainer.jsx":"54","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Notifications/Notifications.jsx":"55","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Notifications/NotificationItem/NotificationItem.jsx":"56","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Notifications/NotificationsModal/NotificationModalItem/NotificationModalItemMenu/NotificationModalItemMenu.jsx":"57","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Notifications/NotificationsModal/NotificationsModal.jsx":"58","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Notifications/NotificationsModal/NotificationModalItem/NotificationModalItem.jsx":"59","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/learners.js":"60","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Programs/ProgramItem/ProgramItem.jsx":"61","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/index.js":"62","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/ErrorBoundry.js":"63","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/PageNotFound.js":"64","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/PrivateRoute.js":"65","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Store/Reducers/index.js":"66","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Common/FormControlls/FormControlls.js":"67","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Navbar/NavbarContainer.jsx":"68","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Common/Preloader/Preloader.jsx":"69","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Common/ProgressBar/ProgressBar.jsx":"70","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Common/SearchModal/SearchModal.jsx":"71","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Common/Cutsom/Select/CustomSelect.jsx":"72","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/index.js":"73","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Layout/Main/index.js":"74","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Navbar/Navbar.jsx":"75","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Store/Reducers/authentication.js":"76","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Programs/Routes.js":"77","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Activities/Routes.js":"78","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Library/LibraryContainer.jsx":"79","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Navbar/Submenu/Submenu.jsx":"80","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Services/index.js":"81","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Utils/actionTypes.js":"82","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Services/authentication.js":"83","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Config/constants.js":"84","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Library/Library.jsx":"85","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Activities/index.js":"86","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Activities/ActivitiesContainer.jsx":"87","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Activities/EditActivity/EditActivity.jsx":"88","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Activities/AddActivity/AddActivity.jsx":"89","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Activities/ActivityItem/ActivityItem.jsx":"90","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Navbar/ProfileMenu/ProfileMenu.jsx":"91","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Navbar/Burger/Burger.jsx":"92","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Activities/Activities.jsx":"93","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Navbar/Burger/BurgerMenu.jsx":"94","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Activities/ActivityFile/ActivityFile.jsx":"95","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Layout/PageLayout/Main.js":"96","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Layout/PageLayout/PageHeader.js":"97","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Activities/Activity.jsx":"98","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Activities/Chat/Chat.jsx":"99","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Activities/Chat/Message/Message.jsx":"100","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Programs/AddEdit/index.js":"101","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Activities/AddActivity/AddActivityManager.jsx":"102","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Programs/AddProgram/AddProgram.jsx":"103","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Programs/EditProgram/EditProgram.jsx":"104","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Home/Programs/HomePrograms.jsx":"105","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Programs/ProgramDetails/ProgramView/ProgramViewContainer.jsx":"106","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Programs/ProgramDetails/ProgramAttendees/ProgramAttendeesContainer.jsx":"107","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Home/Activities/LearnerHomeActivities/HomeActivities.jsx":"108","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Home/Activities/ManagerHomeActivities/ManagerHomeActivities.jsx":"109","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Courses/CourseRoutes.jsx":"110","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/DeleteModal/DeleteModal.jsx":"111","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Activities/RepeatOptions/RepeatOptions.jsx":"112","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Programs/ProgramDetails/ProgramView/ProgramView.jsx":"113","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Programs/ProgramDetails/ProgramAttendees/ProgramAttendees.jsx":"114","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Courses/AddCourse/AddCourse.jsx":"115","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Courses/EditCourse/EditCourse.jsx":"116","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Common/FormControlls/SearchInput/SearchInput.jsx":"117","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Common/FormControlls/FileControlls/FieldImageInput.jsx":"118","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Courses/AddCourse/LessonFileCourse/LessonFileCourse.jsx":"119","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Common/FormControlls/FileControlls/ImageFile/ImageFile.jsx":"120","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Themes/index.js":"121","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Config/axios.js":"122","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Store/Reducers/users.js":"123","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Services/users.js":"124","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Common/TextEditor/index.js":"125","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Utils/buildQuery.js":"126","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/NotificationMiddleware.js":"127","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Store/Reducers/global.js":"128","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/SnackProvider.js":"129","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Courses/AddEdit/index.js":"130","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Courses/AddEdit/AddEdit.jsx":"131","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/FileDrop/index.js":"132","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/FileDrop/FileDrop.jsx":"133","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Courses/CourseDetails/index.js":"134","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Themes/Colors.js":"135","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Courses/CourseDetails/Main.jsx":"136","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Courses/CourseDetails/Components/index.js":"137","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Courses/CourseDetails/Components/Header/index.js":"138","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Courses/CourseDetails/Components/Body/index.js":"139","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Courses/CourseDetails/Components/Body/Body.jsx":"140","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Courses/CourseDetails/Components/Header/Header.jsx":"141","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Courses/CourseDetails/Components/Body/Components/index.js":"142","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Courses/CourseDetails/Components/Body/Components/LessonCard.jsx":"143","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Lessons/Lesson/Lesson.jsx":"144","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Lessons/Routes.jsx":"145","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Lessons/Lesson/index.js":"146","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Lessons/Lesson/Components/index.js":"147","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Lessons/Lesson/Components/Body/index.js":"148","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Lessons/Lesson/Components/Header/index.js":"149","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Lessons/Lesson/Components/Header/Header.jsx":"150","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Lessons/Lesson/Components/Body/Body.jsx":"151","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Lessons/AddEdit/index.js":"152","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Lessons/AddEdit/AddEdit.jsx":"153","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Services/lessons.js":"154","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Store/Reducers/lessons.js":"155","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/NoDataPlaceholder/index.js":"156","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/NoDataPlaceholder/NoDataPlaceHolder.jsx":"157","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Utils/general.js":"158","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Services/common.js":"159"},{"size":1208,"mtime":1612340516142,"results":"160","hashOfConfig":"161"},{"size":362,"mtime":1611643987381,"results":"162","hashOfConfig":"161"},{"size":541,"mtime":1611643987379,"results":"163","hashOfConfig":"161"},{"size":2532,"mtime":1611915513596,"results":"164","hashOfConfig":"161"},{"size":634,"mtime":1611643987379,"results":"165","hashOfConfig":"161"},{"size":1071,"mtime":1611643987244,"results":"166","hashOfConfig":"161"},{"size":1441,"mtime":1611643987244,"results":"167","hashOfConfig":"161"},{"size":1856,"mtime":1611643987242,"results":"168","hashOfConfig":"161"},{"size":1534,"mtime":1611643987246,"results":"169","hashOfConfig":"161"},{"size":1250,"mtime":1611643987244,"results":"170","hashOfConfig":"161"},{"size":728,"mtime":1611643987246,"results":"171","hashOfConfig":"161"},{"size":1007,"mtime":1611643987245,"results":"172","hashOfConfig":"161"},{"size":657,"mtime":1611643987245,"results":"173","hashOfConfig":"161"},{"size":645,"mtime":1611643987246,"results":"174","hashOfConfig":"161"},{"size":646,"mtime":1611643987243,"results":"175","hashOfConfig":"161"},{"size":962,"mtime":1611643987245,"results":"176","hashOfConfig":"161"},{"size":1206,"mtime":1611643987246,"results":"177","hashOfConfig":"161"},{"size":1568,"mtime":1611643987245,"results":"178","hashOfConfig":"161"},{"size":1015,"mtime":1612388160772,"results":"179","hashOfConfig":"161"},{"size":1720,"mtime":1611643987360,"results":"180","hashOfConfig":"161"},{"size":2860,"mtime":1612516438410,"results":"181","hashOfConfig":"161"},{"size":3106,"mtime":1612075976080,"results":"182","hashOfConfig":"161"},{"size":2599,"mtime":1612340516141,"results":"183","hashOfConfig":"161"},{"size":2131,"mtime":1611643987369,"results":"184","hashOfConfig":"161"},{"size":1871,"mtime":1611736475107,"results":"185","hashOfConfig":"161"},{"size":1390,"mtime":1612511836630,"results":"186","hashOfConfig":"161"},{"size":1568,"mtime":1611696807304,"results":"187","hashOfConfig":"161"},{"size":2337,"mtime":1611694949885,"results":"188","hashOfConfig":"161"},{"size":2272,"mtime":1611643987315,"results":"189","hashOfConfig":"161"},{"size":2090,"mtime":1611643987343,"results":"190","hashOfConfig":"161"},{"size":2961,"mtime":1611915513597,"results":"191","hashOfConfig":"161"},{"size":2759,"mtime":1611643987281,"results":"192","hashOfConfig":"161"},{"size":3426,"mtime":1611915513599,"results":"193","hashOfConfig":"161"},{"size":2150,"mtime":1611643987288,"results":"194","hashOfConfig":"161"},{"size":743,"mtime":1611643987333,"results":"195","hashOfConfig":"161"},{"size":5909,"mtime":1611643987340,"results":"196","hashOfConfig":"161"},{"size":3679,"mtime":1611643987328,"results":"197","hashOfConfig":"161"},{"size":1473,"mtime":1611643987310,"results":"198","hashOfConfig":"161"},{"size":2410,"mtime":1611643987313,"results":"199","hashOfConfig":"161"},{"size":2064,"mtime":1611643987308,"results":"200","hashOfConfig":"161"},{"size":2576,"mtime":1611643987309,"results":"201","hashOfConfig":"161"},{"size":1386,"mtime":1611643987284,"results":"202","hashOfConfig":"161"},{"size":3544,"mtime":1611643987290,"results":"203","hashOfConfig":"161"},{"size":2794,"mtime":1611643987331,"results":"204","hashOfConfig":"161"},{"size":5398,"mtime":1611643987332,"results":"205","hashOfConfig":"161"},{"size":1129,"mtime":1611643987338,"results":"206","hashOfConfig":"161"},{"size":1590,"mtime":1611643987288,"results":"207","hashOfConfig":"161"},{"size":2365,"mtime":1611643987330,"results":"208","hashOfConfig":"161"},{"size":1401,"mtime":1611643987287,"results":"209","hashOfConfig":"161"},{"size":1205,"mtime":1612516324040,"results":"210","hashOfConfig":"161"},{"size":821,"mtime":1612075929854,"results":"211","hashOfConfig":"161"},{"size":325,"mtime":1611643987352,"results":"212","hashOfConfig":"161"},{"size":599,"mtime":1611643987354,"results":"213","hashOfConfig":"161"},{"size":821,"mtime":1611643987303,"results":"214","hashOfConfig":"161"},{"size":1963,"mtime":1611643987299,"results":"215","hashOfConfig":"161"},{"size":3023,"mtime":1611643987296,"results":"216","hashOfConfig":"161"},{"size":2471,"mtime":1611643987305,"results":"217","hashOfConfig":"161"},{"size":3948,"mtime":1611643987307,"results":"218","hashOfConfig":"161"},{"size":2772,"mtime":1611643987304,"results":"219","hashOfConfig":"161"},{"size":2676,"mtime":1611643987245,"results":"220","hashOfConfig":"161"},{"size":3079,"mtime":1612340516140,"results":"221","hashOfConfig":"161"},{"size":2662,"mtime":1612340516137,"results":"222","hashOfConfig":"161"},{"size":816,"mtime":1611643987263,"results":"223","hashOfConfig":"161"},{"size":218,"mtime":1611643987270,"results":"224","hashOfConfig":"161"},{"size":1423,"mtime":1611643987270,"results":"225","hashOfConfig":"161"},{"size":458,"mtime":1612076958912,"results":"226","hashOfConfig":"161"},{"size":1477,"mtime":1611696807294,"results":"227","hashOfConfig":"161"},{"size":1757,"mtime":1611643987268,"results":"228","hashOfConfig":"161"},{"size":303,"mtime":1611643987259,"results":"229","hashOfConfig":"161"},{"size":767,"mtime":1611643987261,"results":"230","hashOfConfig":"161"},{"size":4058,"mtime":1611643987261,"results":"231","hashOfConfig":"161"},{"size":2631,"mtime":1611643987255,"results":"232","hashOfConfig":"161"},{"size":838,"mtime":1611915513606,"results":"233","hashOfConfig":"161"},{"size":862,"mtime":1611643987264,"results":"234","hashOfConfig":"161"},{"size":6953,"mtime":1611736475105,"results":"235","hashOfConfig":"161"},{"size":2330,"mtime":1611915513606,"results":"236","hashOfConfig":"161"},{"size":956,"mtime":1611643987330,"results":"237","hashOfConfig":"161"},{"size":1175,"mtime":1612513885610,"results":"238","hashOfConfig":"161"},{"size":1913,"mtime":1611643987294,"results":"239","hashOfConfig":"161"},{"size":2126,"mtime":1611643987269,"results":"240","hashOfConfig":"161"},{"size":326,"mtime":1612200133524,"results":"241","hashOfConfig":"161"},{"size":191,"mtime":1611643987377,"results":"242","hashOfConfig":"161"},{"size":339,"mtime":1611643987348,"results":"243","hashOfConfig":"161"},{"size":465,"mtime":1612516232634,"results":"244","hashOfConfig":"161"},{"size":3297,"mtime":1611643987293,"results":"245","hashOfConfig":"161"},{"size":326,"mtime":1611643987280,"results":"246","hashOfConfig":"161"},{"size":2885,"mtime":1612512640459,"results":"247","hashOfConfig":"161"},{"size":9363,"mtime":1612507499212,"results":"248","hashOfConfig":"161"},{"size":9326,"mtime":1611643987276,"results":"249","hashOfConfig":"161"},{"size":3969,"mtime":1611643987275,"results":"250","hashOfConfig":"161"},{"size":2959,"mtime":1611643987268,"results":"251","hashOfConfig":"161"},{"size":1551,"mtime":1611643987266,"results":"252","hashOfConfig":"161"},{"size":5195,"mtime":1612516642752,"results":"253","hashOfConfig":"161"},{"size":2751,"mtime":1611643987266,"results":"254","hashOfConfig":"161"},{"size":1069,"mtime":1611643987274,"results":"255","hashOfConfig":"161"},{"size":552,"mtime":1612340516136,"results":"256","hashOfConfig":"161"},{"size":1621,"mtime":1611696807298,"results":"257","hashOfConfig":"161"},{"size":7746,"mtime":1612507305156,"results":"258","hashOfConfig":"161"},{"size":2391,"mtime":1611643987276,"results":"259","hashOfConfig":"161"},{"size":2356,"mtime":1611643987277,"results":"260","hashOfConfig":"161"},{"size":7158,"mtime":1612340516139,"results":"261","hashOfConfig":"161"},{"size":11042,"mtime":1611643987276,"results":"262","hashOfConfig":"161"},{"size":4836,"mtime":1611132956831,"results":"263","hashOfConfig":"161"},{"size":5949,"mtime":1611132956832,"results":"264","hashOfConfig":"161"},{"size":1710,"mtime":1611643987289,"results":"265","hashOfConfig":"161"},{"size":2438,"mtime":1611819573019,"results":"266","hashOfConfig":"161"},{"size":2375,"mtime":1611819573018,"results":"267","hashOfConfig":"161"},{"size":1760,"mtime":1611643987286,"results":"268","hashOfConfig":"161"},{"size":3503,"mtime":1611643987287,"results":"269","hashOfConfig":"161"},{"size":799,"mtime":1611786977301,"results":"270","hashOfConfig":"161"},{"size":1168,"mtime":1611643987262,"results":"271","hashOfConfig":"161"},{"size":8232,"mtime":1611643987279,"results":"272","hashOfConfig":"161"},{"size":4693,"mtime":1611915513605,"results":"273","hashOfConfig":"161"},{"size":3696,"mtime":1611643987323,"results":"274","hashOfConfig":"161"},{"size":5158,"mtime":1611643987282,"results":"275","hashOfConfig":"161"},{"size":5361,"mtime":1611643987286,"results":"276","hashOfConfig":"161"},{"size":357,"mtime":1611643987258,"results":"277","hashOfConfig":"161"},{"size":2367,"mtime":1611643987255,"results":"278","hashOfConfig":"161"},{"size":894,"mtime":1611643987283,"results":"279","hashOfConfig":"161"},{"size":705,"mtime":1611643987257,"results":"280","hashOfConfig":"161"},{"size":1565,"mtime":1611915513609,"results":"281","hashOfConfig":"161"},{"size":856,"mtime":1611643987272,"results":"282","hashOfConfig":"161"},{"size":1443,"mtime":1611643987371,"results":"283","hashOfConfig":"161"},{"size":326,"mtime":1611643987355,"results":"284","hashOfConfig":"161"},{"size":614,"mtime":1611681451149,"results":"285","hashOfConfig":"161"},{"size":663,"mtime":1611643987378,"results":"286","hashOfConfig":"161"},{"size":885,"mtime":1612388160771,"results":"287","hashOfConfig":"161"},{"size":861,"mtime":1611643987363,"results":"288","hashOfConfig":"161"},{"size":999,"mtime":1612388160772,"results":"289","hashOfConfig":"161"},{"size":48,"mtime":1611696807301,"results":"290","hashOfConfig":"161"},{"size":4955,"mtime":1612388160772,"results":"291","hashOfConfig":"161"},{"size":50,"mtime":1611696807296,"results":"292","hashOfConfig":"161"},{"size":1484,"mtime":1612340516136,"results":"293","hashOfConfig":"161"},{"size":51,"mtime":1611736969899,"results":"294","hashOfConfig":"161"},{"size":156,"mtime":1611915513608,"results":"295","hashOfConfig":"161"},{"size":1111,"mtime":1612256052196,"results":"296","hashOfConfig":"161"},{"size":66,"mtime":1611786977300,"results":"297","hashOfConfig":"161"},{"size":46,"mtime":1611786977299,"results":"298","hashOfConfig":"161"},{"size":42,"mtime":1611786977298,"results":"299","hashOfConfig":"161"},{"size":788,"mtime":1612340516138,"results":"300","hashOfConfig":"161"},{"size":2489,"mtime":1612340516139,"results":"301","hashOfConfig":"161"},{"size":54,"mtime":1611786977297,"results":"302","hashOfConfig":"161"},{"size":1584,"mtime":1612121952682,"results":"303","hashOfConfig":"161"},{"size":888,"mtime":1612256052197,"results":"304","hashOfConfig":"161"},{"size":377,"mtime":1611992308042,"results":"305","hashOfConfig":"161"},{"size":46,"mtime":1611915513604,"results":"306","hashOfConfig":"161"},{"size":66,"mtime":1611915513603,"results":"307","hashOfConfig":"161"},{"size":42,"mtime":1611915513600,"results":"308","hashOfConfig":"161"},{"size":46,"mtime":1611915513602,"results":"309","hashOfConfig":"161"},{"size":2496,"mtime":1612256052196,"results":"310","hashOfConfig":"161"},{"size":473,"mtime":1611939584975,"results":"311","hashOfConfig":"161"},{"size":48,"mtime":1612076958911,"results":"312","hashOfConfig":"161"},{"size":3220,"mtime":1612256052196,"results":"313","hashOfConfig":"161"},{"size":782,"mtime":1612200133524,"results":"314","hashOfConfig":"161"},{"size":3086,"mtime":1612256052197,"results":"315","hashOfConfig":"161"},{"size":68,"mtime":1612121952681,"results":"316","hashOfConfig":"161"},{"size":517,"mtime":1612121952680,"results":"317","hashOfConfig":"161"},{"size":93,"mtime":1612121952686,"results":"318","hashOfConfig":"161"},{"size":233,"mtime":1612207200633,"results":"319","hashOfConfig":"161"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},"lnu326",{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"322"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"322"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"322"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"376","messages":"377","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"322"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"322"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"322"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"322"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"322"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"322"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"322"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"403","usedDeprecatedRules":"322"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"322"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"322"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412","usedDeprecatedRules":"322"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"322"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418","usedDeprecatedRules":"322"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"322"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"322"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427","usedDeprecatedRules":"322"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"322"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"322"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436","usedDeprecatedRules":"322"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"439","usedDeprecatedRules":"322"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"442","usedDeprecatedRules":"322"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"445","usedDeprecatedRules":"322"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"456","usedDeprecatedRules":"322"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459","usedDeprecatedRules":"322"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462","usedDeprecatedRules":"322"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"465","usedDeprecatedRules":"322"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"468","usedDeprecatedRules":"322"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"473","usedDeprecatedRules":"322"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"486","usedDeprecatedRules":"322"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"491","usedDeprecatedRules":"322"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"496","usedDeprecatedRules":"322"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"499","usedDeprecatedRules":"322"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"504","usedDeprecatedRules":"322"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"507","usedDeprecatedRules":"322"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"518","usedDeprecatedRules":"322"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"527","messages":"528","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"529","usedDeprecatedRules":"322"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"534","messages":"535","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"536","usedDeprecatedRules":"322"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"539","usedDeprecatedRules":"322"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"542","usedDeprecatedRules":"322"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"545","usedDeprecatedRules":"322"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"550","messages":"551","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"552","usedDeprecatedRules":"322"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"555","usedDeprecatedRules":"322"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"560","usedDeprecatedRules":"322"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"563","usedDeprecatedRules":"322"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"566","usedDeprecatedRules":"322"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"569","usedDeprecatedRules":"322"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"572","usedDeprecatedRules":"322"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"575","usedDeprecatedRules":"322"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"578","usedDeprecatedRules":"579"},{"filePath":"580","messages":"581","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"582","usedDeprecatedRules":"579"},{"filePath":"583","messages":"584","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"585","usedDeprecatedRules":"322"},{"filePath":"586","messages":"587","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"588","usedDeprecatedRules":"322"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"591","usedDeprecatedRules":"322"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"594","usedDeprecatedRules":"322"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"597","usedDeprecatedRules":"322"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"600","usedDeprecatedRules":"322"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"603","usedDeprecatedRules":"322"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"606","usedDeprecatedRules":"322"},{"filePath":"607","messages":"608","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"609","usedDeprecatedRules":"322"},{"filePath":"610","messages":"611","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"612","usedDeprecatedRules":"322"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"615","usedDeprecatedRules":"322"},{"filePath":"616","messages":"617","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"618","usedDeprecatedRules":"322"},{"filePath":"619","messages":"620","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"623","usedDeprecatedRules":"322"},{"filePath":"624","messages":"625","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"626","usedDeprecatedRules":"322"},{"filePath":"627","messages":"628","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"629","usedDeprecatedRules":"322"},{"filePath":"630","messages":"631","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"632","messages":"633","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"634","usedDeprecatedRules":"322"},{"filePath":"635","messages":"636","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"637","messages":"638","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"639","messages":"640","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"641","messages":"642","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"643","usedDeprecatedRules":"322"},{"filePath":"644","messages":"645","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"646","usedDeprecatedRules":"322"},{"filePath":"647","messages":"648","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"649","usedDeprecatedRules":"322"},{"filePath":"650","messages":"651","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"652","messages":"653","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"654","messages":"655","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"656","usedDeprecatedRules":"322"},{"filePath":"657","messages":"658","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"659","messages":"660","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"661","usedDeprecatedRules":"322"},{"filePath":"662","messages":"663","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"664","messages":"665","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"666","messages":"667","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"668","usedDeprecatedRules":"322"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"671","messages":"672","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"673","messages":"674","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"675","messages":"676","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"677","messages":"678","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"679","messages":"680","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"681","messages":"682","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"683","messages":"684","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"685","usedDeprecatedRules":"322"},{"filePath":"686","messages":"687","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"688","messages":"689","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"690","messages":"691","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"692","messages":"693","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"694","messages":"695","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"696","messages":"697","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"698","usedDeprecatedRules":"322"},{"filePath":"699","messages":"700","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"701","messages":"702","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"703","messages":"704","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"705","usedDeprecatedRules":"322"},{"filePath":"706","messages":"707","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"708","messages":"709","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"710","messages":"711","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"712","messages":"713","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"714","messages":"715","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"716","messages":"717","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/index.js",[],["718","719"],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/reportWebVitals.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Utils/i18n.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/App.js",["720","721","722"],"import React, { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\n\nimport { MainLayout, PageNotFound, PrivateRoute } from 'Components';\nimport { setDirection, setCurrentLanguage } from 'Store/Reducers/common';\nimport { getUserProfile } from 'Store/Reducers/authentication';\nimport {\n  Home,\n  Programs,\n  Library,\n  Notifications,\n  Reports,\n  Activities,\n  SearchResult,\n  Login,\n  ForgotPassword,\n  Profile,\n  CourseRoutes,\n  Lessons,\n} from 'Pages';\nimport './App.css';\nimport { AUTH_TOKEN_KEY } from 'Config/constants';\n\nconst App = props => {\n  const { t, i18n } = useTranslation();\n\n  useEffect(() => {\n    const token = sessionStorage.getItem(AUTH_TOKEN_KEY) || localStorage.getItem(AUTH_TOKEN_KEY);\n    if (token) props.getUserProfile(token);\n  }, []);\n\n  const changeLanguage = language => {\n    switch (language) {\n      case 'en': {\n        props.setDirection('ltr');\n        break;\n      }\n      case 'ar': {\n        props.setDirection('rtl');\n        break;\n      }\n      default: {\n        props.setDirection('ltr');\n        break;\n      }\n    }\n    i18n.changeLanguage(language);\n  };\n\n  return (\n    <Router>\n      <MainLayout direction={props.direction} changeLanguage={changeLanguage}>\n        <Switch>\n          <Route exact path=\"/\" render={() => <Redirect to=\"/home\" />} />\n          <Route path=\"/home\" component={Home} />\n          <Route path=\"/courses\" component={CourseRoutes} />\n          <Route path=\"/lessons\" component={Lessons} />\n          <Route path=\"/activities\" component={Activities} />\n          <Route path=\"/programs\" component={Programs} />\n          <Route path=\"/profile\" component={Profile} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/forgot_password\" component={ForgotPassword} />\n          <Route path=\"/report\" component={Reports} />\n          <Route path=\"/search\" component={SearchResult} />\n          <Route path=\"/home/notifications\" component={Notifications} />\n          <Route path=\"/library\" component={Library} />\n          <Route component={PageNotFound} />\n        </Switch>\n      </MainLayout>\n    </Router>\n  );\n};\n\nlet mapStateToProps = state => ({\n  direction: state.common.direction,\n  currentLanguage: state.common.currentLanguage,\n  profile: state.authentication.profile,\n});\n\nexport default connect(mapStateToProps, {\n  setDirection,\n  setCurrentLanguage,\n  getUserProfile,\n})(App);\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Utils/validators.js",["723"],"export const required = (value) =>{\n    if(value) return undefined;\n    \n    return 'The field is required!';\n}\n\nexport const foo = console.log;\n\nexport const isEmail = (value) => {\n    let rep = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\n    if(rep.test(value)){\n        return undefined;\n    }\n    return 'Incorrect email!';   \n}\nexport const passValidationMatch = (value, allValues) => {\n    if(value !== allValues.newPassword) return `Passwords didn't match!`;\n    return undefined;\n}\n\nexport const emailValidationMatch = (value, allValues) => {\n    if(value !== allValues.newEmail) return `Emails didn't match!`;\n    return undefined;\n}","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/empty_state_icon.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/courses.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/activities.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/programicon.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/homeicon.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/searchicon.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/notification.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/myreport.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/planet_icon.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/clock.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/library.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/profile_settings_icon.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/logout_icon.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Store/reduxStore.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Store/Reducers/common.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Store/Reducers/activities.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Store/Reducers/courses.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Store/Reducers/programs.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Store/Reducers/notifications.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Courses/CoursesContainer.jsx",["724"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Preloader } from 'Components';\nimport { getCourses } from 'Store/Reducers/courses';\nimport Courses from './Courses';\n\nconst CoursesContainer = props => {\n  useEffect(() => {\n    if (props.page && props.take) {\n      props.getCourses(props.profile.organizationId, props.page, props.take);\n    }\n  }, []);\n\n  const [all, setAll] = useState(true);\n  const [completed, setCompleted] = useState(true);\n  const [inProgress, setInProgress] = useState(true);\n  const [notStarted, setNotStarted] = useState(true);\n\n  const handleAll = () => {\n    let newAll = !all;\n    setAll(!all);\n    if (newAll) {\n      setCompleted(true);\n      setInProgress(true);\n      setNotStarted(true);\n      return;\n    } else {\n      setCompleted(false);\n      setInProgress(false);\n      setNotStarted(false);\n    }\n  };\n\n  useEffect(() => {\n    if (completed && inProgress && notStarted) {\n      setAll(true);\n    } else {\n      setAll(false);\n    }\n  }, [completed, inProgress, notStarted]);\n\n  return (\n    <>\n      {props.courses.loading ? (\n        <Preloader />\n      ) : (\n        <Courses\n          courses={props.courses}\n          direction={props.direction}\n          all={all}\n          setAll={handleAll}\n          completed={completed}\n          setCompleted={setCompleted}\n          inProgress={inProgress}\n          setInProgress={setInProgress}\n          notStarted={notStarted}\n          setNotStarted={setNotStarted}\n        />\n      )}\n    </>\n  );\n};\n\nlet mapStateToProps = state => ({\n  courses: state.courses,\n  profile: state.authentication.profile,\n  isFetching: state.common.isFetching,\n  page: state.courses.page,\n  take: state.courses.take,\n  direction: state.common.direction,\n});\n\nexport default connect(mapStateToProps, {\n  getCourses,\n})(CoursesContainer);\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Home/HomeContainer.jsx",["725","726"],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Reports/ReportsContainer.jsx",["727","728","729"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Preloader } from '../../Components';\nimport Reports from './Reports';\nimport { getActivities } from '../../Store/Reducers/activities';\nimport { getJoinedCourses } from '../../Store/Reducers/courses';\n\nconst ReportsContainer = props => {\n  useEffect(() => {\n    if (props.profile.employeeId) {\n      console.log('asd');\n      props.getActivities(props.profile.employeeId, props.profile.userId, props.profile.organizationId);\n    }\n  }, [props.profile.employeeId]);\n\n  useEffect(() => {\n    props.getJoinedCourses(props.profile.joinedCourses);\n  }, [props.profile.joinedCourses]);\n\n  return (\n    <>\n      {props.isFetching ? (\n        <Preloader />\n      ) : (\n        <>\n          {\n            <Reports\n              user={props.profile}\n              courses={props.courses}\n              activities={props.activities}\n              direction={props.direction}\n              programs={props.programs}\n            />\n          }{' '}\n        </>\n      )}\n    </>\n  );\n};\n\nlet mapStateToProps = state => ({\n  isFetching: state.common.isFetching,\n  profile: state.authentication.profile,\n  isAuthenticated: state.authentication.isAuthenticated,\n  courses: state.courses.joinedCourses,\n  activities: state.activities.currentActivity,\n  page: state.courses.page,\n  take: state.courses.take,\n  direction: state.common.direction,\n  programs: state.programs.programs,\n});\n\nexport default connect(mapStateToProps, {\n  getActivities,\n  getJoinedCourses,\n})(ReportsContainer);\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Programs/ProgramsContainer.jsx",["730"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport { resetGlobalState } from 'Store/Reducers/global';\nimport { getPrograms, resetProgramsState } from 'Store/Reducers/programs';\nimport { Preloader } from 'Components';\nimport Programs from './Programs';\n\nconst ProgramsContainer = props => {\n  useEffect(() => {\n    if (props.profile.organizationId) {\n      props.getPrograms(props.profile.organizationId, props.pageId, props.perPage);\n    }\n\n    return () => {\n      props.resetProgramsState();\n      props.resetGlobalState();\n    };\n  }, []);\n\n  const [all, setAll] = useState(true);\n  const [completed, setCompleted] = useState(true);\n  const [inProgress, setInProgress] = useState(true);\n  const [notStarted, setNotStarted] = useState(true);\n\n  const handleAll = () => {\n    let newAll = !all;\n    setAll(!all);\n    if (newAll) {\n      setCompleted(true);\n      setInProgress(true);\n      setNotStarted(true);\n      return;\n    } else {\n      setCompleted(false);\n      setInProgress(false);\n      setNotStarted(false);\n    }\n  };\n\n  useEffect(() => {\n    if (completed && inProgress && notStarted) {\n      setAll(true);\n    } else {\n      setAll(false);\n    }\n  }, [completed, inProgress, notStarted]);\n\n  useEffect(() => {\n    if (props.programs.length < 1) {\n      setAll(false);\n      setCompleted(false);\n      setInProgress(false);\n      setNotStarted(false);\n    }\n  }, [props.programs]);\n\n  return (\n    <>\n      {props.isFetching ? (\n        <Preloader />\n      ) : (\n        <Programs\n          programs={props.programs}\n          direction={props.direction}\n          all={all}\n          setAll={handleAll}\n          completed={completed}\n          setCompleted={setCompleted}\n          inProgress={inProgress}\n          setInProgress={setInProgress}\n          notStarted={notStarted}\n          setNotStarted={setNotStarted}\n          user={props.profile}\n        />\n      )}\n    </>\n  );\n};\n\nlet mapStateToProps = state => ({\n  profile: state.authentication.profile,\n  programs: state.programs.programs,\n  isFetching: state.common.isFetching,\n  direction: state.common.direction,\n  pageId: state.programs.pageId,\n  perPage: state.programs.perPage,\n});\n\nexport default connect(mapStateToProps, {\n  getPrograms,\n  resetProgramsState,\n  resetGlobalState,\n})(ProgramsContainer);\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Profile/Profile.jsx",["731"],"import React from 'react';\nimport { connect } from 'react-redux';\nimport classes from './Profile.module.css';\nimport { useTranslation } from 'react-i18next';\nimport { NavLink, Redirect, Route } from 'react-router-dom';\nimport ProfileInfo from './Info/ProfileInfo';\nimport ProfileEmail from './Email/ProfileEmail';\nimport ProfilePassword from './Password/ProfilePassword';\nimport ProfileNotifications from './Notifications/ProfileNotifications';\n\nconst Profile = props => {\n  const { t, i18n } = useTranslation();\n  return (\n    <div className={classes.main}>\n      <div className={classes.container}>\n        <h1>{t('profile.title')}</h1>\n        <div className={classes.body}>\n          <div className={classes.menu}>\n            <div className={classes.menuItem}>\n              <NavLink to=\"/profile/info\" activeClassName={classes.active}>\n                {t('profile.tabs.info')}\n              </NavLink>\n            </div>\n            <div className={classes.menuItem}>\n              <NavLink to=\"/profile/email\" activeClassName={classes.active}>\n                {t('profile.tabs.email')}\n              </NavLink>\n            </div>\n            <div className={classes.menuItem}>\n              <NavLink to=\"/profile/password\" activeClassName={classes.active}>\n                {t('profile.tabs.password')}\n              </NavLink>\n            </div>\n            <div className={classes.menuItem}>\n              <NavLink to=\"/profile/notifications\" activeClassName={classes.active}>\n                {t('profile.tabs.notifications')}\n              </NavLink>\n            </div>\n          </div>\n          <div className={classes.content}>\n            <Route exact path=\"/profile\">\n              <Redirect to=\"/profile/info\" />\n            </Route>\n            <Route path=\"/profile/info\" render={() => <ProfileInfo />} />\n            <Route path=\"/profile/email\" render={() => <ProfileEmail />} />\n            <Route path=\"/profile/password\" render={() => <ProfilePassword />} />\n            <Route path=\"/profile/notifications\" render={() => <ProfileNotifications />} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nlet mapStateToProps = state => ({\n  profile: state.authentication.profile,\n});\n\nexport default connect(mapStateToProps, {})(Profile);\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/SearchResult/SearchResultContainer.jsx",["732","733","734"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Preloader } from '../../Components';\nimport SearchResult from './SearchResult';\nimport { setSearchValue } from '../../Store/Reducers/common';\n\nconst SearchResultContainer = props => {\n  const [searchValue, setSearchValue] = useState('');\n\n  const [viewAll, setViewAll] = useState(true);\n  const [viewPrograms, setViewPrograms] = useState(true);\n  const [viewCourses, setViewCourses] = useState(true);\n  const [viewActivities, setViewActivities] = useState(true);\n\n  const handleViewAll = () => {\n    let newViewAll = !viewAll;\n    setViewAll(!viewAll);\n    if (newViewAll) {\n      setViewPrograms(true);\n      setViewCourses(true);\n      setViewActivities(true);\n      return;\n    } else {\n      setViewPrograms(false);\n      setViewCourses(false);\n      setViewActivities(false);\n    }\n  };\n\n  useEffect(() => {\n    if (viewActivities && viewCourses && viewPrograms) {\n      setViewAll(true);\n    } else {\n      setViewAll(false);\n    }\n  }, [viewPrograms, viewCourses, viewActivities]);\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    props.setSearchValue(urlParams.get('value'));\n  }, []);\n\n  useEffect(() => {\n    console.log('search');\n  }, [props.searchValue]);\n\n  return (\n    <>\n      {props.isFetching ? (\n        <Preloader />\n      ) : (\n        <SearchResult\n          searchValue={props.searchValue}\n          viewAll={viewAll}\n          setViewAll={handleViewAll}\n          viewCourses={viewCourses}\n          setViewCourses={setViewCourses}\n          viewPrograms={viewPrograms}\n          setViewPrograms={setViewPrograms}\n          viewActivities={viewActivities}\n          setViewActivities={setViewActivities}\n          direction={props.direction}\n        />\n      )}\n    </>\n  );\n};\n\nlet mapStateToProps = state => ({\n  isFetching: state.common.isFetching,\n  searchValue: state.common.searchValue,\n  direction: state.common.direction,\n});\n\nexport default connect(mapStateToProps, {\n  setSearchValue,\n})(SearchResultContainer);\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Auth/Login/Login.jsx",["735","736","737","738","739"],"import React, { useEffect, useState } from 'react';\nimport classes from '../Auth.module.css';\nimport { reduxForm, Field } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { AuthInput, Preloader } from 'Components';\nimport { useTranslation } from 'react-i18next';\nimport { login } from 'Store/Reducers/authentication';\nimport { setCurrentRoute } from 'Store/Reducers/common';\nimport { isEmail, required } from 'Utils/validators';\n\nconst LoginForm = props => {\n  const { t, i18n } = useTranslation();\n  return (\n    <form className={classes.form} onSubmit={props.handleSubmit}>\n      <h3>{t('login.title')}</h3>\n      <div className={classes.field}>\n        <label>{t('login.username')}</label>\n        <Field\n          component={AuthInput}\n          placeholder={t('login.usernamePlaceholder')}\n          name=\"email\"\n          validate={[required, isEmail]}\n        />\n      </div>\n      <div className={classes.field}>\n        <label>{t('login.password')}</label>\n        <Field\n          component={AuthInput}\n          placeholder={t('login.passwordPlaceholder')}\n          name=\"password\"\n          type=\"password\"\n          validate={[required]}\n        />\n      </div>\n      <label className={classes.checkbox}>\n        <span className={classes.checkText}>{t('login.rememberMe')}</span>\n        <input\n          type=\"checkbox\"\n          onChange={() => {\n            props.setIsRememberMe(!props.isRememberMe);\n          }}\n          value={props.isRememberMe}\n        />\n        <span className={classes.checkmark}></span>\n      </label>\n      <NavLink to=\"/forgot_password\">{t('login.forgotPassword')}</NavLink>\n      {props.error && <div className={classes.error}>{props.error}</div>}\n      <button>{t('login.login')}</button>\n    </form>\n  );\n};\n\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm);\n\nconst Login = props => {\n  const [isRememberMe, setIsRememberMe] = useState(false);\n  const { t, i18n } = useTranslation();\n\n  useEffect(() => {\n    props.setCurrentRoute(window.location.pathname);\n  }, []);\n\n  const onSubmit = formData => {\n    props.login(formData.email, formData.password, isRememberMe);\n  };\n\n  if (props.isAuthenticated) {\n    const { from } = props.location.state || { from: { pathname: '/home', search: props.location.search } };\n\n    return <Redirect to={from} />;\n  }\n\n  return (\n    <div className={classes.main}>\n      <div className={classes.login}>\n        <h1>{t('login.header')}</h1>\n        {props.loading && <Preloader />}\n        <LoginReduxForm onSubmit={onSubmit} isRememberMe={isRememberMe} setIsRememberMe={setIsRememberMe} />\n      </div>\n      <div className={classes.back}>\n        <div></div>\n        <div className={classes.green}></div>\n      </div>\n    </div>\n  );\n};\n\nlet mapStateToProps = state => ({\n  loading: state.authentication.loading,\n  isAuthenticated: state.authentication.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, {\n  login,\n  setCurrentRoute,\n})(Login);\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Auth/Forgot/ForgotPassword.jsx",["740","741","742"],"import React, { useEffect } from 'react';\nimport classes from '../Auth.module.css';\nimport { useTranslation } from 'react-i18next';\nimport { Field, reduxForm } from 'redux-form';\nimport { AuthInput, Preloader } from '../../../Components';\nimport { required, passValidationMatch } from '../../../Utils/validators';\nimport { connect } from 'react-redux';\nimport { setCurrentRoute } from '../../../Store/Reducers/common';\nimport { Redirect } from 'react-router-dom';\n\nconst ForgotPasswordForm = props => {\n  const { t, i18n } = useTranslation();\n  return (\n    <form className={classes.form} onSubmit={props.handleSubmit}>\n      <h3>{t('forgotPassword.title')}</h3>\n      <div className={classes.field}>\n        <label>{t('forgotPassword.oldPassword')}</label>\n        <Field\n          component={AuthInput}\n          placeholder={t('forgotPassword.oldPassword')}\n          name=\"oldPassword\"\n          type=\"password\"\n          validate={[required]}\n        />\n      </div>\n      <div className={classes.field}>\n        <label>{t('forgotPassword.newPassword')}</label>\n        <Field\n          component={AuthInput}\n          placeholder={t('forgotPassword.newPassword')}\n          name=\"newPassword\"\n          type=\"password\"\n          validate={[required]}\n        />\n      </div>\n      <div className={classes.field}>\n        <label>{t('forgotPassword.repeatPassword')}</label>\n        <Field\n          component={AuthInput}\n          placeholder={t('forgotPassword.repeatPassword')}\n          name=\"repeatPassword\"\n          type=\"password\"\n          validate={[required, passValidationMatch]}\n        />\n      </div>\n      {props.error && <div className={classes.error}>{props.error}</div>}\n      <button>{t('forgotPassword.submit')}</button>\n    </form>\n  );\n};\n\nconst ForgotPasswordReduxForm = reduxForm({ form: 'forgotPass' })(ForgotPasswordForm);\n\nconst ForgotPassword = props => {\n  const { t, i18n } = useTranslation();\n\n  const onSubmit = formData => {\n    console.log(formData);\n  };\n\n  useEffect(() => {\n    props.setCurrentRoute(window.location.pathname);\n  }, []);\n\n  return (\n    <div className={classes.main}>\n      {(localStorage.usertoken || sessionStorage.usertoken) && <Redirect to=\"/\" />}\n      <div className={classes.login}>\n        <h1>{t('forgotPassword.header')}</h1>\n        {props.isFetching && <Preloader />}\n        <ForgotPasswordReduxForm onSubmit={onSubmit} />\n      </div>\n      <div className={classes.back}>\n        <div></div>\n        <div className={classes.green}></div>\n      </div>\n    </div>\n  );\n};\n\nlet mapStateToProps = state => ({\n  isFetching: state.common.isFetching,\n  isAuthenticated: state.authentication.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, {\n  setCurrentRoute,\n})(ForgotPassword);\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Courses/Courses.jsx",["743","744","745","746"],"import React, { useEffect, useState } from 'react';\nimport { NavLink, useParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\n\nimport CourseItemView from './CourseItemView/CourseItemView';\nimport classes from './Courses.module.css';\n\nconst StyledLabel = styled.label`\n  margin-left: ${({ direction }) => (direction === 'rtl' ? '56px' : '0')};\n  margin-right: ${({ direction }) => (direction === 'ltr' ? '56px' : '0')};\n`;\n\nconst Courses = props => {\n  const urlParams = useParams();\n  const { t, i18n } = useTranslation();\n\n  let courses = props.courses.map(item => {\n    return <CourseItemView item={item} key={item.courseId} />;\n  });\n\n  return (\n    <div className={classes.main}>\n      <div className={classes.coursesHeader}>\n        <div className={classes.coursesHeaderContainer}>\n          <h1>{t('courses.title')}</h1>\n          <div className={classes.headerHeader}>\n            <h1>{t('programs.title')}</h1>\n            <NavLink to=\"/courses/add\">\n              <span>+</span>\n              Add course\n            </NavLink>\n          </div>\n          <div className={classes.filters}>\n            <StyledLabel className={classes.filter} direction={props.direction}>\n              <span className={classes.filterText}>{t('courses.filters.all')}</span>\n              <input\n                type=\"checkbox\"\n                onChange={() => {\n                  props.setAll();\n                }}\n                checked={props.all}\n              />\n              <span className={classes.checkmark}></span>\n            </StyledLabel>\n            <StyledLabel className={classes.filter} direction={props.direction}>\n              <span className={classes.filterText}>{t('courses.filters.completed')}</span>\n              <input\n                type=\"checkbox\"\n                onChange={() => {\n                  props.setCompleted(!props.completed);\n                }}\n                checked={props.completed}\n              />\n              <span className={classes.checkmark}></span>\n            </StyledLabel>\n            <StyledLabel className={classes.filter} direction={props.direction}>\n              <span className={classes.filterText}>{t('courses.filters.inProgress')}</span>\n              <input\n                type=\"checkbox\"\n                onChange={() => {\n                  props.setInProgress(!props.inProgress);\n                }}\n                checked={props.inProgress}\n              />\n              <span className={classes.checkmark}></span>\n            </StyledLabel>\n            <StyledLabel className={classes.filter} direction={props.direction}>\n              <span className={classes.filterText}>{t('courses.filters.notStarted')}</span>\n              <input\n                type=\"checkbox\"\n                onChange={() => {\n                  props.setNotStarted(!props.notStarted);\n                }}\n                checked={props.notStarted}\n              />\n              <span className={classes.checkmark}></span>\n            </StyledLabel>\n          </div>\n        </div>\n      </div>\n      <div className={classes.itemsList}>\n        <div className={classes.containerItems}>{courses}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Courses;\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Home/Home.jsx",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Reports/Reports.jsx",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/SearchResult/SearchResult.jsx",["747"],"import React from 'react';\nimport classes from './SearchResult.module.css';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\nimport { coursesicon } from '../../Assets/Images/courses';\nimport { activitiesicon } from '../../Assets/Images/activities';\nimport { programicon } from '../../Assets/Images/programicon';\nimport { empty_state_icon } from '../../Assets/Images/empty_state_icon';\n\nconst StyledLabel = styled.label`\n    margin-left: ${({ direction }) => direction === \"rtl\" ? \"56px\" : \"0\"};\n    margin-right: ${({ direction }) => direction === \"ltr\" ? \"56px\" : \"0\"};\n`;\n\nconst SearchResult = (props) => {\n    const {t, i18n} = useTranslation();\n\n    let courses = [];\n    let programs = [];\n    let activities = [];\n\n    console.log(props.viewAll)\n\n    return(\n        <div className={classes.main}>\n            <div className={classes.header}>\n                <div className={classes.container}>\n                    <h1>{t(\"searchResult.title\")} <strong>{props.searchValue}</strong></h1>\n                    <div className={classes.filters}>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"searchResult.all\")}</span>\n                            <input type=\"checkbox\" onChange={()=>{props.setViewAll(!props.viewAll)}} checked={props.viewAll} value={props.viewAll}/>\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"searchResult.programs\")}</span>\n                            <input type=\"checkbox\" onChange={()=>{props.setViewPrograms(!props.viewPrograms)}} value={props.viewPrograms} checked={props.viewPrograms}/>\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"searchResult.courses\")}</span>\n                            <input type=\"checkbox\" onChange={()=>{props.setViewCourses(!props.viewCourses)}} value={props.viewCourses} checked={props.viewCourses}/>\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"searchResult.activities\")}</span>\n                            <input type=\"checkbox\" onChange={()=>{props.setViewActivities(!props.viewActivities)}} value={props.viewActivities} checked={props.viewActivities}/>\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                    </div>\n                </div>\n            </div>\n            <div className={classes.content}>\n                <div className={classes.container}>\n                    {props.viewCourses &&\n                    <div className={classes.category}>\n                        <div className={classes.categoryHeader}>\n                            {coursesicon}\n                            <span>{t('searchResult.courses')}</span>\n                        </div>\n                        <div className={classes.itemsList}>\n                            {(courses.length > 0 && courses) ? courses : \n                                <div className={classes.empty}>\n                                    <div className={classes.emptyIcon}>\n                                        {empty_state_icon}\n                                    </div>\n                                    <span>{t(\"searchResult.coursesEmpty\")}</span>\n                                </div>\n                            }\n                        </div>\n                    </div>}\n                    {props.viewActivities &&\n                    <div className={classes.category}>\n                        <div className={classes.categoryHeader}>\n                            {activitiesicon}\n                            <span>{t('searchResult.activities')}</span>\n                        </div>\n                        <div className={classes.itemsList}>\n                            {(activities.length > 0 && activities) ? activities : \n                                <div className={classes.empty}>\n                                    <div className={classes.emptyIcon}>\n                                        {empty_state_icon}\n                                    </div>\n                                    <span>{t(\"searchResult.activitiesEmpty\")}</span>\n                                </div>\n                            }\n                        </div>\n                    </div>}\n                    {props.viewPrograms &&\n                    <div className={classes.category}>\n                        <div className={classes.categoryHeader}>\n                            {programicon}\n                            <span>{t('searchResult.programs')}</span>\n                        </div>\n                        <div className={classes.itemsList}>\n                            {(programs.length > 0 && programs) ? programs : \n                                <div className={classes.empty}>\n                                    <div className={classes.emptyIcon}>\n                                        {empty_state_icon}\n                                    </div>\n                                    <span>{t(\"searchResult.programsEmpty\")}</span>\n                                </div>\n                            }\n                        </div>\n                    </div>}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default SearchResult;","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Programs/Programs.jsx",["748","749","750"],"import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\n\nimport { USER_ROLES } from 'Config/constants';\nimport { empty_state_icon } from 'Assets/Images/empty_state_icon';\nimport ProgramItem from './ProgramItem/ProgramItem';\nimport classes from './Programs.module.css';\n\nconst StyledLabel = styled.label`\n  margin-left: ${({ direction }) => (direction === 'rtl' ? '56px' : '0')};\n  margin-right: ${({ direction }) => (direction === 'ltr' ? '56px' : '0')};\n`;\n\nconst Programs = props => {\n  const { t, i18n } = useTranslation();\n\n  return (\n    <div className={classes.main}>\n      <div className={classes.header}>\n        <div className={classes.container}>\n          {props.user.roleId === USER_ROLES.LEARNER ? (\n            <h1>{t('programs.title')}</h1>\n          ) : (\n            <div className={classes.headerHeader}>\n              <h1>{t('programs.title')}</h1>\n              <NavLink to=\"/programs/add\">\n                <span>+</span>\n                {t('programs.addProgram')}\n              </NavLink>\n            </div>\n          )}\n          <div className={classes.filters}>\n            <StyledLabel className={classes.filter} direction={props.direction}>\n              <span className={classes.filterText}>{t('courses.filters.all')}</span>\n              <input\n                type=\"checkbox\"\n                onChange={() => {\n                  props.setAll();\n                }}\n                checked={props.all}\n                value={props.all}\n              />\n              <span className={classes.checkmark}></span>\n            </StyledLabel>\n            <StyledLabel className={classes.filter} direction={props.direction}>\n              <span className={classes.filterText}>{t('courses.filters.completed')}</span>\n              <input\n                type=\"checkbox\"\n                onChange={() => {\n                  props.setCompleted(!props.completed);\n                }}\n                checked={props.completed}\n              />\n              <span className={classes.checkmark}></span>\n            </StyledLabel>\n            <StyledLabel className={classes.filter} direction={props.direction}>\n              <span className={classes.filterText}>{t('courses.filters.inProgress')}</span>\n              <input\n                type=\"checkbox\"\n                onChange={() => {\n                  props.setInProgress(!props.inProgress);\n                }}\n                checked={props.inProgress}\n              />\n              <span className={classes.checkmark}></span>\n            </StyledLabel>\n            <StyledLabel className={classes.filter} direction={props.direction}>\n              <span className={classes.filterText}>{t('courses.filters.notStarted')}</span>\n              <input\n                type=\"checkbox\"\n                onChange={() => {\n                  props.setNotStarted(!props.notStarted);\n                }}\n                checked={props.notStarted}\n              />\n              <span className={classes.checkmark}></span>\n            </StyledLabel>\n          </div>\n        </div>\n      </div>\n      <div className={classes.itemsList}>\n        <div className={classes.containerItems}>\n          {props.programs.length > 0 ? (\n            props.programs.map(program => <ProgramItem key={program.programId} item={program} />)\n          ) : (\n            <div className={classes.empty}>\n              <div className={classes.emptyIcon}>{empty_state_icon}</div>\n              <span>{t('programs.emptyManager')}</span>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Programs;\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Profile/Notifications/ProfileNotifications.jsx",["751"],"import React, { useState } from 'react';\nimport classes from './ProfileNotifications.module.css';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\n\nconst ProfileNotifications = (props) => {\n    const {t, i18n} = useTranslation();\n\n    const [enableEmail, setEnableEmail] = useState(false);\n    const [enableText, setEnableText] = useState(false);\n\n    let handleEmail = () => {\n        setEnableEmail(!enableEmail);\n    }\n    let handleText = () => {\n        setEnableText(!enableText);\n    }\n\n    return(\n        <div className={classes.main}>\n            <div className={classes.field}>\n                <label htmlFor=\"email\">{t(\"profile.notifications.email\")}</label>\n                <label className={classes.switch}>\n                    <input type=\"checkbox\" id=\"email\" onChange={handleEmail} value={enableEmail}/>\n                    <span className={classes.slider}></span>\n                </label>\n            </div>\n            <div className={classes.field}>\n                <label htmlFor=\"text\">{t(\"profile.notifications.text\")}</label>\n                <label className={classes.switch}>\n                    <input type=\"checkbox\" id=\"text\" onChange={handleText} value={enableText}/>\n                    <span className={classes.slider}></span>\n                </label>\n            </div>\n        </div>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n\n});\n\nexport default connect(mapStateToProps, {})(ProfileNotifications);","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Profile/Password/ProfilePassword.jsx",["752","753","754","755"],"import React, { useEffect, useState } from 'react';\nimport classes from './ProfilePassword.module.css';\nimport { connect } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { AuthInput } from '../../../Components';\nimport { Field, reduxForm } from 'redux-form';\nimport { passValidationMatch, required } from '../../../Utils/validators';\nimport { NavLink } from 'react-router-dom';\nimport hide from '../../../Assets/Images/hide.svg';\nimport show from '../../../Assets/Images/Show.svg';\n\nconst ProfilePasswordForm = props => {\n  const { t, i18n } = useTranslation();\n\n  useEffect(() => {\n    props.initialize({\n      password: '123',\n    });\n  }, []);\n\n  const [passType, setPassType] = useState('password');\n\n  const handleShowPass = () => {\n    if (passType === 'password') {\n      setPassType('text');\n      return;\n    } else {\n      setPassType('password');\n    }\n  };\n\n  return (\n    <form className={classes.form} onSubmit={props.handleSubmit}>\n      <div className={classes.field + ' ' + classes.fieldBorder}>\n        <label>{t('profile.profilePass.current')}</label>\n        <Field component={AuthInput} name=\"password\" validate={[required]} disabled type={passType} />\n        <img\n          src={passType === 'password' ? hide : show}\n          className={classes.icon + ' ' + (passType === 'text' && classes.show)}\n          onClick={() => handleShowPass()}\n        />\n      </div>\n      <div className={classes.field}>\n        <label>{t('profile.profilePass.new')}</label>\n        <Field component={AuthInput} name=\"newPassword\" validate={[required]} type={'password'} />\n      </div>\n      <div className={classes.field}>\n        <label>{t('profile.profilePass.reenter')}</label>\n        <Field component={AuthInput} name=\"repeatPassword\" validate={[required, passValidationMatch]} type={'password'} />\n      </div>\n      <div className={classes.fieldBut}>\n        <button>{t('profile.saveChanges')}</button>\n        <NavLink to=\"/profile/info\">{t('profile.cancel')}</NavLink>\n      </div>\n    </form>\n  );\n};\n\nlet ProfilePasswordReduxForm = reduxForm({ form: 'profilePass' })(ProfilePasswordForm);\n\nconst ProfilePassword = props => {\n  const onSubmit = formData => {\n    console.log(formData);\n  };\n\n  return <ProfilePasswordReduxForm onSubmit={onSubmit} />;\n};\n\nlet mapStateToProps = state => ({});\n\nexport default connect(mapStateToProps, {})(ProfilePasswordReduxForm);\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Profile/Email/ProfileEmail.jsx",["756","757"],"import React, { useEffect } from 'react';\nimport classes from './ProfileEmail.module.css';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { AuthInput } from '../../../Components';\nimport { emailValidationMatch, isEmail, required } from '../../../Utils/validators';\nimport { NavLink } from 'react-router-dom';\n\nconst ProfileEmailForm = props => {\n  const { t, i18n } = useTranslation();\n\n  useEffect(() => {\n    props.initialize({\n      email: props.profile?.email,\n    });\n  }, []);\n\n  return (\n    <form className={classes.form} onSubmit={props.handleSubmit}>\n      <div className={classes.field + ' ' + classes.fieldBorder}>\n        <label>{t('profile.profileEmail.current')}</label>\n        <Field component={AuthInput} name=\"email\" validate={[required, isEmail]} disabled />\n      </div>\n      <div className={classes.field}>\n        <label>{t('profile.profileEmail.new')}</label>\n        <Field\n          component={AuthInput}\n          placeholder=\"mail../..example.com\"\n          name=\"newEmail\"\n          validate={[required, isEmail]}\n        />\n      </div>\n      <div className={classes.field}>\n        <label>{t('profile.profileEmail.reenter')}</label>\n        <Field\n          component={AuthInput}\n          placeholder=\"mail../..example.com\"\n          name=\"repeatEmail\"\n          validate={[required, isEmail, emailValidationMatch]}\n        />\n      </div>\n      <div className={classes.fieldBut}>\n        <button>{t('profile.saveChanges')}</button>\n        <NavLink to=\"/profile/info\">{t('profile.cancel')}</NavLink>\n      </div>\n    </form>\n  );\n};\n\nlet ProfileEmailReduxForm = reduxForm({ form: 'profileEmail' })(ProfileEmailForm);\n\nconst ProfileEmail = props => {\n  const onSubmit = formData => {\n    console.log(formData);\n  };\n\n  return <ProfileEmailReduxForm onSubmit={onSubmit} user={props.profile} />;\n};\n\nlet mapStateToProps = state => ({\n  profile: state.authentication.profile,\n});\n\nexport default connect(mapStateToProps, {})(ProfileEmail);\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Profile/Info/ProfileInfo.jsx",["758","759","760","761"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport classes from './ProfileInfo.module.css';\nimport { useTranslation } from 'react-i18next';\nimport { AuthInput } from '../../../Components';\nimport { required } from '../../../Utils/validators';\nimport default_user from '../../../Assets/Images/default_user.png';\nimport { NavLink } from 'react-router-dom';\nimport upload_icon from '../../../Assets/Images/upload-icon.svg';\n\nconst ProfileInfoForm = props => {\n  const { t, i18n } = useTranslation();\n\n  const [previewImage, setPreviewImage] = useState(null);\n\n  const handleImage = e => {\n    e.preventDefault();\n    setPreviewImage(window.URL.createObjectURL(e.target.files[0]));\n  };\n\n  const removeImage = e => {\n    e.preventDefault();\n    setPreviewImage(null);\n  };\n\n  useEffect(() => {\n    props.initialize({\n      name: props.profile?.name,\n      profilePhoto: props.profile?.profilePhoto,\n    });\n  }, [props.profile]);\n\n  return (\n    <form className={classes.form} onSubmit={props.handleSubmit}>\n      <div className={classes.field}>\n        <label>{t('profile.profileInfo.fullname')}</label>\n        <Field component={AuthInput} name=\"name\" validate={[required]} />\n      </div>\n      <div className={classes.fieldImage}>\n        <label>{t('profile.profileInfo.photo')}</label>\n        <label htmlFor=\"image\" className={classes.image}>\n          <img\n            src={previewImage ? previewImage : props.profile?.profilePhoto ? props.profile?.profilePhoto : default_user}\n            className={classes.photo}\n          />\n          <img src={upload_icon} className={classes.upload} />\n        </label>\n        <Field component={'input'} type=\"file\" name=\"profilePhoto\" id=\"image\" hidden onChange={handleImage} />\n        <button\n          onClick={e => {\n            removeImage(e);\n          }}\n        >\n          {t('profile.profileInfo.remove')}\n        </button>\n      </div>\n      <div className={classes.fieldBut}>\n        <button>{t('profile.saveChanges')}</button>\n        <NavLink to=\"/profile/info\">{t('profile.cancel')}</NavLink>\n      </div>\n    </form>\n  );\n};\n\nlet ProfileInfoReduxForm = reduxForm({ form: 'profileInfo' })(ProfileInfoForm);\n\nconst ProfileInfo = props => {\n  const onSubmit = formData => {\n    console.log(formData);\n  };\n\n  return <ProfileInfoReduxForm onSubmit={onSubmit} user={props.profile} />;\n};\n\nlet mapStateToProps = state => ({\n  profile: state.authentication.profile,\n});\n\nexport default connect(mapStateToProps, {})(ProfileInfo);\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Courses/CourseItemView/CourseItemView.jsx",["762","763","764"],"import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classes from './CourseItemView.module.css';\nimport { useTranslation } from 'react-i18next';\n\nconst CourseItem = (props) => {\n    const {t, i18n} = useTranslation();\n    return(\n        <div className={classes.main}>\n            <NavLink to={`/courses/${props.item.courseId}`}>\n                {(props.item.image != \"null\") ? <img src={props.item.image}/> : <div className={classes.defaultImg}></div>}\n                <div className={classes.itemInfo}>\n                    <label>{props.item.description}</label>\n                    <h2>{props.item.name}</h2>\n                    <div className={classes.itemFoot}>\n                        <span className={classes.status + \" \" + \n                            ((props.item.inProgress && classes.inProgress) ||\n                            (!props.item.inProgress && classes.completed))}>\n                                {((props.item.inProgress && t('courseMini.inProgress')) ||\n                                (!props.item.inProgress && t('courseMini.progressComplete')))}</span>\n                        <span className={classes.time}>{props.item.startingDate ? props.item.startingDate : t('courseMini.overdue')}</span>\n                    </div>\n                </div>\n                \n            </NavLink>\n        </div>\n    );\n}\n\nexport default CourseItem;","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Home/Statistic/Statistic.jsx",["765"],"import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classes from './Statistic.module.css';\nimport { useTranslation } from 'react-i18next';\nimport { learnersicon } from '../../../Assets/Images/learners.js';\nimport { libraryicon } from '../../../Assets/Images/library';\nimport { USER_ROLES } from 'Config/constants';\nimport ProgressBar from 'Components/Common/ProgressBar/ProgressBar';\n\nconst Statistic = (props) => {\n    const {t, i18n} = useTranslation();\n\n\n    let widthProgressBar = 83;\n    let heightProgressBar = 16;\n    return(\n        <div className={classes.main}>\n            <div className={classes.block + \" \" + classes.withoutPadding}>\n                <div className={classes.infoBlock}>\n                    <p>{t(\"home.statistic.infoUser.welcome\")}</p>\n                    <h3>{props.user.name}</h3>\n                </div>\n                <div className={classes.infoBlock}>\n                    <label>{t(\"home.statistic.infoUser.learningHours\")}</label>\n                    <span><strong>34 {t(\"home.statistic.infoUser.hours\")}</strong> {t(\"home.statistic.infoUser.and\")} <strong>54 {t(\"home.statistic.infoUser.mins\")}</strong></span>\n                </div>\n                <hr className={classes.line}/>\n                <div className={classes.infoBlock}>\n                    <label>{t(\"home.statistic.infoUser.learningGoal\")}</label>\n                    <span><strong>34 {t(\"home.statistic.infoUser.hours\")}</strong></span>\n                </div>\n            </div>\n            {props.user.roleId === USER_ROLES.LEARNER &&\n            <div className={classes.block + \" \" + classes.programs}>\n                <div className={classes.programsHeader}>\n                    <h4>{t(\"home.statistic.programs.programs\")}</h4>\n                    <NavLink to=\"/programs\">{t(\"home.statistic.programs.viewAll\")}</NavLink>\n                </div>\n                <div className={classes.progressBlock}>\n                    <label>Cybersecurity</label>\n                    <div className={classes.progressContainer}>\n                        <ProgressBar width={widthProgressBar} height={heightProgressBar} progress={78}/>\n                        <span>78%</span>\n                    </div>\n                </div>\n                <div className={classes.progressBlock}>\n                    <label>Writing</label>\n                    <div className={classes.progressContainer}>\n                        <ProgressBar width={widthProgressBar} height={heightProgressBar} progress={42}/>\n                        <span>42%</span>\n                    </div>\n                </div>\n                <div className={classes.progressBlock}>\n                    <label>Information Technologies</label>\n                    <div className={classes.progressContainer}>\n                        <ProgressBar width={widthProgressBar} height={heightProgressBar} progress={60}/>\n                        <span>60%</span>\n                    </div>\n                </div>\n            </div>}\n            {props.user.roleId === USER_ROLES.LEARNER &&\n            <div className={classes.block + \" \" + classes.stats}>\n                <h4>{t(\"home.statistic.stats.stats\")}</h4>\n            </div>}\n            \n            <div className={classes.block + \" \" + classes.quickAccess}>\n                <h4>{t(\"home.statistic.quickAccess.title\")}</h4>\n                <div className={classes.links}>\n                    {props.user.roleId === USER_ROLES.LEARNING_MANAGER &&\n                    <NavLink to=\"/resources\">\n                        {libraryicon}\n                        <span>{t(\"home.statistic.quickAccess.resources\")}</span>\n                    </NavLink>}\n                    <NavLink to=\"/learners\">\n                        {learnersicon}\n                        <span>{t(\"home.statistic.quickAccess.learners\")}</span>\n                    </NavLink>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Statistic;","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Reports/ReportDetails/ReportDetails.jsx",["766","767"],"import React from 'react';\nimport { Link, useLocation, withRouter } from 'react-router-dom';\nimport classes from './ReportsDetails.module.css';\nimport { empty_state_icon } from '../../../Assets/Images/empty_state_icon';\nimport { searchicon } from '../../../Assets/Images/searchicon'\nimport { useTranslation } from 'react-i18next';\n\nconst ReportsDetails = (props) => {\n    const { t, i18n } = useTranslation();\n    const location = props.match.params.insight;\n    const targetTitle = location.split('_').join(' ')\n    const number = () => {\n        if (location === 'enrolled') {\n            return props.props.courses ? props.props.courses.length : 0\n        } else if (location === 'in_progress') {\n            return props.props.courses ? props.props.courses.filter((cours) => cours.courseProgress > 0).length : 0\n        } else if (location === 'pending') {\n            return props.props.activities ? props.props.activities.length : 0\n        }\n    }\n\n\n    return (\n        <div>\n            <div className={classes.reportDetailsTitle}>\n                <h3>\n                    <Link to='/report'>\n                        {t(\"reports.reportsDetails.generalInsights\")}\n                    </Link>\n                    <span className={classes.detailsItemTitle}>{` ${targetTitle}`}</span>\n                    <span className={classes.numberItems}>{` (${number()})`}</span>\n                </h3>\n                <div className={classes.reportDetailsTitleInput}>\n                    <input type=\"text\" placeholder={t(\"reports.reportsDetails.search\")} />\n                    {searchicon}\n                </div>\n            </div>\n            {location === 'pending' && number() === 0 &&\n                <div className={classes.empty}>\n                    <div className={classes.emptyIcon}>\n                        {empty_state_icon}\n                    </div>\n                    <span>{t(\"reports.reportsDetails.pendingActivities\")}</span>\n                </div>\n            }\n            {location === 'in_progress' && number() === 0 &&\n                <div className={classes.empty}>\n                    <div className={classes.emptyIcon}>\n                        {empty_state_icon}\n                    </div>\n                    <span>{t(\"reports.reportsDetails.enrolledCourses\")}</span>\n                </div>\n            }\n            {location === 'enrolled' && number() === 0 &&\n                <div className={classes.empty}>\n                    <div className={classes.emptyIcon}>\n                        {empty_state_icon}\n                    </div>\n                    <span>{t(\"reports.reportsDetails.inProgressCourses\")}</span>\n                </div>\n            }\n        </div >\n    );\n}\n\nlet WithRouterContainer = withRouter(ReportsDetails);\n\nexport default WithRouterContainer;","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Reports/ReportMain/ReportMain.jsx",["768","769"],"import React from 'react';\nimport { Link, NavLink } from 'react-router-dom'\nimport classes from './ReportMain.module.css';\nimport { useTranslation } from 'react-i18next';\nimport Filter from '../Filter/Filter'\nimport { Chart } from \"react-google-charts\";\n\nexport default function ReportMain({ props }) {\n    const { t, i18n } = useTranslation();\n    const coursesInProgress = props.courses ? props.courses.filter((cours) => cours.courseProgress > 0).length : 0\n    const coursesIsCompleted = props.courses ? props.courses.filter((cours) => cours.isCompleted).length : 0\n    const coursesNotStarted = props.courses ? props.courses.filter((cours) => cours.courseProgress === 0).length : 0\n\n    const firstCourseDaysNumber = 1\n    const secondCourseDaysNumber = 4\n\n    return (\n        <>\n            <div className={classes.tabsBlock}>\n                <h3>\n                    {t(\"reports.insights.title\")}\n                </h3>\n                <ul className={classes.tabs}>\n                    <li>\n                        <Link className={classes.textDecorationNone} to=\"/report/enrolled\">\n                            <p className={classes.tabTitle}> {t(\"reports.insights.enrolled\")}</p>\n                            <p className={classes.tabValue}>\n                                <span>{props.courses ? props.courses.length : 0}</span>\n                                {` ${t(\"reports.insights.courses\")}`}\n                            </p>\n                        </Link>\n                    </li>\n                    <li>\n                        <Link className={classes.textDecorationNone} to=\"/report/in_progress\">\n                            <p className={classes.tabTitle}>{t(\"reports.insights.inProgress\")}</p>\n                            <p className={classes.tabValue}>\n                                <span>{coursesInProgress}</span>\n                                {` ${t(\"reports.insights.courses\")}`}\n                            </p>\n                        </Link>\n                    </li>\n                    <li>\n                        <Link className={classes.textDecorationNone} to={`/report/pending`}>\n                            <p className={classes.tabTitle}>{t(\"reports.insights.pending\")}</p>\n                            <p className={classes.tabValue}>\n                                <span>{(props.activities && props.activities.length > 0) ? props.activities.length : 0}</span>\n                                {` ${t(\"reports.insights.activities\")}`}\n                            </p>\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n            <div className={classes.graphics}>\n                <div className={classes.graphicsTitle}>\n                    <h3>{t(\"reports.overview.title\")}</h3>\n                    <Filter />\n                </div>\n                <div className={classes.overviewCharts}>\n                    <div className={classes.chart}>\n                        <Chart\n                            width={'100%'}\n                            height={'100%'}\n                            background={'#fff'}\n                            chartType=\"PieChart\"\n                            loader={<div>Loading Chart</div>}\n                            data={[\n                                ['Progress', 'How mutch'],\n                                ['Not started', coursesNotStarted],\n                                ['In progress', coursesInProgress],\n                                ['Completed', coursesIsCompleted],\n                            ]}\n                            options={{\n                                title: 'My Courses',\n                                legend: \"bottom\",\n                                chartArea: { width: '95%', height: '70%' },\n                                colors: ['#cce1f4', '#f4e6cc', '#a9d5c1'],\n                                pieSliceText: 'value',\n                                fontSize: 14,\n                                pieSliceTextStyle: { color: \"black\" },\n                                titleTextStyle: { fontSize: 16 }\n                            }}\n                        />\n                    </div>\n                    <div className={classes.chart}>\n                        <Chart\n                            chartType=\"ColumnChart\"\n                            width=\"100%\"\n                            height=\"100%\"\n                            data={[\n                                [\"Courses\", \"Days\", { role: \"style\" }],\n                                [\"Course 1\", firstCourseDaysNumber, '#f4e6cc'],\n                                [\"Course 2\", secondCourseDaysNumber, '#a9d5c1'],\n                            ]}\n                            options={{\n                                fontSize: 14,\n                                title: 'My Engagment',\n                                titleTextStyle: { fontSize: 16 },\n                                chartArea: { width: '80%', height: '70%' },\n                                bar: { groupWidth: \"85%\" },\n                                legend: { position: \"none\" },\n                                vAxes: {\n                                    0: { title: 'Days', titleTextStyle: { fontStyle: 'normal' } },\n                                }\n                            }}\n                        />\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Reports/UserInfo/UserInfo.jsx",["770"],"import React from 'react';\nimport classes from './UserInfo.module.css';\nimport { useTranslation } from 'react-i18next';\n\nconst UserInfo = (props) => {\n    const { t, i18n } = useTranslation();\n\n    return (\n        <div className={classes.main}>\n            <div className={classes.block + \" \" + classes.withoutPadding}>\n                <div className={classes.infoBlock}>\n                    <p>{t(\"home.statistic.infoUser.welcome\")}</p>\n                    <h3>{props.user.name}</h3>\n                </div>\n                <div className={classes.infoBlock}>\n                    <label>{t(\"home.statistic.infoUser.learningHours\")}</label>\n                    <span><strong>34 {t(\"home.statistic.infoUser.hours\")}</strong> {t(\"home.statistic.infoUser.and\")} <strong>54 {t(\"home.statistic.infoUser.mins\")}</strong></span>\n                </div>\n                <hr className={classes.line} />\n                <div className={classes.infoBlock}>\n                    <label>{t(\"home.statistic.infoUser.learningGoal\")}</label>\n                    <span><strong>34 {t(\"home.statistic.infoUser.hours\")}</strong></span>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default UserInfo","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Home/Courses/Courses.jsx",["771","772","773"],"import React from 'react';\nimport classes from './Courses.module.css';\nimport { coursesicon } from '../../../Assets/Images/courses';\nimport { NavLink } from 'react-router-dom';\nimport CourseItem from './CourseItem/CourseItem';\nimport { useTranslation } from 'react-i18next';\nimport { empty_state_icon } from '../../../Assets/Images/empty_state_icon';\n\nconst HomeCourses = (props) => {\n    const {t, i18n} = useTranslation();\n    let maxCoursesToView = 6;\n    let courses = [];\n    if(props.courses){\n        courses = props.courses.map((item, index) => {\n            if(index < maxCoursesToView){\n                return <CourseItem item={item} key={item.courseId}/>\n            }\n        });\n    }\n    \n    return(\n        <div className={classes.main}>\n            <div className={classes.coursesHeader}>\n                <div className={classes.coursesHeaderBlock}>\n                    {coursesicon}\n                    <span>{t('home.courses.title')}</span>\n                </div>\n                <NavLink to=\"/courses\">{t('home.courses.viewAll')}</NavLink>\n            </div>\n            <div className={classes.itemsList}>\n                {(courses.length > 0 && courses != null && courses != undefined) ? courses : \n                    <div className={classes.empty}>\n                        <div className={classes.emptyIcon}>\n                            {empty_state_icon}\n                        </div>\n                        <span>{t(\"home.courses.empty\")}</span>\n                    </div>\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default HomeCourses;","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Reports/Filter/Filter.jsx",["774","775"],"import React, { useEffect, useState } from 'react';\nimport classes from './Filter.module.css';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { useTranslation } from 'react-i18next';\n\nconst StyledSelect = styled.div`\n\n`;\n\nconst Filter = (props) => {\n    const { t, i18n } = useTranslation();\n\n    const [isOpenDropdown, setIsOpenDropdown] = useState(false);\n    const [isCourses, setIsCourses] = useState(false)\n    const [isActivities, setIsActivities] = useState(false)\n\n    return (\n        <StyledSelect className={classes.main} width={props.width}>\n            <input hidden type=\"checkout\" defaultValue={isOpenDropdown} checked={isOpenDropdown} />\n            <div className={classes.view} onClick={() => setIsOpenDropdown(!isOpenDropdown)}>\n                <span> {t(\"filterReports.filter\")} </span>\n                <div className={classes.arrow + \" \" + (isOpenDropdown && classes.open)}></div>\n            </div>\n            {isOpenDropdown &&\n                <div className={classes.dropdown + \" \" + (isOpenDropdown && classes.openDropdown)}>\n                    <span className={`${classes.option} ${classes.margin0}`}>\n                        {t(\"filterReports.filteredBy\")}\n                    </span>\n                    <div onClick={() => setIsCourses(!isCourses)} className={`${classes.margin0} ${classes.filter}`}>\n                        <span className={classes.filterText}>{t(\"filterReports.courses\")}</span>\n                        <input type=\"checkbox\" checked={isCourses} value={isCourses}  defaultChecked={isCourses} defaultValue={isCourses}/>\n                        <span className={classes.checkmark}></span>\n                    </div>\n                    <div onClick={() => setIsActivities(!isActivities)} className={`${classes.margin0} ${classes.filter}`}>\n                        <span className={classes.filterText}>{t(\"filterReports.activities\")}</span>\n                        <input type=\"checkbox\" checked={isActivities} value={isActivities}  defaultChecked={isActivities} defaultValue={isActivities}/>\n                        <span className={classes.checkmark}></span>\n                    </div>\n                </div>}\n        </StyledSelect>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n    direction: state.common.direction\n});\n\nexport default connect(mapStateToProps, null)(Filter);","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Home/Courses/CourseItem/CourseItem.jsx",["776","777","778"],"import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classes from './CourseItem.module.css';\nimport { useTranslation } from 'react-i18next';\n\n\nconst CourseItem = (props) => {\n    const {t, i18n} = useTranslation();\n\n    return(\n        <div className={classes.main}>\n            <NavLink to={`/courses/${props.item.courseId}`}>\n                {(props.item.image != \"null\") ? <img src={props.item.image}/> : <div className={classes.defaultImg}></div>}\n                \n                <div className={classes.itemInfo}>\n                    <label>{props.item.description}</label>\n                    <h2>{props.item.name}</h2>\n                    <div className={classes.itemFoot}>\n                        <span className={classes.status + \" \" + \n                            ((props.item.inProgress && classes.inProgress) ||\n                            (!props.item.inProgress && classes.completed))}>\n                                {((props.item.inProgress && t('courseMini.inProgress')) ||\n                                (!props.item.inProgress && t('courseMini.progressComplete')))}</span>\n                        <span className={classes.time}>{props.item.startingDate ? props.item.startingDate : t('courseMini.overdue')}</span>\n                    </div>\n                </div>\n                \n            </NavLink>\n        </div>\n    );\n}\n\nexport default CourseItem;","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Services/activities.js",["779"],"import axios from 'axios';\n\nimport { buildQuery } from 'Utils/buildQuery';\n\nexport function getActivities(organizationId, employeeId, userId, from, to) {\n  const query = buildQuery({ organizationId, employeeId, userId, from, to });\n\n  return axios.get(`/activities/?${query}`);\n}\nexport function getOneActivity(organizationId, activityId) {\n  const query = buildQuery({ organizationId, activityId });\n\n  return axios.get(`/activities/${activityId}?selectedOrganizationId=${organizationId}`);\n}\n\nexport function getActivitiesByLearner(organizationId, employeeId, userId) {\n  const query = buildQuery({ organizationId, employeeId, userId });\n\n  return axios.get(`/activities/byLearner?${query}`);\n}\nexport function createActivity(activityId, selectedOrganizationId) {\n  return axios.get(`/activities/${activityId}?selectedOrganizationId=${selectedOrganizationId}`);\n}\nexport function updateActivity(activityId, selectedOrganizationId) {\n  return axios.get(`/activities/${activityId}?selectedOrganizationId=${selectedOrganizationId}`);\n}\n\nexport function deleteActivity(activityId, selectedOrganizationId) {\n  return axios.get(`/activities/${activityId}?selectedOrganizationId=${selectedOrganizationId}`);\n}\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Services/courses.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Services/notifications.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Services/programs.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Notifications/NotificationsContainer.jsx",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Notifications/Notifications.jsx",["780","781","782","783"],"import React from 'react';\nimport classes from './Notifications.module.css';\nimport { notificationicon } from '../../Assets/Images/notification';\nimport { useTranslation } from 'react-i18next';\nimport markasreadicon from '../../Assets/Images/asreadicon.svg';\nimport NotificationItem from './NotificationItem/NotificationItem';\n\nconst Notifications = (props) => {\n    const {t, i18n} = useTranslation();\n    \n    let newNotifications = [];\n    let notifications = [];\n\n    newNotifications = props.notifications.map(notify => {\n        if(!notify.isRead){\n            return <NotificationItem isRead={false} item={notify} key={notify.notificationId}/>\n        }\n    });\n\n    notifications = props.notifications.map(notify => {\n        if(notify.isRead){\n            return <NotificationItem isRead={true} item={notify} key={notify.notificationId}/>\n        }\n    })\n\n    return(\n        <div className={classes.main}>\n            <div className={classes.container}>\n                <div className={classes.header}>\n                    <div className={classes.headerSide}>\n                        {notificationicon}\n                        <h3>{t(\"notifications.title\")}</h3>\n                    </div>\n                    <div className={classes.headerSide}>\n                        <button>\n                            <img src={markasreadicon}/>\n                            <span>{t(\"notifications.markAllRead\")}</span>\n                        </button>\n                    </div>\n                </div>\n                <div className={classes.contentContainer}>\n                    <div className={classes.new}>\n                        {newNotifications}\n                    </div>\n                    <h3>{t(\"notifications.earlier\")}</h3>\n                    <div className={classes.itemsList}>\n                        {notifications}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Notifications;\n\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Notifications/NotificationItem/NotificationItem.jsx",["784","785","786","787","788"],"import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport classes from './NotificationItem.module.css';\nimport { notificationicon } from '../../../Assets/Images/notification';\nimport parse from 'html-react-parser';\nimport { useTranslation } from 'react-i18next';\nimport showmoreicon from \"../../../Assets/Images/showmoreicon.svg\";\nimport NotificationModalItemMenu from '../NotificationsModal/NotificationModalItem/NotificationModalItemMenu/NotificationModalItemMenu';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst StyledItem = styled.div`\n    background-color: ${({ isRead }) => isRead ? \"white\" : \"rgba(172, 221, 213, 0.15)\"};\n`;\n\nconst StyledDiv = styled.div`\n    margin-left: ${({ direction }) => direction === \"ltr\" ? '0' : '16px'};\n    margin-right: ${({ direction }) => direction === \"rtl\" ? \"0\" : \"16px\"};\n`;\n\nconst NotificationItem = (props) => {\n    let sendTime = new Date(props.item.generated);\n    let now = new Date();\n\n    const [isOpenMenu, setIsOpenMenu] = useState(false);\n\n    const {t, i18n} = useTranslation();\n\n    useEffect(()=>{\n        if(props.isScroll){\n            setIsOpenMenu(false);\n        }\n    },[props.isScroll]);\n\n    function secondsToDhms(seconds) {\n        seconds = Number(seconds);\n        let d = Math.floor(seconds / (3600*24));\n        let h = Math.floor(seconds % (3600*24) / 3600);\n        let m = Math.floor(seconds % 3600 / 60);\n        let s = Math.floor(seconds % 60);\n        \n        let dDisplay = d > 0 ? d + (t(\"notificationItem.days\")) : \"\";\n        let hDisplay = h > 0 ? h + (t(\"notificationItem.hours\")) : \"\";\n        let mDisplay = m > 0 ? m + (t(\"notificationItem.minutes\")) : \"\";\n        let sDisplay = s > 0 ? s + (t(\"notificationItem.seconds\")) : \"\";\n\n        if(dDisplay != \"\"){\n            return dDisplay;\n        }else if(hDisplay != \"\"){\n            return hDisplay;\n        }else if(mDisplay != \"\"){\n            return mDisplay;\n        }else{\n            return sDisplay;\n        }\n    }\n\n    let agoTime = secondsToDhms((now.getTime() - sendTime.getTime()) / 1000);\n    \n    return(\n        <StyledItem className={classes.main} isRead={props.isRead}>\n            <StyledDiv className={classes.image} direction={props.direction}>\n                {notificationicon}\n            </StyledDiv>\n            <div className={classes.info}>\n                <p>{parse(props.item.text)}</p>\n                <NavLink to={`/home/notifications/${props.item.notificationId}`}>{t(\"notificationItem.link\")}</NavLink>\n                <span>{agoTime} {t(\"notificationItem.ago\")}</span>\n            </div>\n            <div className={classes.menu} onClick={()=>{setIsOpenMenu(!isOpenMenu)}}>\n                <img src={showmoreicon}/>\n                {isOpenMenu && <NotificationModalItemMenu/>}\n            </div>\n        </StyledItem>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n    direction: state.common.direction\n})\n\nexport default connect(mapStateToProps, {})(NotificationItem);","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Notifications/NotificationsModal/NotificationModalItem/NotificationModalItemMenu/NotificationModalItemMenu.jsx",["789","790","791"],"import React from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport classes from './NotificationModalItemMenu.module.css';\nimport markasreadicon from '../../../../../Assets/Images/asreadicon.svg';\nimport deleteicon from '../../../../../Assets/Images/deleteicon.svg';\nimport { useTranslation } from 'react-i18next';\n\nconst StyledModal = styled.div`\n    transform: ${({ direction }) => direction === \"ltr\" ? 'translateY(0px) translateX(-166px)' : 'translateY(0px) translateX(166px);' }; \n`;\n\nconst StyledArrow = styled.div`\n    left: ${({ direction }) => direction === \"ltr\" ? \"-6px\" : \"6px\"};\n    \n    & div{\n        left: ${({ direction }) => direction === \"ltr\" ? \"-4.5px\" : \"3.5px\"};\n    }\n`;\n\nconst StyledSpan = styled.span`\n    margin-left: ${({ direction }) => direction === \"ltr\" ? \"12px\" : \"0\"};\n    margin-right: ${({ direction }) => direction === \"rtl\" ? \"12px\" : \"0\"};\n`;\n\n\nconst NotificationModalItemMenu = (props) => {\n    const {t, i18n} = useTranslation();\n\n    return(\n        <StyledModal className={classes.main   + \" \" + classes.detectClick} direction={props.direction}>\n            <StyledArrow className={classes.arrow   + \" \" + classes.detectClick} direction={props.direction}>\n                <div className={classes.innerArrow   + \" \" + classes.detectClick}></div>\n            </StyledArrow>\n            <div className={classes.body   + \" \" + classes.detectClick}>\n                <button className={classes.detectClick}>\n                    <div className={classes.image   + \" \" + classes.detectClick}>\n                        <img src={markasreadicon} className={classes.detectClick}/>\n                    </div>\n                    <StyledSpan direction={props.direction} className={classes.detectClick}>{t(\"notificationsModal.menu.asRead\")}</StyledSpan>\n                </button>\n                <button className={classes.detectClick}>\n                    <div className={classes.image  + \" \" + classes.detectClick}>\n                        <img src={deleteicon} className={classes.detectClick}/>\n                    </div>\n                    <StyledSpan direction={props.direction} className={classes.detectClick}>{t(\"notificationsModal.menu.delete\")}</StyledSpan>\n                </button>\n            </div>\n        </StyledModal>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n    direction: state.common.direction\n})\n\nexport default connect(mapStateToProps, {\n\n})(NotificationModalItemMenu);\n\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Notifications/NotificationsModal/NotificationsModal.jsx",["792","793"],"import React, { useEffect, useRef, useState } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport classes from './NotificationsModal.module.css';\nimport { useTranslation } from 'react-i18next';\nimport { NavLink } from 'react-router-dom';\nimport NotificationModalItem from './NotificationModalItem/NotificationModalItem';\n\nconst StyledModal = styled.div`\n  transform: ${({ direction, notifications }) => (direction === 'ltr' ? 'translateX(-138px)' : 'translateX(138px);')};\n  ../..media screen and (max-width: 1020px) {\n    transform: ${({ direction, notifications }) => (direction === 'ltr' ? 'translateX(-232px)' : 'translateX(232px);')};\n  }\n  ../..media screen and (max-width: 507px) {\n    transform: ${({ direction, notifications }) => (direction === 'ltr' ? 'translateX(-155px)' : 'translateX(155px);')};\n  }\n  ../..media screen and (max-width: 375px) {\n    transform: ${({ direction, notifications }) => (direction === 'ltr' ? 'translateX(-139px)' : 'translateX(139px);')};\n  }\n`;\n\nconst StyledArrow = styled.div`\n  left: ${({ direction }) => (direction === 'ltr' ? '-42px' : '42px')};\n\n  & div {\n    left: ${({ direction }) => (direction === 'ltr' ? '-4.2px' : '3.5px')};\n  }\n\n  ../..media screen and (max-width: 507px) {\n    left: ${({ direction }) => (direction === 'ltr' ? '-118px' : '118px')};\n  }\n  ../..media screen and (max-width: 428px) {\n    left: ${({ direction }) => (direction === 'ltr' ? '-53px' : '53px')};\n  }\n  ../..media screen and (max-width: 375px) {\n    left: ${({ direction }) => (direction === 'ltr' ? '-70px' : '70px')};\n  }\n`;\n\nconst NotificationsModal = props => {\n  const { t, i18n } = useTranslation();\n\n  const [isScroll, setIsScroll] = useState(false);\n  const modalRef = useRef(null);\n\n  const windowRef = useRef(null);\n\n  function logit() {\n    setIsScroll(!isScroll);\n  }\n\n  useEffect(() => {\n    if (modalRef.current) {\n      modalRef.current.addEventListener('scroll', logit);\n    }\n    window.addEventListener('mousedown', event => {\n      if (event.target.classList.value.includes('detectClick')) {\n        return;\n      }\n      props.setIsOpenNotificationsModal(false);\n    });\n  }, [modalRef.current]);\n\n  let notifications = [];\n\n  if (props.notifications) {\n    notifications = props.notifications.map(notification => {\n      return <NotificationModalItem item={notification} key={notification.notificationId} isScroll={isScroll} />;\n    });\n  }\n\n  return (\n    <StyledModal\n      className={classes.main + ' ' + classes.detectClick}\n      direction={props.direction}\n      notifications={props.notifications}\n      ref={windowRef}\n    >\n      <StyledArrow className={classes.arrow + ' ' + classes.detectClick} direction={props.direction}>\n        <div className={classes.innerArrow + ' ' + classes.detectClick}></div>\n      </StyledArrow>\n      <div className={classes.body + ' ' + classes.detectClick}>\n        <div className={classes.header + ' ' + classes.detectClick}>\n          <h3 className={classes.detectClick}>{t('notificationsModal.title')}</h3>\n          <NavLink\n            to=\"/home/notifications\"\n            className={classes.detectClick}\n            onClick={() => {\n              props.setIsOpenNotificationsModal(false);\n            }}\n          >\n            {t('notificationsModal.viewAll')}\n          </NavLink>\n        </div>\n        {notifications.length > 0 && notifications ? (\n          <div className={classes.notifications + ' ' + classes.detectClick} ref={modalRef}>\n            {notifications}\n          </div>\n        ) : (\n          <div className={classes.empty + ' ' + classes.detectClick}>\n            <span>{t('notificationsModal.empty')}</span>\n          </div>\n        )}\n      </div>\n    </StyledModal>\n  );\n};\n\nlet mapStateToProps = state => ({\n  direction: state.common.direction,\n  notifications: state.notifications.unreadNotifications,\n});\n\nexport default connect(mapStateToProps, {})(NotificationsModal);\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Notifications/NotificationsModal/NotificationModalItem/NotificationModalItem.jsx",["794","795","796","797","798","799"],"import React, { Fragment, useEffect, useRef, useState } from 'react';\nimport classes from './NotificationModalItem.module.css';\nimport { notificationicon } from '../../../../Assets/Images/notification.js';\nimport showmoreicon from \"../../../../Assets/Images/showmoreicon.svg\";\nimport parse from 'html-react-parser';\nimport { useTranslation } from 'react-i18next';\nimport NotificationModalItemMenu from './NotificationModalItemMenu/NotificationModalItemMenu';\n\nconst NotificationModalItem = (props) => {\n    let sendTime = new Date(props.item.generated);\n    let now = new Date();\n\n    const [isOpenMenu, setIsOpenMenu] = useState(false);\n\n    const {t, i18n} = useTranslation();\n    \n    const divRef = useRef(null);\n    const pRef = useRef(null);\n\n    useEffect(()=>{\n        divRef.current.querySelector('svg').classList.add('detectClick')\n        pRef.current.querySelector('strong').classList.add('detectClick')\n    },[]);\n\n    useEffect(()=>{\n        if(props.isScroll){\n            setIsOpenMenu(false);\n        }\n    },[props.isScroll]);\n\n    function secondsToDhms(seconds) {\n        seconds = Number(seconds);\n        let d = Math.floor(seconds / (3600*24));\n        let h = Math.floor(seconds % (3600*24) / 3600);\n        let m = Math.floor(seconds % 3600 / 60);\n        let s = Math.floor(seconds % 60);\n        \n        let dDisplay = d > 0 ? d + (t(\"notificationItem.days\")) : \"\";\n        let hDisplay = h > 0 ? h + (t(\"notificationItem.hours\")) : \"\";\n        let mDisplay = m > 0 ? m + (t(\"notificationItem.minutes\")) : \"\";\n        let sDisplay = s > 0 ? s + (t(\"notificationItem.seconds\")) : \"\";\n\n        if(dDisplay != \"\"){\n            return dDisplay;\n        }else if(hDisplay != \"\"){\n            return hDisplay;\n        }else if(mDisplay != \"\"){\n            return mDisplay;\n        }else{\n            return sDisplay;\n        }\n    }\n\n    let agoTime = secondsToDhms((now.getTime() - sendTime.getTime()) / 1000);\n\n    return(\n        <div className={classes.main  + \" \" + classes.detectClick}>\n            <div ref={divRef} className={classes.image  + \" \" + classes.detectClick}>\n                {notificationicon}\n            </div>\n            <div className={classes.info  + \" \" + classes.detectClick}>\n                <p ref={pRef} className={classes.detectClick}>{parse(props.item.text)}</p>\n                <span className={classes.detectClick}>{agoTime} {t(\"notificationItem.ago\")}</span>\n            </div>\n            <div className={classes.menu   + \" \" + classes.detectClick} onClick={()=>{setIsOpenMenu(!isOpenMenu)}}>\n                <img src={showmoreicon} className={classes.detectClick}/>\n                {isOpenMenu && <NotificationModalItemMenu/>}\n            </div>\n        </div>    \n    );\n}\n\nexport default NotificationModalItem;","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/learners.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Programs/ProgramItem/ProgramItem.jsx",["800","801"],"import React from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport { useTranslation } from 'react-i18next';\nimport { learnersicon } from 'Assets/Images/learners';\nimport { clockicon } from 'Assets/Images/clock';\nimport thumbnail from 'Assets/programs/thumbnail.svg';\nimport classes from './ProgramItem.module.css';\n\nconst StyledAttendees = styled.div`\n  margin-left: ${({ direction }) => (direction === 'ltr' ? '4px' : '0')};\n  margin-right: ${({ direction }) => (direction === 'rtl' ? '4px' : '0')};\n`;\n\nconst StyledTimeBlock = styled.div`\n  margin-left: ${({ direction }) => (direction === 'ltr' ? '16px' : '0')};\n  margin-right: ${({ direction }) => (direction === 'rtl' ? '16px' : '0')};\n`;\n\nconst StyledTimeSpan = styled.span`\n  margin-left: ${({ direction }) => (direction === 'ltr' ? '4px' : '0')};\n  margin-right: ${({ direction }) => (direction === 'rtl' ? '4px' : '0')};\n`;\n\nconst ProgramItem = props => {\n  const { t, i18n } = useTranslation();\n\n  const endTime = new Date(props.item.end);\n  const now = new Date();\n\n  var daysLag = Math.ceil(Math.abs(endTime.getTime() - now.getTime()) / (1000 * 3600 * 24));\n\n  return (\n    <div className={classes.main}>\n      <NavLink to={`/programs/view/${props.item.programId}`}>\n        <img src={props.item.thumbnail || thumbnail} style={{ width: '261px', height: '120px' }} />\n        <div className={classes.itemInfo}>\n          <div className={classes.header}>\n            <label>{t('programMini.label')}</label>\n            <NavLink to={`/programs/view/${props.item.programId}/attendees`} className={classes.attendees}>\n              {learnersicon}\n              <StyledAttendees direction={props.direction}>\n                {props.item.attendees ? props.item.attendees.length : 0} {t('programMini.attendees')}\n              </StyledAttendees>\n            </NavLink>\n          </div>\n\n          <h2>{props.item.name}</h2>\n          <p className={classes.description}>{props.item.subject}</p>\n          <div className={classes.itemFoot}>\n            <span className={classes.courses}>\n              {props.item.courses ? props.item.courses.length : 0} {t('programMini.courses')}\n            </span>\n            {props.item.courses && props.item.courses.length > 0 && (\n              <StyledTimeBlock className={classes.timeBlock} direction={props.direction}>\n                {clockicon}\n                <StyledTimeSpan className={classes.time} direction={props.direction}>\n                  {daysLag}\n                  {endTime >= now ? (\n                    <span>{t('activityMini.daysLeft')}</span>\n                  ) : (\n                    <span>{t('activityMini.daysAgo')}</span>\n                  )}\n                </StyledTimeSpan>\n              </StyledTimeBlock>\n            )}\n          </div>\n        </div>\n      </NavLink>\n    </div>\n  );\n};\n\nlet mapStateToProps = state => ({\n  direction: state.common.direction,\n  profile: state.authentication.profile,\n});\n\nexport default connect(mapStateToProps, {})(ProgramItem);\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/index.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/ErrorBoundry.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/PageNotFound.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/PrivateRoute.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Store/Reducers/index.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Common/FormControlls/FormControlls.js",["802","803"],"import React, { useState } from 'react';\nimport classes from './FormControlls.module.css';\nimport { useTranslation } from 'react-i18next';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport const AuthInput = ({input, meta, ...props}) => {\n    const hasError = meta.touched && meta.error;\n    return(\n        <div className={classes.formControll + \" \" + (hasError && classes.error)}>\n            <input {...input} {...props}/>\n            {hasError && <span>{meta.error}</span>}\n        </div>\n    );\n}\n\nexport const TextAreaCustom = ({input, meta, ...props}) => {\n    const {t, i18n} = useTranslation();\n    const hasError = meta.touched && meta.error;\n    return(\n        <div className={classes.textarea + \" \" + (hasError && classes.error)}>\n            <textarea maxLength={props.maxLength} {...input} {...props} row={props.rows}/>\n            {hasError && <span>{meta.error}</span>}\n            <label>{props.left} {t(\"addActivity.charactersLeft\")}</label>\n        </div>\n    )\n}\n\nexport const Calendar = ({input, meta, ...props}) => {\n    const [startDate, setStartDate] = useState(new Date());\n\n    let handleDate = (date) => {\n        setStartDate(date);\n        input.onChange(date);\n    }\n\n    const hasError = meta.touched && meta.error;\n\n    return(\n        <div className={classes.calendar + \" \" + (hasError && classes.error)}>\n            <DatePicker selected={startDate} onChange={date => handleDate(date)}/>\n            {hasError && <span>{meta.error}</span>}\n        </div>\n    );\n}\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Navbar/NavbarContainer.jsx",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Common/Preloader/Preloader.jsx",["804"],"import React from 'react';\nimport preloader from '../../../Assets/Common/preloader.svg';\nimport classes from './Preloader.module.css';\n\nconst Preloader = (props) => {\n    return(\n        <div className={classes.main}>\n            <img src={preloader}/>\n        </div>\n    );\n}\n\nexport default Preloader;","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Common/ProgressBar/ProgressBar.jsx",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Common/SearchModal/SearchModal.jsx",["805","806","807","808","809","810"],"import React, { useEffect, useRef, useState } from 'react';\nimport CustomSelect from '../Cutsom/Select/CustomSelect';\nimport classes from './SearchModal.module.css';\nimport { searchicon } from '../../../Assets/Images/searchicon.js';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport { setSearchValue } from '../../../Store/Reducers/common';\n\nconst StyledModal = styled.div`\n  transform: ${({ direction }) => (direction === 'ltr' ? 'translateY(100px) translateX(-647px)' : 'translateY(100px) translateX(647px)')};\n  ../..media screen and (max-width: 1000px) {\n    width: 620px;\n    transform: ${({ direction }) => (direction === 'ltr' ? 'translateY(100px) translateX(-543px)' : 'translateY(100px) translateX(543px)')};\n  }\n  ../..media screen and (max-width: 822px) {\n    width: 520px;\n    transform: ${({ direction }) => (direction === 'ltr' ? 'translateY(100px) translateX(-443px)' : 'translateY(100px) translateX(443px)')};\n  }\n  ../..media screen and (max-width: 693px) {\n    width: 420px;\n    transform: ${({ direction }) => (direction === 'ltr' ? 'translateY(160px) translateX(-343px)' : 'translateY(160px) translateX(343px)')};\n  }\n`;\n\nconst StyledArrow = styled.div`\n  left: ${({ direction }) => (direction === 'ltr' ? '-50px' : '50px')};\n\n  & div {\n    left: ${({ direction }) => (direction === 'ltr' ? '-4.5px' : '3.5px')};\n  }\n`;\n\nconst SearchModal = props => {\n  const [searchValue, setSearchValue] = useState('');\n\n  let filerOne = ['Search everything', 'option1', 'option2'];\n  let filerTwo = ['By anyone', 'option1', 'option2'];\n  let filerThree = ['In all segments', 'option1', 'option2'];\n\n  const linkRef = useRef(null);\n\n  const handleSearch = () => {\n    props.setSearchValue(searchValue);\n    props.setIsOpenSearchModal(false);\n  };\n\n  useEffect(() => {\n    linkRef.current.querySelector('svg').classList.add('detectClick');\n    window.addEventListener('mousedown', event => {\n      if (event.target.classList.value.includes('detectClick')) {\n        return;\n      }\n      props.setIsOpenSearchModal(false);\n    });\n  }, []);\n\n  const [filterOneValue, setFilterOneValue] = useState(filerOne[0]);\n  const [filterTwoValue, setFilterTwoValue] = useState(filerTwo[0]);\n  const [filterThreeValue, setFilterThreeValue] = useState(filerThree[0]);\n\n  return (\n    <StyledModal className={classes.main + ' ' + classes.detectClick} direction={props.direction} direction={props.direction}>\n      <StyledArrow className={classes.arrow + ' ' + classes.detectClick} direction={props.direction} direction={props.direction}>\n        <div class={classes.innerArrow + ' ' + classes.detectClick} direction={props.direction}></div>\n      </StyledArrow>\n      <div className={classes.body + ' ' + classes.detectClick} direction={props.direction}>\n        <div className={classes.searchField + ' ' + classes.detectClick} direction={props.direction}>\n          <NavLink\n            ref={linkRef}\n            to={`/search?value=${searchValue}`}\n            className={classes.detectClick}\n            onClick={() => {\n              handleSearch();\n            }}\n          >\n            {searchicon}\n          </NavLink>\n          <input\n            placeholder=\"Search...\"\n            name={'value'}\n            className={classes.detectClick}\n            onChange={e => {\n              setSearchValue(e.target.value);\n            }}\n          />\n        </div>\n        <div className={classes.filters + ' ' + classes.detectClick} direction={props.direction}>\n          <CustomSelect options={filerOne} setFunction={setFilterOneValue} width={32} />\n          <CustomSelect options={filerTwo} setFunction={setFilterTwoValue} width={32} />\n          <CustomSelect options={filerThree} setFunction={setFilterThreeValue} width={32} />\n        </div>\n      </div>\n    </StyledModal>\n  );\n};\n\nlet mapStateToProps = state => ({\n  direction: state.common.direction,\n  searchValue: state.common.searchValue,\n});\n\nexport default connect(mapStateToProps, {\n  setSearchValue,\n})(SearchModal);\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Common/Cutsom/Select/CustomSelect.jsx",["811"],"import React, { useEffect, useState } from 'react';\nimport classes from './CustomSelect.module.css';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\n\nconst StyledSelect = styled.div`\n    width: ${({ width }) => width + \"%\"};\n`;\n\nconst CustomSelect = ({input, meta, ...props}) => {\n    const [currentOption, setCurrentOption] = useState(props.disableDefValueOptionText ? props.disableDefValueOptionText : props.options[0]);\n    const [isOpenDropdown, setIsOpenDropdown] = useState(false);\n\n    useEffect(()=>{\n        if(input){\n            input.value = \"\"\n        }\n       \n    },[]);\n\n    let handleSelect = (option) => {\n        setCurrentOption(option);\n        if(input){\n            input.onChange(option);\n        }\n        props.setFunction(option);\n        setIsOpenDropdown(false);\n    }\n\n    let options = props.options.map((option, index) => {\n        return <span key={index + \"opt\"} onClick={()=>{handleSelect(option)}} className={classes.option + \" \" + classes.detectClick} {...input}>{option}</span>\n    });\n\n    let hasError = null;\n\n    if(props.disableDefValueOption){\n        hasError = meta.touched && meta.error;\n    }\n\n    return(\n            <StyledSelect className={classes.main + \" \" + (hasError && classes.error) + \" \" + classes.detectClick} width={props.width}>\n                <input hidden type=\"checkout\" value={isOpenDropdown} className={classes.detectClick} defaultValue={isOpenDropdown}/>\n                {/* <input {...input} {...props} value={321}/> */}\n                <div className={classes.view + \" \" + classes.detectClick} onClick={()=>setIsOpenDropdown(!isOpenDropdown)}>\n                    <span className={classes.detectClick}>{currentOption}</span>\n                    <div className={classes.arrow + \" \" + (isOpenDropdown && classes.open) + \" \" + classes.detectClick}></div>\n                </div>\n                {isOpenDropdown && \n                <div className={classes.dropdown + \" \" + (isOpenDropdown && classes.openDropdown) + \" \" + classes.detectClick}>\n                    {props.disableDefValueOption && <span className={classes.option + \" \" + classes.disabled + \" \" + classes.detectClick}>{props.disableDefValueOptionText}</span>}\n                    {options}\n                </div>}\n                {props.disableDefValueOption && \n                    <>\n                        {hasError && <span>{meta.error}</span>}\n                    </>\n                }\n            </StyledSelect>  \n    );\n}\n\nlet mapStateToProps = (state) => ({\n    direction: state.common.direction\n});\n\nexport default connect(mapStateToProps, null)(CustomSelect);","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/index.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Layout/Main/index.js",["812"],"import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { SnackbarProvider, useSnackbar } from 'notistack';\n\nimport { NavBar, ErrorBoundary } from 'Components';\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  margin: 0;\n`;\n\nconst Snack = ({ success, error }) => {\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  if (success || error)\n    enqueueSnackbar(success ? 'Success' : error, {\n      variant: success ? 'success' : 'error',\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right',\n      },\n    });\n  return null;\n};\n\nconst MainLayout = props => {\n  useEffect(() => {\n    if (!props.isAuthenticated) props.history.push('/login');\n  }, [props.location.path, props.isAuthenticated]);\n\n  return (\n    <Container dir={props.direction}>\n      {props.isAuthenticated && <NavBar changeLanguage={props.changeLanguage} />}\n      <SnackbarProvider>\n        <Snack success={props.global.success} error={props.global.error} />\n        <ErrorBoundary>{props.children}</ErrorBoundary>\n      </SnackbarProvider>\n    </Container>\n  );\n};\nconst mapStateToProps = state => ({\n  isAuthenticated: state.authentication.isAuthenticated,\n  global: state.global,\n});\n\n// const WrapSnackbar = withSnackbar(MainLayout);\n\nexport default connect(mapStateToProps)(withRouter(MainLayout));\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Navbar/Navbar.jsx",["813","814","815","816","817"],"import React, { useState } from 'react';\nimport { useStore } from 'react-redux';\n\nimport styled from 'styled-components';\nimport classes from './Navbar.module.css';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { programicon } from 'Assets/Images/programicon.js';\nimport { myreporticon } from 'Assets/Images/myreport.js';\nimport { activitiesicon } from 'Assets/Images/activities.js';\nimport { coursesicon } from 'Assets/Images/courses.js';\nimport { notificationicon } from 'Assets/Images/notification.js';\nimport { homeicon } from 'Assets/Images/homeicon.js';\nimport { searchicon } from 'Assets/Images/searchicon.js';\nimport { learnersicon } from 'Assets/Images/learners.js';\nimport Burger from './Burger/Burger';\nimport { useTranslation } from 'react-i18next';\nimport { SearchModal } from 'Components';\nimport ProfileMenu from './ProfileMenu/ProfileMenu';\nimport NotificationsModal from 'Pages/Notifications/NotificationsModal/NotificationsModal';\nimport { planeticon } from 'Assets/Images/planet_icon';\nimport { useSelector } from 'react-redux';\nimport Submenu from './Submenu/Submenu';\nimport { USER_ROLES } from 'Config/constants';\n\nconst StyledLogoBlock = styled.div`\n  a span {\n    margin-left: ${({ direction }) => (direction === 'ltr' ? '5px' : '0')};\n    margin-right: ${({ direction }) => (direction === 'rtl' ? '5px' : '0')};\n  }\n`;\nconst StyledLinks = styled.div`\n  margin-left: ${({ direction }) => (direction === 'ltr' ? '60px' : '0')};\n  margin-right: ${({ direction }) => (direction === 'rtl' ? '60px' : '0')};\n`;\n\nconst StyledNotifications = styled.div`\n  margin-left: ${({ direction }) => (direction === 'rtl' ? '15px' : '0')};\n  margin-right: ${({ direction }) => (direction === 'ltr' ? '15px' : '0')};\n`;\n\nconst StyledBut = styled.button`\n  margin-left: ${({ direction }) => (direction === 'rtl' ? '15px' : '0')};\n  margin-right: ${({ direction }) => (direction === 'ltr' ? '15px' : '0')};\n`;\n\nconst Navbar = props => {\n  const { t, i18n } = useTranslation();\n\n  const currentLanguage = useSelector(state => state.common.currentLanguage);\n\n  const language = () => {\n    if (currentLanguage === 'en') {\n      props.setCurrentLanguage('ar');\n      return 'ar';\n    } else {\n      props.setCurrentLanguage('en');\n      return 'en';\n    }\n  };\n\n  const [isOpenProfileMenu, setIsOpenProfileMenu] = useState(false);\n\n  return (\n    <nav className={classes.main}>\n      <div className={classes.container}>\n        <div className={classes.leftSideNav}>\n          <StyledLogoBlock className={classes.logoBlock} direction={props.direction}>\n            <NavLink to=\"/home\">\n              <div className={classes.logo}></div>\n              <span>{t('navbar.logo')}</span>\n            </NavLink>\n          </StyledLogoBlock>\n          <StyledLinks className={classes.links} direction={props.direction}>\n            <div className={classes.menuItem}>\n              <NavLink to=\"/home\" activeClassName={classes.active}>\n                {homeicon}\n                {t('navbar.home')}\n              </NavLink>\n            </div>\n            <div className={classes.menuItem}>\n              <NavLink to=\"/programs\" activeClassName={classes.active}>\n                {programicon}\n                {t('navbar.programs')}\n              </NavLink>\n            </div>\n            <div className={classes.menuItem}>\n              {props.profile.roleId === USER_ROLES.LEARNER ? (\n                <NavLink to=\"/courses\" activeClassName={classes.active}>\n                  {coursesicon}\n                  {t('navbar.courses')}\n                </NavLink>\n              ) : (\n                <NavLink to=\"/learners\" activeClassName={classes.active} className={classes.learnersLink}>\n                  {learnersicon}\n                  {t('navbar.learners')}\n                </NavLink>\n              )}\n            </div>\n            <div className={classes.menuItem}>\n              <NavLink to=\"/activities\" activeClassName={classes.active}>\n                {activitiesicon}\n                {t('navbar.activities')}\n              </NavLink>\n            </div>\n            <div className={classes.menuItem}>\n              <NavLink to=\"/report\" activeClassName={classes.active}>\n                {myreporticon}\n                {t('navbar.myreport')}\n              </NavLink>\n            </div>\n          </StyledLinks>\n        </div>\n\n        <div className={classes.rightSideNav}>\n          <div className={classes.langBut}>\n            <div className={classes.showLng}>{currentLanguage === 'en' ? 'AR' : 'EN'}</div>\n            <button\n              onClick={() => {\n                props.changeLanguage(language());\n              }}\n            >\n              {planeticon}\n            </button>\n          </div>\n          <StyledBut\n            className={classes.searchBut + ' ' + (props.isOpenSearchModal && classes.activeSearch)}\n            direction={props.direction}\n            onClick={() => {\n              props.setIsOpenSearchModal(!props.isOpenSearchModal);\n            }}\n          >\n            {searchicon}\n          </StyledBut>\n          {props.isOpenSearchModal && <SearchModal setIsOpenSearchModal={props.setIsOpenSearchModal} />}\n          <StyledNotifications className={classes.notifications} direction={props.direction}>\n            <button\n              onClick={() => {\n                props.setIsOpenNotificationsModal(!props.isOpenNotificationsModal);\n              }}\n              className={classes.notBut + ' ' + (props.isOpenNotificationsModal && classes.activeModalNotifications)}\n            >\n              {notificationicon}\n              <div className={classes.notificationsCount}>{props.totalUnreadNotificationsCount}</div>\n            </button>\n          </StyledNotifications>\n          {props.isOpenNotificationsModal && (\n            <NotificationsModal setIsOpenNotificationsModal={props.setIsOpenNotificationsModal} />\n          )}\n          <input type=\"checkbox\" hidden id=\"profileMenu\" className={classes.check} defaultChecked={isOpenProfileMenu} />\n          <label\n            className={classes.userMenu}\n            htmlFor=\"profileMenu\"\n            onClick={() => {\n              setIsOpenProfileMenu(!isOpenProfileMenu);\n            }}\n          >\n            {props.profile.profilePhoto ? (\n              <img src={props.profile.profilePhoto} className={classes.userPhoto} />\n            ) : (\n              <div className={classes.userDefault}></div>\n            )}\n            <span>{props.profile.name}</span>\n            <div className={classes.profileMenuContainer}>\n              {isOpenProfileMenu && <ProfileMenu setIsOpenProfileMenu={setIsOpenProfileMenu} />}\n            </div>\n          </label>\n          <div className={classes.burger}>\n            <Burger changeLanguage={props.changeLanguage} language={language} currentLanguage={currentLanguage} />\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Store/Reducers/authentication.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Programs/Routes.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Activities/Routes.js",["818"],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Library/LibraryContainer.jsx",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Navbar/Submenu/Submenu.jsx",["819"],"import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classes from './Submenu.module.css';\nimport { libraryicon } from '../../../Assets/Images/library';\nimport { activitiesicon } from '../../../Assets/Images/activities.js';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\n\nconst StyledArrow = styled.div`\n    left: ${({ direction }) => direction === \"ltr\" ? '-81px' : '81px'};\n    & div{\n        left: ${({ direction }) => direction === \"ltr\" ? '-4px' : '4px'};\n    }\n`;\n\nconst StyledDropDown = styled.div`\ntransform: ${({ direction }) => direction === \"ltr\" ? 'translateX(3px)' : 'translateX(-3px)'}; \n`;\n\nconst Submenu = (props) => {\n    const {t, i18n} = useTranslation();\n    return(\n        <StyledDropDown className={classes.main} direction={props.direction}>\n            <StyledArrow className={classes.arrow  + \" \" + classes.detectClick} direction={props.direction}>\n                <div className={classes.innerArrow  + \" \" + classes.detectClick}></div>\n            </StyledArrow>\n            <div className={classes.body}>\n                <div className={classes.menuItem}>\n                    \n                    <NavLink to=\"/activities\" activeClassName={classes.active}>\n                        <div className={classes.icon}>\n                            {activitiesicon}\n                        </div>\n                        \n                        <span>{t(\"navbar.myActivities\")}</span>\n                    </NavLink>\n                </div>\n                <div className={classes.menuItem}>\n                    <NavLink to=\"/library\" activeClassName={classes.active}>\n                        <div className={classes.icon}>\n                            {libraryicon}\n                        </div>\n                        <span>{t(\"navbar.library\")}</span>\n                    </NavLink>\n                </div>\n            </div>\n        </StyledDropDown>\n        \n    );\n}\n\nlet mapStateToProps = (state) => ({\n    direction: state.common.direction\n})\n\nexport default connect(mapStateToProps, {})(Submenu);","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Services/index.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Utils/actionTypes.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Services/authentication.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Config/constants.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Library/Library.jsx",["820","821"],"import React from 'react';\nimport classes from './Library.module.css';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\nimport { empty_state_icon } from '../../Assets/Images/empty_state_icon';\n\nconst StyledLabel = styled.label`\n  margin-left: ${({ direction }) => (direction === 'rtl' ? '56px' : '0')};\n  margin-right: ${({ direction }) => (direction === 'ltr' ? '56px' : '0')};\n`;\n\nconst Library = props => {\n  const { t, i18n } = useTranslation();\n\n  let libraryItemsList = [];\n\n  // libraryItemsList = props.libraryItemsList.map(item => {\n\n  // });\n\n  return (\n    <div className={classes.main}>\n      <div className={classes.header}>\n        <div className={classes.container}>\n          <h1>{t('activities.library.title')}</h1>\n          <div className={classes.filters}>\n            <StyledLabel className={classes.filter} direction={props.direction}>\n              <span className={classes.filterText}>{t('courses.filters.all')}</span>\n              <input\n                type=\"checkbox\"\n                onChange={() => {\n                  props.setAll();\n                }}\n                checked={props.all}\n                value={props.all}\n              />\n              <span className={classes.checkmark}></span>\n            </StyledLabel>\n            <StyledLabel className={classes.filter} direction={props.direction}>\n              <span className={classes.filterText}>{t('activities.library.images')}</span>\n              <input\n                type=\"checkbox\"\n                onChange={() => {\n                  props.setIsImage(!props.isImage);\n                }}\n                checked={props.isImage}\n              />\n              <span className={classes.checkmark}></span>\n            </StyledLabel>\n            <StyledLabel className={classes.filter} direction={props.direction}>\n              <span className={classes.filterText}>{t('activities.library.hyperlinks')}</span>\n              <input\n                type=\"checkbox\"\n                onChange={() => {\n                  props.setIsHyperlink(!props.isHyperlink);\n                }}\n                checked={props.isHyperlink}\n              />\n              <span className={classes.checkmark}></span>\n            </StyledLabel>\n            <StyledLabel className={classes.filter} direction={props.direction}>\n              <span className={classes.filterText}>{t('activities.library.files')}</span>\n              <input\n                type=\"checkbox\"\n                onChange={() => {\n                  props.setIsFiles(!props.isFiles);\n                }}\n                checked={props.isFiles}\n              />\n              <span className={classes.checkmark}></span>\n            </StyledLabel>\n          </div>\n        </div>\n      </div>\n      <div className={classes.itemsList}>\n        <div className={classes.containerItems}>\n          {libraryItemsList.length > 0 && libraryItemsList != null && libraryItemsList != undefined ? (\n            libraryItemsList\n          ) : (\n            <div className={classes.empty}>\n              <div className={classes.emptyIcon}>{empty_state_icon}</div>\n              <span>{t('activities.library.noResources')}</span>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Library;\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Activities/index.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Activities/ActivitiesContainer.jsx",["822"],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Activities/EditActivity/EditActivity.jsx",["823","824","825","826","827","828","829","830","831"],"import React, { useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport classes from '../AddActivity/AddActivity.module.css';\nimport { useTranslation } from 'react-i18next';\nimport { required } from 'Utils/validators';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { Preloader, CustomSelect, AuthInput, Calendar, TextAreaCustom } from 'Components';\nimport { getOneActivity } from 'Store/Reducers/activities';\nimport styled from 'styled-components';\nimport ActivityFile from '../ActivityFile/ActivityFile';\nimport { FileDrop } from 'react-file-drop';\nimport uploadicon from 'Assets/Images/upload.svg';\n\nconst StyledLabel = styled.label`\n  margin-left: ${({ direction }) => '30px'};\n  margin-right: ${({ direction }) => '30px'};\n`;\n\nconst EditActivityForm = props => {\n  const { t, i18n } = useTranslation();\n  let maxLength = 300;\n\n  const [charactersLeft, setCharactersLeft] = useState(maxLength);\n\n  let disableDefValueOption = true;\n  let disableDefValueOptionText = t('addActivity.typeDef');\n\n  let disableDefSupervisorOption = true;\n  let disableDefSupervisorOptionText = t('addActivity.supervisorDef');\n\n  const [size, setSize] = useState([window.outerWidth, window.innerHeight]);\n  const [selectWidth, setSelectWidth] = useState(66);\n\n  useLayoutEffect(() => {\n    function updateSize() {\n      setSize([window.outerWidth, window.innerHeight]);\n    }\n    window.addEventListener('resize', updateSize);\n    updateSize();\n    return () => window.removeEventListener('resize', updateSize);\n  }, []);\n\n  useEffect(() => {\n    if (size[0] > 568) {\n      setSelectWidth(66);\n    } else {\n      setSelectWidth(100);\n    }\n  }, [size]);\n\n  let handleTextArea = e => {\n    setCharactersLeft(maxLength - e.target.value.length);\n  };\n\n  let types = ['type1', 'type2', 'type3'];\n\n  let supervisorsOptions = ['sup1', 'sup2', 'sup3'];\n\n  const fileInputRef = useRef(null);\n\n  const onFileInputChange = event => {\n    const newFiles = [...props.files];\n    const newFilesToPush = [...event.target.files];\n    newFilesToPush.forEach(item => {\n      newFiles.push(item);\n    });\n    props.setFiles(newFiles);\n  };\n\n  const onTargetClick = () => {\n    fileInputRef.current.click();\n  };\n  const onDropHandler = (files, event) => {\n    const newFilesToPush = [...files];\n    const newFiles = [...props.files];\n    newFilesToPush.forEach(item => {\n      newFiles.push(item);\n    });\n    props.setFiles(newFiles);\n  };\n\n  const handleRemoveFile = index => {\n    const newFiles = [...props.files];\n    newFiles.forEach((item, i) => {\n      if (index === i) {\n        newFiles.splice(index, 1);\n      }\n    });\n    props.setFiles(newFiles);\n  };\n  let viewFiles = [];\n\n  viewFiles = props.files.map((f, index) => {\n    return <ActivityFile name={f.name} index={index} handleRemoveFile={handleRemoveFile} />;\n  });\n\n  return (\n    <form onSubmit={props.handleSubmit} className={classes.form}>\n      <div className={classes.field + ' ' + classes.inputField}>\n        <label className={classes.fieldLabel}>{t('addActivity.name')}</label>\n        <Field component={AuthInput} placeholder={t('addActivity.namePlaceholder')} name=\"name\" validate={[required]} />\n      </div>\n      <div className={classes.field + ' ' + classes.inputField}>\n        <label className={classes.fieldLabel}>{t('addActivity.link')}</label>\n        <Field component={AuthInput} name=\"link\" />\n      </div>\n      {/* <div className={classes.field}>\n                <label className={classes.fieldLabel}>{t(\"addActivity.supervisor\")}</label>\n                <p></p>\n                <Field component={CustomSelect} options={supervisorsOptions} setFunction={props.setSupervisor} width={selectWidth} \n                        validate={[required]} name=\"supervisor\" disableDefValueOption={disableDefSupervisorOption} disableDefValueOptionText={disableDefSupervisorOptionText}/>\n            </div> */}\n      <div className={classes.field + ' ' + classes.inputField}>\n        <label className={classes.fieldLabel}>{t('addActivity.points')}</label>\n        <Field component={AuthInput} name=\"points\" validate={[required]} />\n      </div>\n      <div className={classes.field}>\n        <label className={classes.fieldLabel}>{t('addActivity.description')}</label>\n        <Field\n          component={TextAreaCustom}\n          name=\"description\"\n          maxLength={maxLength}\n          left={charactersLeft}\n          rows={1}\n          onChange={handleTextArea}\n        />\n      </div>\n      <div className={classes.field}>\n        <label className={classes.fieldLabel}>{t('addActivity.date')}</label>\n        <div className={classes.dates}>\n          <Field component={Calendar} name=\"start\" />\n          <StyledLabel direction={props.direction}>{t('addActivity.to')}</StyledLabel>\n          <Field component={Calendar} name=\"end\" />\n        </div>\n      </div>\n      <div className={classes.field}>\n        <label className={classes.fieldLabel}>{t('addActivity.type')}</label>\n        <p></p>\n        <Field\n          component={CustomSelect}\n          options={types}\n          setFunction={props.setType}\n          width={selectWidth}\n          validate={[required]}\n          name=\"type\"\n          disableDefValueOption={disableDefValueOption}\n          disableDefValueOptionText={disableDefValueOptionText}\n        />\n      </div>\n      <div className={classes.field}>\n        <label className={classes.fieldLabel}>{t('addActivity.visibility')}</label>\n        <div className={classes.radios}>\n          <div className={classes.visibilityBlock}>\n            <input\n              type=\"radio\"\n              name=\"visibility\"\n              id=\"public\"\n              onChange={e => {\n                props.setVisibility(e.target.value);\n              }}\n              value=\"public\"\n            />\n            <label htmlFor={'public'}>Public</label>\n            <div className={classes.check}></div>\n          </div>\n          <div className={classes.visibilityBlock}>\n            <input\n              type=\"radio\"\n              name=\"visibility\"\n              id=\"private\"\n              checked\n              onChange={e => {\n                props.setVisibility(e.target.value);\n              }}\n              value=\"private\"\n            />\n            <label htmlFor={'private'}>Private</label>\n            <div className={classes.check}></div>\n          </div>\n        </div>\n      </div>\n      <div className={classes.field}>\n        <label className={classes.fieldLabel}>{t('addActivity.upload')}</label>\n        <div className={classes.dragNdrop}>\n          <input onChange={onFileInputChange} ref={fileInputRef} type=\"file\" className={classes.hidden} multiple />\n          <FileDrop\n            onDrop={(files, event) => onDropHandler(files, event)}\n            onTargetClick={onTargetClick}\n            className={classes.drop}\n            draggingOverFrameClassName={classes.onDrag}\n            targetClassName={classes.dropInner}\n          >\n            <div className={classes.uploadBut}>\n              <img src={uploadicon} />\n              <p>{t('addActivity.upload')}</p>\n            </div>\n            <p className={classes.dragText}>{t('addActivity.drag')}</p>\n          </FileDrop>\n        </div>\n        {props.files.length > 0 && <div className={classes.files}>{viewFiles}</div>}\n      </div>\n      <div className={classes.fieldBut}>\n        <button>{t('editActivity.title')}</button>\n        <NavLink to={`/activities/view/${props.activityId}`}>{t('addActivity.cancel')}</NavLink>\n      </div>\n    </form>\n  );\n};\n\nlet EditActivityReduxForm = reduxForm({ form: 'editActivity' })(EditActivityForm);\n\nEditActivityReduxForm = connect(\n  state => ({\n    initialValues: state.activities.currentActivity,\n  }),\n  {}\n)(EditActivityReduxForm);\n\nconst EditActivity = props => {\n  const { t, i18n } = useTranslation();\n  const [type, setType] = useState('');\n  const [visibility, setVisibility] = useState('private');\n  const [supervisor, setSupervisor] = useState('');\n\n  const [files, setFiles] = useState([]);\n\n  useEffect(() => {\n    let activityId = props.match.params.activityId;\n    props.getOneActivity(activityId, props.profile.selectedOrganizationId);\n  }, []);\n\n  let onSubmit = formData => {\n    console.log(formData);\n  };\n  return (\n    <div className={classes.main}>\n      {props.isFetching && <Preloader />}\n      <div className={classes.header}>\n        <div className={classes.headerContainer}>\n          <h1>{t('editActivity.title')}</h1>\n        </div>\n      </div>\n      <div className={classes.formContainer}>\n        <EditActivityReduxForm\n          onSubmit={onSubmit}\n          setFiles={setFiles}\n          files={files}\n          setSupervisor={setSupervisor}\n          setType={setType}\n          visibility={visibility}\n          setVisibility={setVisibility}\n          activityId={props.match.params.activityId}\n          direction={props.direction}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst WithUrlDataContainerComponent = withRouter(EditActivity);\n\nconst mapStateToProps = state => ({\n  isFetching: state.common.isFetching,\n  profile: state.authentication.profile,\n  direction: state.common.direction,\n});\n\nconst mapDispatchToProps = {\n  getOneActivity,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WithUrlDataContainerComponent);\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Activities/AddActivity/AddActivity.jsx",["832","833","834","835","836","837","838","839","840"],"import React, { useCallback, useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport classes from './AddActivity.module.css';\nimport { useTranslation } from 'react-i18next';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport uploadicon from '../../../Assets/Images/upload.svg';\nimport { FileDrop } from 'react-file-drop';\nimport ActivityFile from '../ActivityFile/ActivityFile';\nimport { required } from 'Utils/validators';\nimport { AuthInput, Calendar, CustomSelect, Preloader, TextAreaCustom } from 'Components';\n\nconst StyledLabel = styled.label`\n    margin-left: ${({ direction }) => direction === \"ltr\" && \"30px\"};\n    margin-right: ${({ direction }) => direction === \"rtl\" && \"30px\"};\n`;\n\nconst AddActivityForm = (props) => {\n    const {t, i18n} = useTranslation();\n    let maxLength = 300;\n\n    const [charactersLeft, setCharactersLeft] = useState(maxLength);\n\n    let disableDefValueOption = true;\n    let disableDefValueOptionText = t(\"addActivity.typeDef\");\n\n    let disableDefSupervisorOption = true;\n    let disableDefSupervisorOptionText = t(\"addActivity.supervisorDef\");\n\n    const [size, setSize] = useState([window.outerWidth, window.innerHeight]);\n    const [selectWidth, setSelectWidth] = useState(66);\n\n    useLayoutEffect(()=>{\n        function updateSize(){\n            setSize([window.outerWidth, window.innerHeight]);\n        }\n        window.addEventListener('resize', updateSize);\n        updateSize();\n        return () => window.removeEventListener('resize', updateSize);\n    },[]);\n\n    useEffect(()=>{\n        if(size[0] > 568){\n            setSelectWidth(66);\n        }else{\n            setSelectWidth(100);\n        }\n    },[size]);\n\n    let handleTextArea = (e) => {\n        setCharactersLeft(maxLength - e.target.value.length);\n    }\n\n    let types = [\"type1\", \"type2\", \"type3\"];\n\n    let supervisorsOptions = ['sup1', 'sup2', 'sup3'];\n\n    const fileInputRef = useRef(null);\n\n\n\n    const onFileInputChange = (event) => {\n        const newFiles = [...props.files];\n        const newFilesToPush = [...event.target.files];\n        newFilesToPush.forEach(item => {\n            newFiles.push(item);\n        })\n        props.setFiles(newFiles);\n    }\n\n    const onTargetClick = () => {\n        fileInputRef.current.click();\n    }\n    const onDropHandler = (files, event) => {\n        const newFilesToPush = [...files];\n        const newFiles = [...props.files];\n        newFilesToPush.forEach(item => {\n            newFiles.push(item);\n        })\n        props.setFiles(newFiles);\n    }\n\n    const handleRemoveFile = (index) => {\n        const newFiles = [...props.files];\n        newFiles.forEach((item, i) => {\n            if(index === i){\n                newFiles.splice(index, 1);\n            }\n        });\n        props.setFiles(newFiles);\n    }\n    let viewFiles = []\n\n    viewFiles = props.files.map((f, index) => {\n        return <ActivityFile name={f.name} index={index} handleRemoveFile={handleRemoveFile}/>\n    })\n\n    return(\n        <form onSubmit={props.handleSubmit} className={classes.form}>\n            <div className={classes.field + \" \" + classes.inputField}>\n                <label className={classes.fieldLabel}>{t(\"addActivity.name\")}</label>\n                <Field component={AuthInput} placeholder={t(\"addActivity.namePlaceholder\")} name=\"name\"\n                    validate={[required]}/>\n            </div>\n            <div className={classes.field + \" \" + classes.inputField}>\n                <label className={classes.fieldLabel}>{t(\"addActivity.link\")}</label>\n                <Field component={AuthInput} name=\"link\"/>\n            </div>\n            {/* <div className={classes.field}>\n                <label className={classes.fieldLabel}>{t(\"addActivity.supervisor\")}</label>\n                <p></p>\n                <Field component={CustomSelect} options={supervisorsOptions} setFunction={props.setSupervisor} width={selectWidth} \n                        validate={[required]} name=\"supervisor\" disableDefValueOption={disableDefSupervisorOption} disableDefValueOptionText={disableDefSupervisorOptionText}/>\n            </div> */}\n            <div className={classes.field + \" \" + classes.inputField}>\n                <label className={classes.fieldLabel}>{t(\"addActivity.points\")}</label>\n                <Field component={AuthInput} name=\"points\"\n                    validate={[required]}/>\n            </div>\n            <div className={classes.field + \" \" + classes.inputField}>\n                <label className={classes.fieldLabel}>{t(\"addActivity.description\")}</label>\n                <Field component={TextAreaCustom} name=\"description\"\n                       maxLength={maxLength} left={charactersLeft} rows={1} onChange={handleTextArea}/>\n            </div>\n            <div className={classes.field}>\n                <label className={classes.fieldLabel}>{t(\"addActivity.date\")}</label>\n                <div className={classes.dates}>\n                    <Field component={Calendar} name=\"start\"/>\n                    <StyledLabel direction={props.direction}>{t(\"addActivity.to\")}</StyledLabel>\n                    <Field component={Calendar} name=\"end\"/>\n                </div>\n            </div>\n            <div className={classes.field}>\n                <label className={classes.fieldLabel + \" \" + classes.select}>{t(\"addActivity.type\")}</label>\n                <p></p>\n                <Field component={CustomSelect} options={types} setFunction={props.setType} width={selectWidth} \n                        validate={[required]} name=\"type\" disableDefValueOption={disableDefValueOption} disableDefValueOptionText={disableDefValueOptionText}/>\n            </div>\n            <div className={classes.field}>\n                <label className={classes.fieldLabel}>{t(\"addActivity.visibility\")}</label>\n                <div className={classes.radios}>\n                    <div className={classes.visibilityBlock}>\n                        <input type=\"radio\" name=\"visibility\" id=\"public\" onChange={e=>{props.setVisibility(e.target.value)}} value=\"public\"/>\n                        <label htmlFor={\"public\"}>Public</label>\n                        <div className={classes.check}></div>\n                    </div>\n                    <div className={classes.visibilityBlock}>\n                        <input type=\"radio\" name=\"visibility\" id=\"private\" checked onChange={e=>{props.setVisibility(e.target.value)}} value=\"private\"/>\n                        <label htmlFor={\"private\"}>Private</label>\n                        <div className={classes.check}></div>\n                    </div>\n                </div>\n            </div>\n            <div className={classes.field}>\n                <label className={classes.fieldLabel}>{t(\"addActivity.upload\")}</label>\n                <div className={classes.dragNdrop}>\n                    <input onChange={onFileInputChange}\n                    ref={fileInputRef}\n                    type=\"file\"\n                    className={classes.hidden} multiple/>\n                    <FileDrop onDrop={(files, event) => onDropHandler(files, event)} onTargetClick={onTargetClick} className={classes.drop} draggingOverFrameClassName={classes.onDrag} targetClassName={classes.dropInner}>\n                        <div className={classes.uploadBut}>\n                            <img src={uploadicon}/>\n                            <p>{t(\"addActivity.upload\")}</p>\n                        </div>\n                        <p className={classes.dragText}>{t(\"addActivity.drag\")}</p>\n                    </FileDrop>\n                </div>\n                {props.files.length > 0 && \n                    <div className={classes.files}>\n                        {viewFiles}\n                    </div>\n                }\n            </div>\n            <div className={classes.fieldBut}>\n                <button>{t(\"addActivity.addActivity\")}</button>\n                <NavLink to=\"/activities\">{t(\"addActivity.cancel\")}</NavLink>\n            </div>\n        </form>\n    );\n}\n\nconst AddActivityReduxForm = reduxForm({form: 'addActivity'})(AddActivityForm);\n\n\nconst AddActivity = (props) => {\n    const {t, i18n} = useTranslation();\n    const [type, setType] = useState(\"\");\n    const [supervisor, setSupervisor] = useState(\"\");\n    const [visibility, setVisibility] = useState(\"private\");\n\n    const [files, setFiles] = useState([]);\n\n    let onSubmit = (formData) => {\n        console.log(formData);\n    }\n    \n    return(\n        <div className={classes.main}>\n            {props.isFetching && <Preloader/>}\n            <div className={classes.header}>\n                <div className={classes.headerContainer}>\n                    <h1>{t(\"addActivity.title\")}</h1>\n                </div>\n            </div>\n            <div className={classes.formContainer}>\n                <AddActivityReduxForm onSubmit={onSubmit} files={files} setFiles={setFiles} setType={setType} visibility={visibility} setVisibility={setVisibility} setSupervisor={setSupervisor} direction={props.direction}/>\n            </div>\n        </div>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n    isFetching: state.common.isFetching,\n    direction: state.common.direction\n})\n\nexport default connect(mapStateToProps, {\n\n})(AddActivity);\n\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Activities/ActivityItem/ActivityItem.jsx",["841"],"import React from 'react';\nimport classes from './ActivityItem.module.css';\nimport { clockicon } from '../../../Assets/Images/clock';\nimport { NavLink } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { learnersicon } from '../../../Assets/Images/learners';\nimport { USER_ROLES } from 'Config/constants';\nimport { ProgressBar } from 'Components';\n\nconst StyledMain = styled.div`\n  width: ${({ width }) => 'calc(' + width + '% - 32px)'};\n  @media (max-width: 500px) {\n    width: 90%;\n  }\n`;\n\nconst StyledTimeBlock = styled.div`\n  margin-left: ${({ direction }) => (direction === 'ltr' ? '16px' : '0')};\n  margin-right: ${({ direction }) => (direction === 'rtl' ? '16px' : '0')};\n`;\n\nconst StyledTimeSpan = styled.span`\n  margin-left: ${({ direction }) => (direction === 'ltr' ? '4px' : '0')};\n  margin-right: ${({ direction }) => (direction === 'rtl' ? '4px' : '0')};\n`;\n\nconst StyledProgressSpan = styled.span`\n  margin-left: ${({ direction }) => (direction === 'ltr' ? '14px' : '0')};\n  margin-right: ${({ direction }) => (direction === 'rtl' ? '14px' : '0')};\n`;\n\nconst StyledLearners = styled.div`\n  margin-left: ${({ direction }) => (direction === 'ltr' ? '16px' : '0')};\n  margin-right: ${({ direction }) => (direction === 'rtl' ? '16px' : '0')};\n`;\n\nconst StyledCountLearners = styled.div`\n  margin-left: ${({ direction }) => (direction === 'ltr' ? '4px' : '0')};\n  margin-right: ${({ direction }) => (direction === 'rtl' ? '4px' : '0')};\n`;\n\nconst ActivityItem = props => {\n  const { t, i18n } = useTranslation();\n  let widthProgressBar = 45;\n  let heightProgressBar = 8;\n\n  const endTime = new Date(props.item.end);\n  const now = new Date();\n\n  var daysLag = Math.ceil(Math.abs(endTime.getTime() - now.getTime()) / (1000 * 3600 * 24));\n\n  return (\n    <StyledMain className={classes.main} width={props.width}>\n      <NavLink to={`/activities/view/${props.item.activityId}`}>\n        <div className={classes.activityHeader}>\n          <span className={classes.program}>\n            {!props.item.description || props.item.description === ''\n              ? t('activityMini.empty')\n              : props.item.description}\n          </span>\n          <div className={classes.headerSide}>\n            <span className={classes.status}>{props.item.status}</span>\n            {props.user.roleId === USER_ROLES.LEARNER ? (\n              <StyledTimeBlock className={classes.timeBlock} direction={props.direction}>\n                {clockicon}\n                <StyledTimeSpan className={classes.time} direction={props.direction}>\n                  {daysLag}\n                  {endTime >= now ? (\n                    <span>{t('activityMini.daysLeft')}</span>\n                  ) : (\n                    <span>{t('activityMini.daysAgo')}</span>\n                  )}\n                </StyledTimeSpan>\n              </StyledTimeBlock>\n            ) : (\n              <StyledLearners direction={props.direction} className={classes.learners}>\n                {learnersicon}\n                <StyledCountLearners direction={props.direction}>\n                  {props.item.learners ? props.item.learners : 0} {t('activityMini.learners')}\n                </StyledCountLearners>\n              </StyledLearners>\n            )}\n          </div>\n        </div>\n        <h3>{props.item.name}</h3>\n        {props.user.roleId === USER_ROLES.LEARNER && (\n          <div className={classes.progressBlock}>\n            <ProgressBar width={widthProgressBar} height={heightProgressBar} progress={props.item.totalPoints} />\n            <StyledProgressSpan direction={props.direction}>{props.item.totalPoints}%</StyledProgressSpan>\n          </div>\n        )}\n      </NavLink>\n    </StyledMain>\n  );\n};\n\nlet mapStateToProps = state => ({\n  direction: state.common.direction,\n  profile: state.authentication.profile,\n});\n\nexport default connect(mapStateToProps, {})(ActivityItem);\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Navbar/ProfileMenu/ProfileMenu.jsx",["842","843","844"],"import React, { useEffect, useReducer, useRef } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport classes from './ProfileMenu.module.css';\nimport { logout } from 'Store/Reducers/authentication';\nimport { logout_icon } from 'Assets/Images/logout_icon';\nimport { profile_settings_icon } from 'Assets/Images/profile_settings_icon';\n\nconst StyledModal = styled.div`\n  direction: ${({ direction }) => direction};\n  transform: ${({ direction }) =>\n    direction === 'ltr' ? 'translateX(-233px) translateY(25px)' : 'translateX(-73px) translateY(25px)'};\n`;\nconst StyledArrow = styled.div`\n  left: ${({ direction }) => (direction === 'ltr' ? '-15px' : '25px')};\n  & div {\n    left: ${({ direction }) => (direction === 'ltr' ? '-4px' : '4px')};\n  }\n`;\n\nconst StyledMenu = styled.div`\n  span {\n    margin-left: ${({ direction }) => (direction === 'ltr' ? '10px' : '0')};\n    margin-right: ${({ direction }) => (direction === 'rtl' ? '10px' : '0')};\n  }\n`;\n\nconst ProfileMenu = props => {\n  const handleLogout = () => {\n    props.logout();\n    props.setIsOpenProfileMenu(false);\n  };\n  const linkRef = useRef(null);\n  const butRef = useRef(null);\n\n  useEffect(() => {\n    linkRef.current.querySelector('svg').classList.add('detectClick');\n    butRef.current.querySelector('svg').classList.add('detectClick');\n    window.addEventListener('mousedown', event => {\n      if (event.target.classList.value.includes('detectClick')) {\n        return;\n      }\n      props.setIsOpenProfileMenu(false);\n    });\n  }, []);\n\n  return (\n    <StyledModal className={classes.main + ' ' + classes.detectClick} direction={props.direction}>\n      <StyledArrow className={classes.arrow + ' ' + classes.detectClick} direction={props.direction}>\n        <div className={classes.innerArrow + ' ' + classes.detectClick}></div>\n      </StyledArrow>\n      <StyledMenu className={classes.menu + ' ' + classes.detectClick} direction={props.direction}>\n        <div className={classes.menuItem + ' ' + classes.withBorder + ' ' + classes.detectClick}>\n          <NavLink\n            ref={linkRef}\n            to=\"/profile\"\n            className={classes.detectClick}\n            onClick={() => {\n              props.setIsOpenProfileMenu(false);\n            }}\n          >\n            {profile_settings_icon}\n            <span className={classes.detectClick}>Profile Settings</span>\n          </NavLink>\n        </div>\n        <div className={classes.menuItem + ' ' + classes.detectClick}>\n          <button ref={butRef} className={classes.detectClick} onClick={handleLogout}>\n            {logout_icon}\n            <span className={classes.detectClick}>Logout</span>\n          </button>\n        </div>\n      </StyledMenu>\n    </StyledModal>\n  );\n};\n\nlet mapStateToProps = state => ({\n  direction: state.common.direction,\n});\n\nexport default connect(mapStateToProps, {\n  logout,\n})(ProfileMenu);\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Navbar/Burger/Burger.jsx",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Activities/Activities.jsx",["845","846","847","848"],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Navbar/Burger/BurgerMenu.jsx",["849","850"],"import React from 'react';\nimport styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport classes from '../Navbar.module.css';\nimport { useTranslation } from 'react-i18next';\nimport {planeticon} from '../../../Assets/Images/planet_icon'\n\nconst Menu = styled.div`\n    width: 100%;\n    height: 100vh;\n    transform: ${({ open }) => open ? 'translateX(0)' : 'translateX(100%)'};\n    position: fixed;\n    top: 0;\n    left: 0;\n    background-color: #59bcabe3;\n    transition-duration: 0.4s;\n    z-index: 100;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    a{\n        font-size: 35px;\n    }\n    a.active{\n        color: white;\n    }\n\n`;\n\n\nconst BurgerMenu = ({open, setOpen, changeLanguage, language, currentLanguage}) => {\n    const {t, i18n} = useTranslation();\n    return(\n        <Menu open={open}>\n            <nav className={\"nav\"}>\n                <div className={classes.menuItem}>\n                    <NavLink to=\"/home\" activeClassName={\"active\"} onClick={()=>{setOpen(false)}}>{t(\"navbar.home\")}</NavLink>\n                </div>\n                <div className={classes.menuItem}>\n                    <NavLink to=\"/programs\" activeClassName={\"active\"} onClick={()=>{setOpen(false)}}>{t(\"navbar.programs\")}</NavLink>\n                </div>\n                <div className={classes.menuItem}>\n                    <NavLink to=\"/courses\" activeClassName={\"active\"} onClick={()=>{setOpen(false)}}>{t(\"navbar.courses\")}</NavLink>\n                </div>\n                <div className={classes.menuItem}>\n                    <NavLink to=\"/activities\" activeClassName={\"active\"} onClick={()=>{setOpen(false)}}>{t(\"navbar.activities\")}</NavLink>\n                </div>\n                <div className={classes.menuItem}>\n                    <NavLink to=\"/library\" activeClassName={\"active\"} onClick={()=>{setOpen(false)}}>{t(\"navbar.library\")}</NavLink>\n                </div>\n                <div className={classes.menuItem}>\n                    <NavLink to=\"/report\" activeClassName={\"active\"} onClick={()=>{setOpen(false)}}>{t(\"navbar.myreport\")}</NavLink>\n                </div>\n                <div className={classes.langBurgerMenu}>\n                    <button onClick={()=>{changeLanguage(language())}}>\n                            <span className={currentLanguage === \"en\" ? classes.langBurgerMenuActive : \"\"}>\n                                EN\n                            </span>\n                            <span className={currentLanguage === \"ar\" ? classes.langBurgerMenuActive : \"\"}>\n                                AR\n                            </span>\n                    </button>\n                </div>\n            </nav>\n        </Menu>\n    )\n    \n}\n\nexport default BurgerMenu;","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Activities/ActivityFile/ActivityFile.jsx",["851"],"import React from 'react';\nimport classes from './ActivityFile.module.css';\nimport pdficon from '../../../Assets/Images/pdficon.svg';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\n\n\nconst StyledDiv = styled.div`\n    margin-left: ${({ direction }) => direction === \"ltr\" ? \"0\" : \"10px\"};\n    margin-right: ${({ direction }) => direction === \"rtl\" ? \"0\" : \"10px\"};\n`;\n\nconst StyledBut = styled.button`\n    left: ${({ direction }) => direction === \"ltr\" ? \"10px\" : \"-10px\"};\n`;\n\nconst ActivityFile = (props) => {\n    return(\n        <StyledDiv className={classes.main} direction={props.direction}>\n            <div className={classes.body}>\n                <StyledBut direction={props.direction} onClick={()=>{props.handleRemoveFile(props.index)}}>&#x2715;</StyledBut>\n                <img src={pdficon}/>\n            </div>\n            <span>{props.name}</span>\n        </StyledDiv>\n        \n    );\n}\n\nlet mapStateToProps = (state) => ({\n    direction: state.common.direction\n})\n\nexport default connect(mapStateToProps, {})(ActivityFile);","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Layout/PageLayout/Main.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Layout/PageLayout/PageHeader.js",["852","853","854","855","856"],"import React from 'react';\nimport styled from 'styled-components';\nimport { useTranslation } from 'react-i18next';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faArrowLeft } from '@fortawesome/free-solid-svg-icons';\n\nimport classes from './styles.module.css';\nimport { Button } from 'Components';\n\nconst StyledLabel = styled.label`\n  margin-left: ${({ direction }) => (direction === 'rtl' ? '56px' : '0')};\n  margin-right: ${({ direction }) => (direction === 'ltr' ? '56px' : '0')};\n`;\n\nconst PageHeader = ({ title, filters, direction, history }) => {\n  const { t, i18n } = useTranslation();\n  const editMode = title.startsWith('Edit');\n\n  return (\n    <div className={classes.header}>\n      <div className={classes.headerContainer}>\n        <div className={classes.headerHeader}>\n          <h1>{title}</h1>\n          {\n            <Button variant=\"contained\" color=\"secondary\" onClick={() => history.goBack()}>\n              <FontAwesomeIcon icon={faArrowLeft} />\n              <span style={{ margin: '10px' }}>{' Go back'}</span>\n            </Button>\n          }\n        </div>\n        <div className={classes.filters}>\n          {filters?.map(filter => (\n            <StyledLabel className={classes.filter} direction={direction}>\n              <span className={classes.filterText}>{filter}</span>\n              <input type=\"checkbox\" />\n              <span className={classes.checkmark}></span>\n            </StyledLabel>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(PageHeader);\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Activities/Activity.jsx",["857","858","859","860"],"import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { NavLink, withRouter } from 'react-router-dom';\n\nimport classes from './Activity.module.css';\nimport { setIsFetching } from 'Store/Reducers/common';\nimport { getOneActivity } from 'Store/Reducers/activities';\nimport Chat from './Chat/Chat';\nimport DeleteModal from 'Components/DeleteModal/DeleteModal';\nimport { Preloader } from 'Components';\n\nconst StyledMarkButton = styled.button`\n  margin-left: ${({ direction }) => (direction === 'ltr' ? '8px' : '0')};\n  margin-right: ${({ direction }) => (direction === 'rtl' ? '8px' : '0')};\n`;\n\nconst StyledLeftSide = styled.div`\n  margin-left: ${({ direction }) => (direction === 'rtl' ? '30px' : '0')};\n  margin-right: ${({ direction }) => (direction === 'ltr' ? '30px' : '0')};\n`;\n\nconst StyledProgressSpan = styled.span`\n  margin-left: ${({ direction }) => (direction === 'ltr' ? '13px' : '0')};\n  margin-right: ${({ direction }) => (direction === 'rtl' ? '13px' : '0')};\n`;\n\nconst Activity = props => {\n  const { t, i18n } = useTranslation();\n\n  const [isShowDeleteModal, setIsShowDeleteModal] = useState(false);\n\n  useEffect(() => {\n    let activityId = props.match.params.activityId;\n    props.getActivity(activityId, props.profile.selectedOrganizationId);\n  }, []);\n\n  const [daysLag, setDaysLag] = useState(0);\n  useEffect(() => {\n    if (props.activity) {\n      const endTime = new Date(props.activity.end);\n      const now = new Date();\n\n      var newDaysLag = Math.ceil(Math.abs(endTime.getTime() - now.getTime()) / (1000 * 3600 * 24));\n\n      if (endTime >= now) {\n        newDaysLag = newDaysLag + t('activityMini.daysLeft');\n      } else {\n        newDaysLag = newDaysLag + t('activityMini.daysAgo');\n      }\n      setDaysLag(newDaysLag);\n    }\n  }, [props.activity]);\n\n  return (\n    <div className={classes.main}>\n      {!props.activity ? (\n        <Preloader />\n      ) : (\n        <div className={classes.container}>\n          {isShowDeleteModal && (\n            <DeleteModal\n              setIsShowDeleteModal={setIsShowDeleteModal}\n              title={t('deleteActivity.title')}\n              sub={t('deleteActivity.sub')}\n              deleteText={t('deleteActivity.delete')}\n              cancelText={t('deleteActivity.cancel')}\n            />\n          )}\n          <StyledLeftSide className={classes.leftSide} direction={props.direction}>\n            <div className={classes.block + ' ' + classes.withoutPadding}>\n              <div className={classes.infoBlock}>\n                <p>{t('home.statistic.infoUser.welcome')}</p>\n                <h3>{props.profile.name}</h3>\n              </div>\n              <div className={classes.infoBlock}>\n                <label>{t('home.statistic.infoUser.learningHours')}</label>\n                <span>\n                  <strong>34 {t('home.statistic.infoUser.hours')}</strong> {t('home.statistic.infoUser.and')}{' '}\n                  <strong>54 {t('home.statistic.infoUser.mins')}</strong>\n                </span>\n              </div>\n              <hr className={classes.line} />\n              <div className={classes.infoBlock}>\n                <label>{t('home.statistic.infoUser.learningGoal')}</label>\n                <span>\n                  <strong>34 {t('home.statistic.infoUser.hours')}</strong>\n                </span>\n              </div>\n            </div>\n            {/* <div className={classes.block + \" \" + classes.programs}>\n                        <div className={classes.programsHeader}>\n                            <h4>{t(\"home.statistic.programs.related\")}</h4>\n                            <NavLink to=\"/programs\">{t(\"home.statistic.programs.viewAll\")}</NavLink>\n                        </div>\n                        <div className={classes.progressBlock}>\n                            <label>Sketching out ideas for securin....</label>\n                            <div className={classes.progressContainer}>\n                                <ProgressBar width={widthProgressBar} height={heightProgressBar} progress={78}/>\n                                <span>78%</span>\n                            </div>\n                        </div>\n                        <div className={classes.progressBlock}>\n                            <label>Team brainstorming</label>\n                            <div className={classes.progressContainer}>\n                                <ProgressBar width={widthProgressBar} height={heightProgressBar} progress={42}/>\n                                <span>42%</span>\n                            </div>\n                        </div>\n                    </div> */}\n          </StyledLeftSide>\n          <div className={classes.rightSide}>\n            <div className={classes.tabHeader}>\n              <h1>{t('activityDetails.title')}</h1>\n              <span>{props.activity.isPublic ? t('activityDetails.public') : t('activityDetails.private')}</span>\n            </div>\n            <div className={classes.activity}>\n              <div className={classes.activityHeader}>\n                <span className={classes.fullPath}>\n                  <span className={classes.path}>Cybersecurity awareness &gt;</span> Cybersecurity\n                </span>\n                <div className={classes.headerRightSide}>\n                  <NavLink to={`/activities/edit/${props.match.params.activityId}`} className={classes.editBut}>\n                    <i className=\"far fa-edit\"></i>\n                    {t('activityDetails.edit')}\n                  </NavLink>\n                  <button className={classes.removeBut} onClick={() => setIsShowDeleteModal(true)}>\n                    <i className=\"far fa-trash-alt\"></i>\n                    {t('activityDetails.delete')}\n                  </button>\n                </div>\n              </div>\n              <h2>{props.activity.name}</h2>\n              <div className={classes.activityFoot}>\n                <div className={classes.activityProgressBlock}>\n                  {/* <ProgressBar width={widthProgressBar} height={heightProgressBar} progress={props.activity.totalPoints}/>\n                                <StyledProgressSpan direction={props.direction}>{props.activity.totalPoints}%</StyledProgressSpan> */}\n                  <span>\n                    {t('activityDetails.points')} {props.activity.totalPoints}\n                  </span>\n                </div>\n                <div className={classes.activityFootRight}>\n                  <span>{daysLag}</span>\n                  <StyledMarkButton className={classes.mark} direction={props.direction}>\n                    {t('activityDetails.butComplete')}\n                  </StyledMarkButton>\n                </div>\n              </div>\n            </div>\n            <div className={classes.videoBlock}>\n              <div className={classes.video}>\n                <button>\n                  <i className=\"fas fa-play-circle\"></i>\n                </button>\n              </div>\n            </div>\n            <div className={classes.chatBlock}>\n              <h1>{props.activity.isPublic ? t('activityDetails.discuss') : t('activityDetails.contact')}</h1>\n              <Chat currentUser={props.profile} />\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nlet WithUrlDataContainerComponent = withRouter(Activity);\n\nlet mapStateToProps = state => ({\n  isFetching: state.common.isFetching,\n  activity: state.activities.currentActivity,\n  activities: state.activities.activities,\n  profile: state.authentication.profile,\n  direction: state.common.direction,\n});\n\nexport default connect(mapStateToProps, {\n  setIsFetching,\n  getOneActivity,\n})(WithUrlDataContainerComponent);\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Activities/Chat/Chat.jsx",["861","862","863","864"],"import React, { useRef, useState } from 'react';\nimport { connect } from 'react-redux';\nimport classes from './Chat.module.css';\nimport { useTranslation } from 'react-i18next';\nimport send from '../../../Assets/Images/send.svg';\nimport attach from '../../../Assets/Images/attach.svg';\nimport Message from './Message/Message';\n\nconst Chat = (props) => {\n    const {t, i18n} = useTranslation();\n    const fileInputRef = useRef(null);\n\n    const [file, setFile] = useState(null);\n    const [message, setMessage] = useState(\"\");\n\n    const onTargetClick = () => {\n        fileInputRef.current.click();\n    }\n\n    const onFileInputChange = (event) => {\n        setFile(event.target.files[0]);\n    }\n\n    const [tmpMessages, setTmpMessages] = useState([\n        {\n            text: \"Hello\",\n            user: props.currentUser,\n            itsMe: true\n        },\n        {\n            text: \"Muerto.\",\n            user: props.currentUser,\n            itsMe: true\n        },\n        {\n            text: \"Muerto.\",\n            user: props.currentUser,\n            itsMe: false\n        }\n    ])\n\n\n    const sendMessage = (text) => {\n        const newTmpMessages = [...tmpMessages];\n        newTmpMessages.push({\n            text,\n            user: props.currentUser,\n            itsMe: true\n        });\n        setTmpMessages(newTmpMessages);\n        setMessage(\"\");\n    }\n\n    let messages = tmpMessages.map(msg => {\n        return <Message message={msg}/>\n    })\n\n    return(\n        <div className={classes.main}>\n            <div className={classes.messageList}>\n                {messages}\n            </div>\n            <div className={classes.inputBlock}>\n                <input placeholder={t(\"chat.messagePlaceholder\")} onChange={e => setMessage(e.target.value)} value={message}/>\n                \n                <div className={classes.buttons}>\n                    <button onClick={()=>{sendMessage(message)}}>\n                        <img src={send}/>\n                    </button>\n                    <button onClick={()=>{onTargetClick()}}>\n                        <img src={attach}/>\n                    </button>\n                </div>\n                <input type=\"file\" ref={fileInputRef} onChange={onFileInputChange} className={classes.hidden}/>\n            </div>\n        </div>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n\n});\n\nexport default connect(mapStateToProps, {})(Chat);","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Activities/Chat/Message/Message.jsx",["865"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport classes from './Message.module.css';\n\nconst StyledMessage = styled.p`\n    background-color: ${({ itsMe }) => itsMe ? \"#b3dbc9\" : \"#c2c6dd\"};\n    direction: ltr;\n`;\n\nconst StyledArrow = styled.div`\n    border-top: ${({ itsMe }) => itsMe ? \"12px solid #b3dbc9\" : \"12px solid #c2c6dd\"};\n    transform: ${({ itsMe, direction }) => direction === \"ltr\" ? (itsMe ? \"rotate(-90deg)\" : \"rotate(90deg)\") : (itsMe ? \"rotate(90deg)\" : \"rotate(-90deg)\")};\n`;\n\nconst StyledMain = styled.div`\n    direction: ${({ itsMe, direction }) =>  direction === \"ltr\" ? (itsMe ? \"rtl\" : \"ltr\") : (itsMe ? \"ltr\" : \"rtl\")};\n    align-self: ${({ itsMe }) => itsMe ? \"flex-end\" : \"flex-start\"};\n`;\n\nconst StyledMessageBlock = styled.div`\n    margin-left: ${({ itsMe, direction }) => direction === \"ltr\" ? (!itsMe ? \"10px\" : \"0\") : (!itsMe ? \"0\" : \"10px\")};\n    margin-right: ${({ itsMe, direction }) => direction === \"ltr\" ? (itsMe ? \"10px\" : \"0\") : (itsMe ? \"0\" : \"10px\")};\n`;\n\nconst Message = (props) => {\n    const [userName, setUserName] = useState(\"\");\n    useEffect(()=>{\n        let firstLetter = props.message.user.name ? props.message.user.name[0] : \"\";\n        let secondLetter = props.message.user.surname ? props.message.user.surname[0] : \"\";\n        setUserName(firstLetter+secondLetter);\n    },[props.message.user]);\n\n    return(\n        <StyledMain className={classes.main} direction={props.direction} itsMe={props.message.itsMe}>\n            {props.message.user.profilePhoto ?\n            <img src={props.message.user.profilePhoto}/> : \n            <div className={classes.noPhoto}>\n                <span>{userName}</span>\n            </div>}\n            <StyledMessageBlock className={classes.message} direction={props.direction} itsMe={props.message.itsMe}>\n                <StyledArrow className={classes.arrow} direction={props.direction} itsMe={props.message.itsMe}/>\n                <StyledMessage className={classes.text} direction={props.direction} itsMe={props.message.itsMe}>{props.message.text}</StyledMessage>\n            </StyledMessageBlock>\n            \n        </StyledMain>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n    direction: state.common.direction\n})\n\nexport default connect(mapStateToProps, {})(Message);","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Programs/AddEdit/index.js",["866","867","868"],"import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { Autocomplete } from 'formik-material-ui-lab';\n\nimport { resetGlobalState } from 'Store/Reducers/global';\nimport { getPorgramDirectors } from 'Store/Reducers/users';\nimport { getOneProgram, createProgram, updateProgram, resetProgramsState } from 'Store/Reducers/programs';\nimport { PageLayout, TextEditor } from 'Components';\nimport { Grid, Button, TextField, Label, CircularProgress } from 'Components';\n\nconst AddEDitProgram = props => {\n  const [emailBody, setEmailBody] = useState(props.programs.currentProgram?.body || '');\n  const [certificateBody, setCertificateBody] = useState(props.programs.currentProgram?.certificateBody || '');\n  const [open, setOpen] = useState(false);\n  const { t, i18n } = useTranslation();\n  const urlParams = useParams();\n\n  const { users, programs, profile } = props;\n\n  useEffect(() => {\n    if (urlParams.programId) props.getOneProgram(profile.organizationId, urlParams.programId);\n\n    return () => {\n      props.resetProgramsState();\n      props.resetGlobalState();\n    };\n  }, []);\n\n  useEffect(() => {\n    // if (!programs.loading && programs.success) props.history.goBack();\n  }, [programs.loading]);\n\n  const handleEmailBodyChange = event => {\n    const content = event.editor.getData();\n    setEmailBody(content);\n  };\n  const handleCertificateBodyChange = event => {\n    const content = event.editor.getData();\n    setCertificateBody(content);\n  };\n\n  const handleSubmit = (values, { setSubmitting }) => {\n    const programData = { ...values, certificateBody, body: emailBody, organizationId: profile.organizationId };\n    if (programs.currentProgram) props.updateProgram({ ...programData, programId: programs.currentProgram.programId });\n    else props.createProgram(programData);\n    setSubmitting(false);\n  };\n\n  const initialValues = {\n    name: programs.currentProgram?.name,\n    programDirectors: programs.currentProgram?.programDirectors,\n    subject: programs.currentProgram?.subject,\n    body: programs.currentProgram?.body,\n    certificateSubject: programs.currentProgram?.certificateSubject,\n    certificateBody: programs.currentProgram?.certificateBody,\n  };\n\n  const validationSchema = Yup.object({\n    name: Yup.string().required('Program name is required'),\n    programDirectors: Yup.array().min(1, 'You need to select at least one program manager').typeError('Invalid entry'),\n  });\n\n  return (\n    <PageLayout title={urlParams.programId ? 'Edit program' : 'Add new program'} loading={programs.loading}>\n      <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={handleSubmit}>\n        {({ errors, touched, values, handleChange }) => (\n          <Form>\n            <Field\n              id=\"name\"\n              name=\"name\"\n              defaultValue={programs.currentProgram?.name}\n              label=\"Program name\"\n              component={TextField}\n              onChange={handleChange}\n              error={touched.name && Boolean(errors.name)}\n              helperText={touched.name && errors.name}\n              fullWidth\n              required\n            />\n            <Field\n              id=\"programDirectors\"\n              name=\"programDirectors\"\n              component={Autocomplete}\n              multiple\n              open={open}\n              getOptionSelected={(option, value) => option.name === value.name}\n              getOptionLabel={option => `${option.name} ${option.surname}`}\n              options={users.users}\n              loading={users.loading}\n              onOpen={() => {\n                setOpen(true);\n                props.getPorgramDirectors(profile.organizationId);\n              }}\n              onClose={() => {\n                setOpen(false);\n              }}\n              required\n              error={touched.programDirectors && Boolean(errors.programDirectors)}\n              renderInput={params => (\n                <TextField\n                  {...params}\n                  label=\"Program directors\"\n                  InputProps={{\n                    ...params.InputProps,\n                    endAdornment: (\n                      <>\n                        {users.loading ? <CircularProgress color=\"primary\" size={20} /> : null}\n                        {params.InputProps.endAdornment}\n                      </>\n                    ),\n                  }}\n                />\n              )}\n            />\n            <Field\n              id=\"emailSubject\"\n              name=\"subject\"\n              label=\"Email subject\"\n              component={TextField}\n              onChange={handleChange}\n              error={touched.emailSubject && Boolean(errors.emailSubject)}\n              helperText={touched.emailSubject && errors.emailSubject}\n              fullWidth\n            />\n            <Label>Email body</Label>\n            <TextEditor name=\"body\" data={values.body} onChange={handleEmailBodyChange} />\n            <Field\n              id=\"certificateSubject\"\n              name=\"certificateSubject\"\n              label=\"Certificate subject\"\n              component={TextField}\n              onChange={handleChange}\n              error={touched.certificateSubject && Boolean(errors.certificateSubject)}\n              helperText={touched.certificateSubject && errors.certificateSubject}\n              fullWidth\n            />\n            <Label>Certificate body</Label>\n            <TextEditor name=\"certifcateBody\" data={values.certificateBody} onChange={handleCertificateBodyChange} />\n            <Grid>\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={programs.loading}>\n                {programs.loading ? <CircularProgress color=\"primary\" size={20} /> : 'Save'}\n              </Button>\n              <Button variant=\"contained\" color=\"secondary\" disabled={programs.loading} onClick={props.history.goBack}>\n                Cancel\n              </Button>\n            </Grid>\n          </Form>\n        )}\n      </Formik>\n    </PageLayout>\n  );\n};\n\nconst mapStateToProps = state => ({\n  global: state.global,\n  users: state.users,\n  programs: state.programs,\n  profile: state.authentication.profile,\n});\nconst mapDispatchToProps = {\n  getOneProgram,\n  createProgram,\n  updateProgram,\n  getPorgramDirectors,\n  resetProgramsState,\n  resetGlobalState,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddEDitProgram);\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Activities/AddActivity/AddActivityManager.jsx",["869","870","871","872","873","874","875","876","877"],"import React, { useCallback, useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport classes from './AddActivity.module.css';\nimport { useTranslation } from 'react-i18next';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport uploadicon from '../../../Assets/Images/upload.svg';\nimport { FileDrop } from 'react-file-drop';\nimport { required } from 'Utils/validators';\nimport RepeatOptions from '../RepeatOptions/RepeatOptions';\nimport { AuthInput, Calendar, CustomSelect, Preloader, TextAreaCustom } from 'Components';\nimport SearchInput from 'Components/Common/FormControlls/SearchInput/SearchInput';\nimport ActivityFile from '../ActivityFile/ActivityFile';\n\nconst StyledLabel = styled.label`\n    margin-left: ${({ direction }) => direction === \"ltr\" && \"30px\"};\n    margin-right: ${({ direction }) => direction === \"rtl\" && \"30px\"};\n`;\n\nconst AddActivityForm = (props) => {\n    const {t, i18n} = useTranslation();\n    let maxLength = 300;\n\n    const [charactersLeft, setCharactersLeft] = useState(maxLength);\n\n    let disableDefValueOption = true;\n    let disableDefValueOptionText = t(\"addActivity.typeDef\");\n\n    let disableDefSupervisorOption = true;\n    let disableDefSupervisorOptionText = t(\"addActivity.supervisorDef\");\n\n    const [size, setSize] = useState([window.outerWidth, window.innerHeight]);\n    const [selectWidth, setSelectWidth] = useState(66);\n\n    useLayoutEffect(()=>{\n        function updateSize(){\n            setSize([window.outerWidth, window.innerHeight]);\n        }\n        window.addEventListener('resize', updateSize);\n        updateSize();\n        return () => window.removeEventListener('resize', updateSize);\n    },[]);\n\n    useEffect(()=>{\n        if(size[0] > 568){\n            setSelectWidth(66);\n        }else{\n            setSelectWidth(100);\n        }\n    },[size]);\n\n    let handleTextArea = (e) => {\n        setCharactersLeft(maxLength - e.target.value.length);\n    }\n\n    let types = [\"type1\", \"type2\", \"type3\"];\n\n    let supervisorsOptions = ['sup1', 'sup2', 'sup3'];\n\n    const fileInputRef = useRef(null);\n\n\n\n    const onFileInputChange = (event) => {\n        const newFiles = [...props.files];\n        const newFilesToPush = [...event.target.files];\n        newFilesToPush.forEach(item => {\n            newFiles.push(item);\n        })\n        props.setFiles(newFiles);\n    }\n\n    const onTargetClick = () => {\n        fileInputRef.current.click();\n    }\n    const onDropHandler = (files, event) => {\n        const newFilesToPush = [...files];\n        const newFiles = [...props.files];\n        newFilesToPush.forEach(item => {\n            newFiles.push(item);\n        })\n        props.setFiles(newFiles);\n    }\n\n    const handleRemoveFile = (index) => {\n        const newFiles = [...props.files];\n        newFiles.forEach((item, i) => {\n            if(index === i){\n                newFiles.splice(index, 1);\n            }\n        });\n        props.setFiles(newFiles);\n    }\n    let viewFiles = []\n\n    viewFiles = props.files.map((f, index) => {\n        return <ActivityFile name={f.name} index={index} handleRemoveFile={handleRemoveFile}/>\n    })\n\n    return(\n        <form onSubmit={props.handleSubmit} className={classes.form}>\n            <div className={classes.field + \" \" + classes.inputField}>\n                <label className={classes.fieldLabel}>{t(\"addActivity.name\")}</label>\n                <Field component={AuthInput} placeholder={t(\"addActivity.namePlaceholder\")} name=\"name\"\n                    validate={[required]}/>\n            </div>\n            <div className={classes.field + \" \" + classes.inputField}>\n                <label className={classes.fieldLabel}>{t(\"addActivity.link\")}</label>\n                <Field component={AuthInput} name=\"link\"/>\n            </div>\n            {/* <div className={classes.field}>\n                <label className={classes.fieldLabel}>{t(\"addActivity.supervisor\")}</label>\n                <p></p>\n                <Field component={CustomSelect} options={supervisorsOptions} setFunction={props.setSupervisor} width={selectWidth} \n                        validate={[required]} name=\"supervisor\" disableDefValueOption={disableDefSupervisorOption} disableDefValueOptionText={disableDefSupervisorOptionText}/>\n            </div> */}\n            <div className={classes.field + \" \" + classes.inputField}>\n                <label className={classes.fieldLabel}>{t(\"addActivity.points\")}</label>\n                <Field component={AuthInput} name=\"points\"\n                    validate={[required]}/>\n            </div>\n            <div className={classes.field + \" \" + classes.inputField}>\n                <label className={classes.fieldLabel}>{t(\"addActivity.description\")}</label>\n                <Field component={TextAreaCustom} name=\"description\"\n                       maxLength={maxLength} left={charactersLeft} rows={1} onChange={handleTextArea}/>\n            </div>\n            <div className={classes.field}>\n                <label className={classes.fieldLabel}>{t(\"addActivity.date\")}</label>\n                <div className={classes.dates}>\n                    <Field component={Calendar} name=\"start\"/>\n                    <StyledLabel direction={props.direction}>{t(\"addActivity.to\")}</StyledLabel>\n                    <Field component={Calendar} name=\"end\"/>\n                </div>\n            </div>\n            <div className={classes.fieldRadio}>\n                <label className={classes.fieldLabel}>{t(\"addActivity.repeat\")}</label>\n                <div className={classes.radios}>\n                    <div className={classes.visibilityBlock}>\n                        <input type=\"radio\" name=\"isRepeat\" id=\"yes\" onChange={e=>{props.setIsRepeat(true)}} value={true}/>\n                        <label htmlFor={\"yes\"}>{t(\"addActivity.yes\")}</label>\n                        <div className={classes.check}></div>\n                    </div>\n                    <div className={classes.visibilityBlock}>\n                        <input type=\"radio\" name=\"isRepeat\" id=\"no\" defaultChecked={true} onChange={e=>{props.setIsRepeat(false)}} value={false}/>\n                        <label htmlFor={\"no\"}>{t(\"addActivity.no\")}</label>\n                        <div className={classes.check}></div>\n                    </div>\n                </div>\n            </div>\n            {props.isRepeat &&\n            <div className={classes.fieldRepeat}>\n                <label className={classes.fieldLabel + \" \" + classes.select + \" \" + classes.fieldLabelRepeat}>{t(\"activityEditRepeat.title\")}</label>\n                <RepeatOptions/>\n            </div>}\n            <div className={classes.field}>\n                <label className={classes.fieldLabel + \" \" + classes.select}>{t(\"addActivity.type\")}</label>\n                <p></p>\n                <Field component={CustomSelect} options={types} setFunction={props.setType} width={selectWidth} \n                        validate={[required]} name=\"type\" disableDefValueOption={disableDefValueOption} disableDefValueOptionText={disableDefValueOptionText}/>\n            </div>\n            <div className={classes.field}>\n                <label className={classes.fieldLabel}>{t(\"addActivity.visibility\")}</label>\n                <div className={classes.radios}>\n                    <div className={classes.visibilityBlock}>\n                        <input type=\"radio\" name=\"visibility\" id=\"public\" onChange={e=>{props.setVisibility(e.target.value)}} value=\"public\"/>\n                        <label htmlFor={\"public\"}>Public</label>\n                        <div className={classes.check}></div>\n                    </div>\n                    <div className={classes.visibilityBlock}>\n                        <input type=\"radio\" name=\"visibility\" id=\"private\" checked onChange={e=>{props.setVisibility(e.target.value)}} value=\"private\"/>\n                        <label htmlFor={\"private\"}>Private</label>\n                        <div className={classes.check}></div>\n                    </div>\n                </div>\n            </div>\n            <div className={classes.field}>\n                <label className={classes.fieldLabel}>{t(\"addActivity.upload\")}</label>\n                <div className={classes.dragNdrop}>\n                    <input onChange={onFileInputChange}\n                    ref={fileInputRef}\n                    type=\"file\"\n                    className={classes.hidden} multiple/>\n                    <FileDrop onDrop={(files, event) => onDropHandler(files, event)} onTargetClick={onTargetClick} className={classes.drop} draggingOverFrameClassName={classes.onDrag} targetClassName={classes.dropInner}>\n                        <div className={classes.uploadBut}>\n                            <img src={uploadicon}/>\n                            <p>{t(\"addActivity.upload\")}</p>\n                        </div>\n                        <p className={classes.dragText}>{t(\"addActivity.drag\")}</p>\n                    </FileDrop>\n                </div>\n                {props.files.length > 0 && \n                    <div className={classes.files}>\n                        {viewFiles}\n                    </div>\n                }\n            </div>\n            <div className={classes.field}>\n                <label className={classes.fieldLabel}>{t(\"addActivity.search\")}</label>\n                <SearchInput placeholder={t(\"addActivity.search\")}/>\n            </div>\n            <div className={classes.fieldBut}>\n                <button>{t(\"addActivity.addActivity\")}</button>\n                <NavLink to=\"/activities\">{t(\"addActivity.cancel\")}</NavLink>\n            </div>\n        </form>\n    );\n}\n\nconst AddActivityReduxForm = reduxForm({form: 'addActivity'})(AddActivityForm);\n\n\nconst AddActivityManager = (props) => {\n    const {t, i18n} = useTranslation();\n    const [type, setType] = useState(\"\");\n    const [supervisor, setSupervisor] = useState(\"\");\n    const [visibility, setVisibility] = useState(\"private\");\n\n    const [isRepeat, setIsRepeat] = useState(false);\n\n    const [files, setFiles] = useState([]);\n\n    let onSubmit = (formData) => {\n        console.log(formData);\n    }\n    \n    return(\n        <div className={classes.main}>\n            {props.isFetching && <Preloader/>}\n            <div className={classes.header}>\n                <div className={classes.headerContainer}>\n                    <h1>{t(\"addActivity.title\")}</h1>\n                </div>\n            </div>\n            <div className={classes.formContainer}>\n                <AddActivityReduxForm onSubmit={onSubmit} isRepeat={isRepeat} setIsRepeat={setIsRepeat} files={files} setFiles={setFiles} setType={setType} visibility={visibility} setVisibility={setVisibility} setSupervisor={setSupervisor} direction={props.direction}/>\n            </div>\n        </div>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n    isFetching: state.common.isFetching,\n    direction: state.common.direction\n})\n\nexport default connect(mapStateToProps, {\n\n})(AddActivityManager);\n\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Programs/AddProgram/AddProgram.jsx",["878","879","880","881"],"import React, { useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport classes from './AddProgram.module.css';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { AuthInput, CustomSelect, Preloader, TextAreaCustom } from 'Components';\nimport { required } from 'Utils/validators';\nimport FieldImageInput from 'Components/Common/FormControlls/FileControlls/FieldImageInput';\nimport { USER_ROLES } from 'Config/constants';\n\n\nconst AddProgramForm = (props) => {\n    const {t, i18n} = useTranslation();\n    let departamentOptions = ['dep1', 'dep2', 'dep3'];\n\n    let maxLength = 300;\n    const [charactersLeft, setCharactersLeft] = useState(maxLength);\n\n    let handleTextArea = (e) => {\n        setCharactersLeft(maxLength - e.target.value.length);\n    }\n\n    let disableDefSupervisorOption = true;\n    let disableDefSupervisorOptionText = t(\"addProgram.defSelectDepartament\");\n\n    const [size, setSize] = useState([window.outerWidth, window.innerHeight]);\n    const [selectWidth, setSelectWidth] = useState(66);\n\n    useLayoutEffect(()=>{\n        function updateSize(){\n            setSize([window.outerWidth, window.innerHeight]);\n        }\n        window.addEventListener('resize', updateSize);\n        updateSize();\n        return () => window.removeEventListener('resize', updateSize);\n    },[]);\n\n    useEffect(()=>{\n        if(size[0] > 568){\n            setSelectWidth(66);\n        }else{\n            setSelectWidth(100);\n        }\n    },[size]);\n\n\n    return(\n        <form onSubmit={props.handleSubmit} className={classes.form}>\n            <div className={classes.field + \" \" + classes.inputField}>\n                <label className={classes.fieldLabel}>{t(\"addProgram.name\")}</label>\n                <Field component={AuthInput} placeholder={t(\"addProgram.namePlaceholder\")} name=\"name\"\n                    validate={[required]}/>\n            </div>\n            <div className={classes.field}>\n                <label className={classes.fieldLabel}>{t(\"addActivity.supervisor\")}</label>\n                <p></p>\n                <Field component={CustomSelect} options={departamentOptions} setFunction={props.setDepartament} width={selectWidth} \n                        validate={[required]} name=\"departament\" disableDefValueOption={disableDefSupervisorOption} disableDefValueOptionText={disableDefSupervisorOptionText}/>\n            </div>\n            <div className={classes.field + \" \" + classes.inputField}>\n                <label className={classes.fieldLabel}>{t(\"addActivity.description\")}</label>\n                <Field component={TextAreaCustom} name=\"description\"\n                    rows={2} onChange={handleTextArea} isBig={true}/>\n            </div>\n            <div className={classes.field + \" \" + classes.inputField}>\n                <label className={classes.fieldLabel}>{t(\"addActivity.description\")}</label>\n                <Field component={TextAreaCustom} name=\"description\"\n                       maxLength={maxLength} left={charactersLeft} rows={5} onChange={handleTextArea} isBig={true}/>\n            </div>\n            <div className={classes.field}>\n                <label className={classes.fieldLabel}>{t(\"addProgram.uploadTitle\")}</label>\n                <Field component={FieldImageInput} downloadText={t(\"addProgram.upload\")} dragText={t(\"addProgram.drag\")}\n                    name=\"image\" validate={[required]}/>\n            </div>\n            <div className={classes.fieldBut}>\n                <button>{t(\"addProgram.addBut\")}</button>\n                <NavLink to=\"/programs\">{t(\"addProgram.cancel\")}</NavLink>\n            </div>\n        </form>\n    )\n}\n\nconst AddProgramReduxForm = reduxForm({form: 'addProgram'})(AddProgramForm);\n\nconst AddProgram = (props) => {\n    const {t, i18n} = useTranslation();\n    const [departament, setDepartament] = useState(\"\");\n\n    const onSubmit = (formData) => {\n        console.log(formData);\n    }\n\n    return(\n        \n        <div className={classes.main}>\n            {props.user.roleId === USER_ROLES.LEARNER && <Redirect to=\"/\"/>}\n            {props.isFetching && <Preloader/>}\n            <div className={classes.header}>\n                <div className={classes.headerContainer}>\n                    <h1>{t(\"addProgram.title\")}</h1>\n                </div>\n            </div>\n            <div className={classes.formContainer}>\n                <AddProgramReduxForm onSubmit={onSubmit} setDepartament={setDepartament} direction={props.direction}/>\n            </div>\n        </div>\n    )\n}\n\nlet mapStateToProps = (state) => ({\n    isFetching: state.common.isFetching,\n    direction: state.common.direction,\n    user: state.user.user\n});\n\nexport default connect(mapStateToProps, {\n\n})(AddProgram);",["882","883"],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Programs/EditProgram/EditProgram.jsx",["884","885","886","887"],"import React, { useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { reduxForm, Field } from 'redux-form';\nimport classes from '../AddProgram/AddProgram.module.css';\nimport { useTranslation } from 'react-i18next';\nimport { AuthInput, CustomSelect, Preloader, TextAreaCustom } from 'Components';\nimport { required } from 'Utils/validators';\nimport { USER_ROLES } from 'Config/constants';\nimport DeleteModal from '../../../Components/DeleteModal/DeleteModal';\nimport FieldImageInput from 'Components/Common/FormControlls/FileControlls/FieldImageInput';\n\nconst EditProgramForm = (props) => {\n    const {t, i18n} = useTranslation();\n    let departamentOptions = ['dep1', 'dep2', 'dep3'];\n\n    let maxLength = 300;\n    const [charactersLeft, setCharactersLeft] = useState(maxLength);\n\n    let handleTextArea = (e) => {\n        setCharactersLeft(maxLength - e.target.value.length);\n    }\n\n    let disableDefSupervisorOption = true;\n    let disableDefSupervisorOptionText = t(\"addProgram.defSelectDepartament\");\n\n    const [size, setSize] = useState([window.outerWidth, window.innerHeight]);\n    const [selectWidth, setSelectWidth] = useState(66);\n\n    const fileInputRef = useRef(null);\n\n    useLayoutEffect(()=>{\n        function updateSize(){\n            setSize([window.outerWidth, window.innerHeight]);\n        }\n        window.addEventListener('resize', updateSize);\n        updateSize();\n        return () => window.removeEventListener('resize', updateSize);\n    },[]);\n\n    useEffect(()=>{\n        if(size[0] > 568){\n            setSelectWidth(66);\n        }else{\n            setSelectWidth(100);\n        }\n    },[size]);\n\n    return(\n        <form onSubmit={props.handleSubmit} className={classes.form}>\n            <div className={classes.field + \" \" + classes.inputField}>\n                <label className={classes.fieldLabel}>{t(\"addProgram.name\")}</label>\n                <Field component={AuthInput} placeholder={t(\"addProgram.namePlaceholder\")} name=\"name\"\n                    validate={[required]}/>\n            </div>\n            <div className={classes.field}>\n                <label className={classes.fieldLabel}>{t(\"addActivity.supervisor\")}</label>\n                <p></p>\n                <Field component={CustomSelect} options={departamentOptions} setFunction={props.setDepartament} width={selectWidth} \n                        validate={[required]} name=\"departament\" disableDefValueOption={disableDefSupervisorOption} disableDefValueOptionText={disableDefSupervisorOptionText}/>\n            </div>\n            <div className={classes.field + \" \" + classes.inputField}>\n                <label className={classes.fieldLabel}>{t(\"addActivity.description\")}</label>\n                <Field component={TextAreaCustom} name=\"description\"\n                    rows={2} onChange={handleTextArea} isBig={true}/>\n            </div>\n            <div className={classes.field + \" \" + classes.inputField}>\n                <label className={classes.fieldLabel}>{t(\"addActivity.description\")}</label>\n                <Field component={TextAreaCustom} name=\"description\"\n                        maxLength={maxLength} left={charactersLeft} rows={5} onChange={handleTextArea} isBig={true}/>\n            </div>\n            <div className={classes.field}>\n                <label className={classes.fieldLabel}>{t(\"addProgram.uploadTitle\")}</label>\n                <Field component={FieldImageInput} downloadText={t(\"addProgram.upload\")} dragText={t(\"addProgram.drag\")}\n                    name=\"image\" validate={[required]}/>\n            </div>\n            <div className={classes.fieldBut}>\n                <button>{t(\"addProgram.addBut\")}</button>\n                <NavLink to={`/programs/view/${props.currentProgram.programId}`}>{t(\"addProgram.cancel\")}</NavLink>\n            </div>\n        </form>\n    );\n}\n\nlet EditProgramReduxForm = reduxForm({form: 'editProgram'})(EditProgramForm);\n\nEditProgramReduxForm = connect(\n    state => ({\n        initialValues: state.programs.currentProgram\n    }),{}\n)(EditProgramReduxForm);\n\nconst EditProgram = (props) => {\n    const {t, i18n} = useTranslation();\n    const [departament, setDepartament] = useState(\"\");\n\n    const [isShowDeleteModal, setIsShowDeleteModal] = useState(false);\n\n    const onSubmit = (formData) => {\n        console.log(formData);\n    }\n    return(\n        <div className={classes.main}>\n            {props.user.roleId === USER_ROLES.LEARNER && <Redirect to=\"/\"/>}\n            {props.isFetching && <Preloader/>}\n            {isShowDeleteModal && <DeleteModal setIsShowDeleteModal={setIsShowDeleteModal}\n                                title={t(\"deleteProgram.title\")} sub={t(\"deleteProgram.sub\")} \n                                deleteText={t(\"deleteProgram.delete\")} cancelText={t(\"deleteProgram.cancel\")} />}\n            <div className={classes.header}>\n                <div className={classes.headerContainer}>\n                    <h1>{t(\"editProgram.title\")}</h1>\n                    <button className={classes.removeBut} onClick={()=>setIsShowDeleteModal(true)}>\n                        <i className=\"far fa-trash-alt\"></i>\n                        {t(\"activityDetails.delete\")}\n                    </button>\n                </div>\n            </div>\n            <div className={classes.formContainer}>\n                <EditProgramReduxForm onSubmit={onSubmit} \n                                    direction={props.direction}\n                                    setDepartament={setDepartament}\n                                    currentProgram={props.currentProgram}/>\n            </div>\n        </div>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n    isFetching: state.common.isFetching,\n    direction: state.common.direction,\n    user: state.user.user,\n    currentProgram: state.programs.currentProgram\n});\n\nexport default connect(mapStateToProps, {\n\n})(EditProgram);","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Home/Programs/HomePrograms.jsx",["888","889","890"],"import React from 'react';\nimport classes from './HomePrograms.module.css';\nimport { useTranslation } from 'react-i18next';\nimport { programicon } from '../../../Assets/Images/programicon';\nimport { NavLink } from 'react-router-dom';\nimport { empty_state_icon } from '../../../Assets/Images/empty_state_icon';\nimport { learnersicon } from '../../../Assets/Images/learners';\n\nconst HomePrograms = (props) => {\n    const {t, i18n} = useTranslation();\n    let maxProgramsToView = 2;\n    let programs = [];\n\n\n    return(\n        <div className={classes.main}>\n            <div className={classes.header}>\n                <div className={classes.headerBlock}>\n                    {programicon}\n                    <span>{t(\"home.programs.title\")}</span>\n                </div>\n                {programs.length > 0 && <NavLink to=\"/programs\">{t(\"home.programs.viewAll\")}</NavLink>}\n            </div>\n            {(programs.length > 0 && programs != null && programs != undefined) ?\n            <div className={classes.content}>\n                <div className={classes.itemsList}>\n                    {programs}\n                </div> \n                <div className={classes.header}>\n                    <div className={classes.headerBlock}>\n                        {learnersicon}\n                        <span>{t(\"home.learners.title\")}</span>\n                    </div>\n                </div>\n            </div>\n            : \n            <div className={classes.empty}>\n                <div className={classes.emptyIcon}>\n                    {empty_state_icon}\n                </div>\n                <span>{t(\"home.programs.empty\")}</span>\n            </div>}\n        </div>\n    )\n}\n\nexport default HomePrograms;","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Programs/ProgramDetails/ProgramView/ProgramViewContainer.jsx",["891"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Preloader } from 'Components';\nimport { useParams } from 'react-router-dom';\n\nimport ProgramView from './ProgramView';\nimport { setCurrentProgram } from 'Store/Reducers/programs';\nimport { getCourses } from 'Store/Reducers/courses';\n\nconst ProgramViewContainer = props => {\n  const urlParams = useParams();\n\n  const { profile } = props;\n\n  useEffect(() => {\n    props.getCourses(profile.organizationId, urlParams.programId);\n  }, []);\n\n  const [all, setAll] = useState(true);\n  const [completed, setCompleted] = useState(true);\n  const [inProgress, setInProgress] = useState(true);\n  const [notStarted, setNotStarted] = useState(true);\n\n  const handleAll = () => {\n    let newAll = !all;\n    setAll(!all);\n    if (newAll) {\n      setCompleted(true);\n      setInProgress(true);\n      setNotStarted(true);\n      return;\n    } else {\n      setCompleted(false);\n      setInProgress(false);\n      setNotStarted(false);\n    }\n  };\n\n  useEffect(() => {\n    if (completed && inProgress && notStarted) {\n      setAll(true);\n    } else {\n      setAll(false);\n    }\n  }, [completed, inProgress, notStarted]);\n\n  useEffect(() => {\n    if (props.currentProgram?.courses) {\n      if (props.currentProgram.courses.length < 1) {\n        setAll(false);\n        setCompleted(false);\n        setInProgress(false);\n        setNotStarted(false);\n      }\n    }\n  }, [props.currentProgram?.courses]);\n\n  return (\n    <>\n      {props.isFetching ? (\n        <Preloader />\n      ) : (\n        <ProgramView\n          currentProgram={props.currentProgram}\n          courses={props.courses}\n          direction={props.direction}\n          all={all}\n          setAll={handleAll}\n          completed={completed}\n          setCompleted={setCompleted}\n          inProgress={inProgress}\n          setInProgress={setInProgress}\n          notStarted={notStarted}\n          setNotStarted={setNotStarted}\n        />\n      )}\n    </>\n  );\n};\n\nlet mapStateToProps = state => ({\n  isFetching: state.common.isFetching,\n  currentProgram: state.programs.currentProgram,\n  programs: state.programs.programs,\n  courses: state.courses,\n  direction: state.common.direction,\n  profile: state.authentication.profile,\n});\n\nexport default connect(mapStateToProps, {\n  setCurrentProgram,\n  getCourses,\n})(ProgramViewContainer);\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Programs/ProgramDetails/ProgramAttendees/ProgramAttendeesContainer.jsx",["892","893","894"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport ProgramAttendees from './ProgramAttendees';\n\nimport { Redirect } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport { getOneProgram } from '../../../../Store/Reducers/programs';\nimport { Preloader } from 'Components';\nimport { USER_ROLES } from 'Config/constants';\n\nconst ProgramAttendeesContainer = props => {\n  const [all, setAll] = useState(true);\n  const [completed, setCompleted] = useState(true);\n  const [inProgress, setInProgress] = useState(true);\n  const [notStarted, setNotStarted] = useState(true);\n\n  const [searchValue, setSearchValue] = useState('');\n\n  const handleAll = () => {\n    let newAll = !all;\n    setAll(!all);\n    if (newAll) {\n      setCompleted(true);\n      setInProgress(true);\n      setNotStarted(true);\n      return;\n    } else {\n      setCompleted(false);\n      setInProgress(false);\n      setNotStarted(false);\n    }\n  };\n\n  useEffect(() => {\n    if (completed && inProgress && notStarted) {\n      setAll(true);\n    } else {\n      setAll(false);\n    }\n  }, [completed, inProgress, notStarted]);\n\n  useEffect(() => {\n    let programId = props.match.params.programId;\n    props.programs.forEach(prog => {\n      if (prog.programId === programId) {\n        props.setCurrentProgram(prog);\n      }\n    });\n  }, []);\n\n  return (\n    <>\n      {props.isFetching ? (\n        <Preloader />\n      ) : (\n        <ProgramAttendees\n          direction={props.direction}\n          all={all}\n          setAll={handleAll}\n          completed={completed}\n          setCompleted={setCompleted}\n          inProgress={inProgress}\n          setInProgress={setInProgress}\n          notStarted={notStarted}\n          setNotStarted={setNotStarted}\n          setSearchValue={setSearchValue}\n          searchValue={searchValue}\n          currentProgram={props.currentProgram}\n        />\n      )}\n    </>\n  );\n};\n\nlet WithUrlDataContainerComponent = withRouter(ProgramAttendeesContainer);\n\nlet mapStateToProps = state => ({\n  isFetching: state.common.isFetching,\n  direction: state.common.direction,\n  profile: state.authentication.profile,\n  currentProgram: state.programs.currentProgram,\n  programs: state.programs.programs,\n});\n\nexport default connect(mapStateToProps, {\n  setCurrentProgram: getOneProgram,\n})(WithUrlDataContainerComponent);\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Home/Activities/LearnerHomeActivities/HomeActivities.jsx",["895","896","897"],"import React from 'react';\nimport classes from './HomeActivities.module.css';\nimport { activitiesicon } from '../../../../Assets/Images/activities';\nimport { NavLink } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { empty_state_icon } from '../../../../Assets/Images/empty_state_icon';\nimport { ActivityItem } from 'Pages/Activities';\n\nconst HomeActivities = (props) => {\n    const {t, i18n} = useTranslation();\n    let maxActivitiesToView = 10;\n    let blockWidth = 100;\n\n    let activities = [];\n\n    props.activities.sort(function(a,b){\n        return new Date(b.end) - new Date(a.end);\n    });\n\n    activities = props.activities.map((item, index) => {\n        if(index < maxActivitiesToView){\n            return <ActivityItem item={item} key={item.activityId} width={blockWidth}/>\n        }\n    });\n    return(\n        <div className={classes.main}>\n            <div className={classes.activitiesHeader}>\n                <div className={classes.activitiesHeaderBlock}>\n                    {activitiesicon}\n                    <span>{t(\"home.activities.title\")}</span>\n                </div>\n                <NavLink to=\"/activities\">{t(\"home.activities.viewAll\")}</NavLink>\n            </div>\n            <div className={classes.itemsList}>\n                {(activities.length > 0 && activities != null && activities != undefined) ? activities : \n                    <div className={classes.empty}>\n                        <div className={classes.emptyIcon}>\n                            {empty_state_icon}\n                        </div>\n                        <span>{t(\"home.activities.empty\")}</span>\n                    </div>\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default HomeActivities;","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Home/Activities/ManagerHomeActivities/ManagerHomeActivities.jsx",["898","899","900","901","902","903"],"import React, { useState } from 'react';\nimport classes from './ManagerHomeActivities.module.css';\nimport { activitiesicon } from '../../../../Assets/Images/activities';\nimport { NavLink } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { empty_state_icon } from '../../../../Assets/Images/empty_state_icon';\nimport { ACTIVITY_SOURCE_ASSIGNED, ACTIVITY_SOURCE_LOGGED } from 'Config/constants';\nimport { ActivityItem } from 'Pages/Activities';\n\nconst ManagerHomeActivities = (props) => {\n    const {t, i18n} = useTranslation();\n    let maxActivitiesToView = 10;\n    let blockWidth = 100;\n\n    let activities = [];\n\n    let assigned = [];\n    let logged = [];\n\n    const [currentTab, setCurrentTab] = useState(ACTIVITY_SOURCE_ASSIGNED);\n\n    const handleTabs = (tab) => {\n        setCurrentTab(tab);\n    }\n\n    props.activities.sort(function(a,b){\n        return new Date(b.end) - new Date(a.end);\n    });\n\n    assigned = props.activities.map((item, index) => {\n        if(index < maxActivitiesToView){\n            if(item.source === ACTIVITY_SOURCE_ASSIGNED){\n                return <ActivityItem item={item} key={item.activityId} width={blockWidth}/>\n            }\n        }\n    });\n\n    logged = props.activities.map((item, index) => {\n        if(index < maxActivitiesToView){\n            if(item.source === ACTIVITY_SOURCE_LOGGED){\n                return <ActivityItem item={item} key={item.activityId} width={blockWidth}/>\n            }\n        }\n    });\n\n    \n\n\n    return(\n        <div className={classes.main}>\n            <div className={classes.activitiesHeader}>\n                <div className={classes.activitiesHeaderBlock}>\n                    {activitiesicon}\n                    <span>{t(\"home.activities.title\")}</span>\n                </div>\n                <NavLink to=\"/activities\">{t(\"home.activities.viewAll\")}</NavLink>\n            </div>\n            <div className={classes.tabs}>\n                <div className={classes.tabsContainer}>\n                    <button onClick={()=>{handleTabs(ACTIVITY_SOURCE_ASSIGNED)}} className={classes.tab + \" \" + (currentTab === ACTIVITY_SOURCE_ASSIGNED && classes.activeTab)}>{t(\"home.activities.tabs.assigned\")}</button>\n                    <button onClick={()=>{handleTabs(ACTIVITY_SOURCE_LOGGED)}} className={classes.tab + \" \" + (currentTab === ACTIVITY_SOURCE_LOGGED && classes.activeTab)}>{t(\"home.activities.tabs.logged\")}</button>\n                </div>\n            </div>\n            <div className={classes.itemsList}>\n                {currentTab === ACTIVITY_SOURCE_ASSIGNED && \n                    ((assigned.length > 0 && assigned && assigned != undefined) ? assigned :\n                    <div className={classes.empty}>\n                        <div className={classes.emptyIcon}>\n                            {empty_state_icon}\n                        </div>\n                        <span>{t(\"home.activities.empty\")}</span>\n                    </div>)\n                }\n                {currentTab === ACTIVITY_SOURCE_LOGGED && \n                    ((logged.length > 0 && logged && logged != undefined) ? logged :\n                    <div className={classes.empty}>\n                        <div className={classes.emptyIcon}>\n                            {empty_state_icon}\n                        </div>\n                        <span>{t(\"home.activities.empty\")}</span>\n                    </div>)\n                }\n\n            </div>\n        </div>\n    );\n}\n\nexport default ManagerHomeActivities;","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Courses/CourseRoutes.jsx",["904","905"],"import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport AddCourse from './AddCourse/AddCourse';\nimport { PageNotFound } from 'Components';\nimport CoursesContainer from './CoursesContainer';\nimport EditCourse from './EditCourse/EditCourse';\nimport { AddEdit } from './AddEdit';\nimport { CourseDetails } from './CourseDetails';\n\nconst CourseRoutes = props => {\n  return (\n    <Switch>\n      <Route exact path={`/courses`} component={CoursesContainer} />\n      <Route exact path={`/courses/:courseId`} component={CourseDetails} />\n      <Route exact path={`/courses/add/:programId`} component={AddEdit} />\n      <Route exact path={`/courses/edit/:courseId`} component={AddEdit} />\n      <Route component={PageNotFound} />\n    </Switch>\n  );\n};\n\nexport default CourseRoutes;\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/DeleteModal/DeleteModal.jsx",["906","907","908"],"import React from 'react';\nimport classes from './DeleteModal.module.css';\nimport Aos from 'aos';\nimport 'aos/dist/aos.css';\nimport { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport shield from '../../Assets/Images/shield.svg';\n\nconst DeleteActivity = (props) => {\n    const {t, i18n} = useTranslation();\n\n    useEffect(() => {\n        Aos.init({ duration: 1000 });\n    }, []);\n\n    return(\n        <div className={classes.backGray}>\n            <div className={classes.modal} data-aos=\"fade-down\">\n                <button className={classes.close} onClick={()=>props.setIsShowDeleteModal(false)}>×</button>\n                <img src={shield}/>\n                <h1>{props.title}</h1>\n                <span>{props.sub}</span>\n                <div className={classes.buttons}>\n                    <button className={classes.del}>{props.deleteText}</button>\n                    <p>&nbsp;&nbsp;&nbsp;&nbsp;</p>\n                    <button className={classes.cancel} onClick={()=>props.setIsShowDeleteModal(false)}>{props.cancelText}</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default DeleteActivity;","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Activities/RepeatOptions/RepeatOptions.jsx",["909","910","911","912","913","914","915","916"],"import React, { useEffect, useLayoutEffect, useState } from 'react';\nimport classes from './RepeatOptions.module.css';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { Field, reduxForm } from 'redux-form';\nimport { Calendar, CustomSelect } from 'Components';\n\nconst StyledTextBlock = styled.div`\n    margin-left: ${({ direction }) => direction === 'ltr' ? \"0\" : \"15px\"};\n    margin-right: ${({ direction }) => direction === 'rtl' ? \"0\" : \"15px\"};\n    @media screen and (max-width: 568px){\n        margin-left: ${({ direction }) => direction === 'ltr' ? \"0\" : \"15px\"};\n        margin-right: ${({ direction }) => direction === 'rtl' ? \"0\" : \"15px\"};\n    }\n`;\n\nconst RepeatOptionsForm = (props) => {\n    const {t, i18n} = useTranslation();\n    let repeatOptions = [t(\"activityEditRepeat.repeatOptions.yearly\"),\n                    t(\"activityEditRepeat.repeatOptions.month\"),\n                    t(\"activityEditRepeat.repeatOptions.day\")];\n\n    const [selectWidth, setSelectWidth] = useState(78);\n    const [selectEndWidth, setSelectEndWidth] = useState(49);\n    const [selectWidthSmall, setSelectWidthSmall] = useState(48);\n    const [selectWidthSmallMore, setSelectWidthSmallMore] = useState(28);\n    const [repeatOption, setRepeatOption] = useState(repeatOptions[0]);\n\n    const [size, setSize] = useState([window.outerWidth, window.innerHeight]);\n\n    useLayoutEffect(()=>{\n        function updateSize(){\n            setSize([window.outerWidth, window.innerHeight]);\n        }\n        window.addEventListener('resize', updateSize);\n        updateSize();\n        return () => window.removeEventListener('resize', updateSize);\n    },[]);\n\n    useEffect(()=>{\n        if(size[0] > 968){\n            setSelectWidth(78);\n            setSelectWidthSmall(48);\n            setSelectWidthSmallMore(28);\n            setSelectEndWidth(49);\n        }else if(size[0] < 968 && size[0] >= 856){\n            setSelectWidth(84);\n            setSelectWidthSmall(49);\n            setSelectWidthSmallMore(31);\n            setSelectEndWidth(65);\n        }else if(size[0] > 756){\n            setSelectWidth(81);\n            setSelectWidthSmall(49);\n            setSelectWidthSmallMore(31);\n            setSelectEndWidth(76);\n        }else if(size[0] > 658){\n            setSelectWidthSmallMore(24);\n            setSelectEndWidth(55);\n        }else if(size[0] < 568){\n            setSelectWidth(100);\n            setSelectEndWidth(88);\n            setSelectWidthSmallMore(30);\n        }\n\n    },[size]);\n\n\n    let monthOptions = [t(\"activityEditRepeat.month.jan\"),\n                        t(\"activityEditRepeat.month.feb\"),\n                        t(\"activityEditRepeat.month.march\"),\n                        t(\"activityEditRepeat.month.april\"),\n                        t(\"activityEditRepeat.month.may\"),\n                        t(\"activityEditRepeat.month.june\"),\n                        t(\"activityEditRepeat.month.july\"),\n                        t(\"activityEditRepeat.month.aug\"),\n                        t(\"activityEditRepeat.month.sept\"),\n                        t(\"activityEditRepeat.month.oct\"),\n                        t(\"activityEditRepeat.month.nov\"),\n                        t(\"activityEditRepeat.month.dec\")];\n    \n    const [monthOption, setMonthOption] = useState(monthOptions[0]);\n\n    let dateOptions = [];\n\n    for(let i = 1; i <= 31; i++){\n        dateOptions.push(i);\n    }\n\n    const [dateOption, setDateOption] = useState(dateOptions[0]);\n\n    let stOptions = [t(\"activityEditRepeat.st.one\"),\n                    t(\"activityEditRepeat.st.two\"),\n                    t(\"activityEditRepeat.st.three\"),\n                    t(\"activityEditRepeat.st.four\")];\n\n    const [st, setSt] = useState(stOptions[0]);\n\n    let daysOfWeek = [t(\"activityEditRepeat.daysOfWeek.monday\"),\n                    t(\"activityEditRepeat.daysOfWeek.tuesday\"),\n                    t(\"activityEditRepeat.daysOfWeek.wednesday\"),\n                    t(\"activityEditRepeat.daysOfWeek.thursday\"),\n                    t(\"activityEditRepeat.daysOfWeek.friday\"),\n                    t(\"activityEditRepeat.daysOfWeek.saturday\"),\n                    t(\"activityEditRepeat.daysOfWeek.sunday\")];\n\n    let everyOptions = [t(\"activityEditRepeat.everyOptions.never\"), \"opt2\", \"opt3\"];\n\n    const [everyOpt, setEveryOpt] = useState(everyOptions[0]);\n\n    const [type, setType] = useState(1);\n\n    \n\n    return(\n        <div className={classes.main}>\n            <div className={classes.field}>\n                <StyledTextBlock direction={props.direction} className={classes.text}>\n                    <label>Repeat Every</label>\n                </StyledTextBlock>\n                <Field component={CustomSelect} name=\"repeat\" options={repeatOptions} setFunction={setRepeatOption} width={selectWidth}/>\n            </div>\n            <div className={classes.field}>\n                <StyledTextBlock className={classes.text} direction={props.direction}>\n                    <div className={classes.visibilityBlock}>\n                        <input type=\"radio\" name=\"type\" id=\"type1\" defaultChecked={true} onChange={e=>{setType(e.target.value)}} value={1}/>\n                        <label htmlFor={\"type1\"}>{t(\"activityEditRepeat.on\")}</label>\n                        <div className={classes.check}></div>\n                    </div>\n                </StyledTextBlock>\n                <div className={classes.fieldContainer}>\n                    <Field component={CustomSelect} name=\"month\" options={monthOptions} setFunction={setMonthOption} width={selectWidthSmall}/>\n                    <p>&nbsp;&nbsp;&nbsp;&nbsp;</p>\n                    <Field component={CustomSelect} name=\"dateNum\" options={dateOptions} setFunction={setDateOption} width={selectWidthSmall}/>\n                </div>\n            </div>\n            <div className={classes.field}>\n                <StyledTextBlock className={classes.text} direction={props.direction}>\n                    <div className={classes.visibilityBlock}>\n                        <input type=\"radio\" name=\"type\" id=\"type2\" onChange={e=>{setType(e.target.value)}} value={2}/>\n                        <label htmlFor={\"type2\"}>{t(\"activityEditRepeat.onThe\")}</label>\n                        <div className={classes.check}></div>\n                    </div>\n                </StyledTextBlock>\n                <div className={classes.fieldContainer}>\n                    <Field component={CustomSelect} name=\"st\" options={stOptions} setFunction={setSt} width={selectWidthSmallMore}/>\n                    <p>&nbsp;&nbsp;&nbsp;&nbsp;</p>\n                    <Field component={CustomSelect} name=\"dateNum2\" options={dateOptions} setFunction={setDateOption} width={selectWidthSmallMore}/>\n                    <label className={classes.ofLabel}>{t(\"activityEditRepeat.of\")}</label>\n                    <Field component={CustomSelect} name=\"month\" options={monthOptions} setFunction={setMonthOption} width={selectWidthSmallMore}/>\n                </div>\n            </div>\n            <div className={classes.fieldDate}>\n                <StyledTextBlock className={classes.text} direction={props.direction}>\n                    <label>{t(\"activityEditRepeat.end\")}</label>\n                </StyledTextBlock>\n                <div className={classes.fieldContainer}>\n                    <Field component={CustomSelect} name=\"every\" options={everyOptions} setFunction={setEveryOpt} width={selectEndWidth}/>\n                    <p>&nbsp;&nbsp;&nbsp;&nbsp;</p>\n                    <Field component={Calendar} name=\"date\"/>\n                </div>\n                \n            </div>\n            <div className={classes.field}>\n                <button>{t(\"activityEditRepeat.save\")}</button>\n            </div>\n        </div>\n    );\n}\n\nlet RepeatOptionsReduxForm = reduxForm({form: 'repeatOptions'})(RepeatOptionsForm);\n\nconst RepeatOptions = (props) => {\n    const onSubmit = (formData) => {\n        console.log(formData);\n    }\n    return(\n        <RepeatOptionsReduxForm onSubmit={onSubmit} direction={props.direction}/>\n    )\n}\n\nlet mapStateToProps = (state) => ({\n    direction: state.common.direction\n})\n\nexport default connect(mapStateToProps, {})(RepeatOptions);","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Programs/ProgramDetails/ProgramView/ProgramView.jsx",["917","918"],"import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport { Button, PlusIcon } from 'Components';\nimport { getOneProgram } from 'Store/Reducers/programs';\nimport CourseItemView from 'Pages/Courses/CourseItemView/CourseItemView';\nimport { empty_state_icon } from 'Assets/Images/empty_state_icon';\nimport classes from './ProgramView.module.css';\n\nconst StyledHeader = styled.div`\n  background-color: #f6f6f6;\n`;\n\nconst StyledLabel = styled.label`\n  margin-left: ${({ direction }) => (direction === 'rtl' ? '56px' : '0')};\n  margin-right: ${({ direction }) => (direction === 'ltr' ? '56px' : '0')};\n`;\n\nconst ProgramView = props => {\n  const urlParams = useParams();\n  const { t, i18n } = useTranslation();\n\n  const {\n    courses: { courses },\n  } = props;\n\n  return (\n    <div className={classes.main}>\n      <StyledHeader className={classes.header}>\n        <div>\n          <h2>Program courses</h2>\n          <div>\n            <NavLink to={`/courses/add/${props.currentProgram?.programId}`}>\n              <Button variant=\"contained\" color=\"primary\" startIcon={<PlusIcon />}>\n                Add course\n              </Button>\n            </NavLink>\n          </div>\n        </div>\n      </StyledHeader>\n      <div className={classes.container}>\n        <div className={classes.headerContainer}>\n          <div className={classes.headerTop}>\n            <div className={classes.headerSide}>\n              <h1>{props.currentProgram?.name}</h1>\n              <div className={classes.def} />\n              <span className={classes.headerCourses}>\n                {courses.length} {t('programView.courses')}\n              </span>\n            </div>\n            <div className={classes.headerSide}>\n              <NavLink to={`/programs/edit/${urlParams.programId}`}>\n                <i className=\"far fa-edit\"></i>\n                <span>{t('programView.edit')}</span>\n              </NavLink>\n            </div>\n          </div>\n          <p>{props.currentProgram?.subject}</p>\n          <div className={classes.filters}>\n            <StyledLabel className={classes.filter} direction={props.direction}>\n              <span className={classes.filterText}>{t('courses.filters.all')}</span>\n              <input\n                type=\"checkbox\"\n                onChange={() => {\n                  props.setAll();\n                }}\n                checked={props.all}\n                value={props.all}\n              />\n              <span className={classes.checkmark}></span>\n            </StyledLabel>\n            <StyledLabel className={classes.filter} direction={props.direction}>\n              <span className={classes.filterText}>{t('courses.filters.completed')}</span>\n              <input\n                type=\"checkbox\"\n                onChange={() => {\n                  props.setCompleted(!props.completed);\n                }}\n                checked={props.completed}\n              />\n              <span className={classes.checkmark}></span>\n            </StyledLabel>\n            <StyledLabel className={classes.filter} direction={props.direction}>\n              <span className={classes.filterText}>{t('courses.filters.inProgress')}</span>\n              <input\n                type=\"checkbox\"\n                onChange={() => {\n                  props.setInProgress(!props.inProgress);\n                }}\n                checked={props.inProgress}\n              />\n              <span className={classes.checkmark}></span>\n            </StyledLabel>\n            <StyledLabel className={classes.filter} direction={props.direction}>\n              <span className={classes.filterText}>{t('courses.filters.notStarted')}</span>\n              <input\n                type=\"checkbox\"\n                onChange={() => {\n                  props.setNotStarted(!props.notStarted);\n                }}\n                checked={props.notStarted}\n              />\n              <span className={classes.checkmark}></span>\n            </StyledLabel>\n          </div>\n        </div>\n        <div className={classes.itemsList}>\n          {[courses].length > 0 ? (\n            courses.map(course => <CourseItemView item={course} key={course.courseId} />)\n          ) : (\n            <div className={classes.empty}>\n              <div className={classes.emptyIcon}>{empty_state_icon}</div>\n              <span>{t('programView.empty')}</span>\n              <NavLink to={`/courses/add/${urlParams.programId}`}>{t('programView.addCourse')}</NavLink>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProgramView;\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Programs/ProgramDetails/ProgramAttendees/ProgramAttendees.jsx",["919"],"import React from 'react';\nimport classes from './ProgramAttendees.module.css';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\nimport { searchicon } from 'Assets/Images/searchicon';\nimport { empty_state_icon } from 'Assets/Images/empty_state_icon';\n\nconst StyledLabel = styled.label`\n  margin-left: ${({ direction }) => (direction === 'rtl' ? '56px' : '0')};\n  margin-right: ${({ direction }) => (direction === 'ltr' ? '56px' : '0')};\n`;\n\nconst ProgramAttendees = props => {\n  const { t, i18n } = useTranslation();\n\n  let learners = [];\n\n  return (\n    <div className={classes.main}>\n      <div className={classes.header}>\n        <div className={classes.headerContainer}>\n          <h1>\n            {props.currentProgram?.name} {t('programLearners.title')}\n          </h1>\n          <div className={classes.filters}>\n            <StyledLabel className={classes.filter} direction={props.direction}>\n              <span className={classes.filterText}>{t('activities.filters.all')}</span>\n              <input\n                type=\"checkbox\"\n                onChange={() => {\n                  props.setAll();\n                }}\n                value={props.all}\n                checked={props.all}\n              />\n              <span className={classes.checkmark}></span>\n            </StyledLabel>\n            <StyledLabel className={classes.filter} direction={props.direction}>\n              <span className={classes.filterText}>{t('activities.filters.completed')}</span>\n              <input\n                type=\"checkbox\"\n                onChange={() => {\n                  props.setCompleted(!props.completed);\n                }}\n                checked={props.completed}\n              />\n              <span className={classes.checkmark}></span>\n            </StyledLabel>\n            <StyledLabel className={classes.filter} direction={props.direction}>\n              <span className={classes.filterText}>{t('activities.filters.inProgress')}</span>\n              <input\n                type=\"checkbox\"\n                onChange={() => {\n                  props.setInProgress(!props.inProgress);\n                }}\n                checked={props.inProgress}\n              />\n              <span className={classes.checkmark}></span>\n            </StyledLabel>\n            <StyledLabel className={classes.filter} direction={props.direction}>\n              <span className={classes.filterText}>{t('activities.filters.notStarted')}</span>\n              <input\n                type=\"checkbox\"\n                onChange={() => {\n                  props.setNotStarted(!props.notStarted);\n                }}\n                checked={props.notStarted}\n              />\n              <span className={classes.checkmark}></span>\n            </StyledLabel>\n          </div>\n        </div>\n      </div>\n      <div className={classes.content}>\n        <div className={classes.container}>\n          <div className={classes.search}>\n            {searchicon}\n            <input\n              placeholder={t('programLearners.searchPlaceholder')}\n              onChange={e => props.setSearchValue(e.target.value)}\n              value={props.searchValue}\n              name=\"searchValue\"\n            />\n          </div>\n          <div className={classes.itemsList}>\n            {learners.length > 0 && learners ? (\n              learners\n            ) : (\n              <div className={classes.empty}>\n                <div className={classes.emptyIcon}>{empty_state_icon}</div>\n                <span>{t('programLearners.empty')}</span>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProgramAttendees;\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Courses/AddCourse/AddCourse.jsx",["920","921","922"],"import React, { useRef, useState } from 'react';\nimport classes from './AddCourse.module.css';\nimport { useTranslation } from 'react-i18next';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { FileDrop } from 'react-file-drop';\nimport uploadicon from '../../../Assets/Images/upload.svg';\nimport LessonFileCourse from './LessonFileCourse/LessonFileCourse';\nimport { AuthInput, Preloader, TextAreaCustom } from 'Components';\nimport { required } from 'Utils/validators';\nimport FieldImageInput from 'Components/Common/FormControlls/FileControlls/FieldImageInput';\nimport { USER_ROLES } from 'Config/constants';\n\nconst AddCourseForm = props => {\n  const { t, i18n } = useTranslation();\n\n  let maxLength = 300;\n  const [charactersLeft, setCharactersLeft] = useState(maxLength);\n\n  let handleTextArea = e => {\n    setCharactersLeft(maxLength - e.target.value.length);\n  };\n  const fileInputRef = useRef(null);\n\n  const onFileInputChange = event => {\n    const newFiles = [];\n    const newFilesToPush = [...event.target.files];\n    newFilesToPush.forEach(item => {\n      newFiles.push(item);\n    });\n    props.setFiles(newFiles);\n  };\n\n  const onTargetClick = () => {\n    fileInputRef.current.click();\n  };\n  const onDropHandler = (files, event) => {\n    const newFilesToPush = [...files];\n    const newFiles = [];\n    newFilesToPush.forEach(item => {\n      newFiles.push(item);\n    });\n    props.setFiles(newFiles);\n  };\n\n  const handleRemoveFile = index => {\n    props.setFiles([]);\n  };\n  let viewFiles = [];\n\n  viewFiles = props.files.map((f, index) => {\n    return <LessonFileCourse file={f} index={index} handleRemoveFile={handleRemoveFile} />;\n  });\n\n  return (\n    <form onSubmit={props.handleSubmit} className={classes.form}>\n      <div className={classes.field + ' ' + classes.inputField}>\n        <label className={classes.fieldLabel}>{t('addCourse.name')}</label>\n        <Field component={AuthInput} placeholder={t('addCourse.namePlaceholder')} name=\"name\" validate={[required]} />\n      </div>\n      <div className={classes.field + ' ' + classes.inputField}>\n        <label className={classes.fieldLabel}>{t('addActivity.description')}</label>\n        <Field\n          component={TextAreaCustom}\n          name=\"description\"\n          maxLength={maxLength}\n          left={charactersLeft}\n          rows={4}\n          onChange={handleTextArea}\n          isBig={true}\n        />\n      </div>\n      <div className={classes.field}>\n        <label className={classes.fieldLabel}>{t('addCourse.courseThumbnail')}</label>\n        <Field\n          component={FieldImageInput}\n          downloadText={t('addCourse.uploadImage')}\n          dragText={t('addCourse.dragImage')}\n          name=\"image\"\n          validate={[required]}\n        />\n      </div>\n      <div className={classes.field}>\n        <label className={classes.fieldLabel}>{t('addCourse.courseLessons')}</label>\n        <div className={classes.dragNdrop}>\n          <input onChange={onFileInputChange} multiple ref={fileInputRef} type=\"file\" className={classes.hidden} />\n          <FileDrop\n            onDrop={(files, event) => onDropHandler(files, event)}\n            onTargetClick={onTargetClick}\n            className={classes.drop}\n            draggingOverFrameClassName={classes.onDrag}\n            targetClassName={classes.dropInner}\n          >\n            <div className={classes.uploadBut}>\n              <img src={uploadicon} />\n              <p>{t('addCourse.uploadLesson')}</p>\n            </div>\n            <p className={classes.dragText}>{t('addCourse.dragFile')}</p>\n          </FileDrop>\n        </div>\n        <span className={classes.ability}>{t('addCourse.ability')}</span>\n        <div className={classes.filesList}>{viewFiles}</div>\n      </div>\n      <div className={classes.fieldBut}>\n        <button>{t('addCourse.addCourse')}</button>\n        <NavLink to=\"/programs\">{t('addCourse.cancel')}</NavLink>\n      </div>\n    </form>\n  );\n};\n\nconst AddCourseReduxForm = reduxForm({ form: 'addCourse' })(AddCourseForm);\n\nconst AddCourse = props => {\n  const { t, i18n } = useTranslation();\n\n  const [images, setImages] = useState([]);\n  const [files, setFiles] = useState([]);\n\n  const onSubmit = formData => {\n    console.log(formData);\n  };\n\n  return (\n    <div className={classes.main}>\n      {props.user.roleId === USER_ROLES.LEARNER && <Redirect to=\"/\" />}\n      {props.isFetching && <Preloader />}\n      <div className={classes.header}>\n        <div className={classes.headerContainer}>\n          <h1>{t('addCourse.title')}</h1>\n        </div>\n      </div>\n      <div className={classes.formContainer}>\n        <AddCourseReduxForm\n          images={images}\n          setImages={setImages}\n          files={files}\n          setFiles={setFiles}\n          onSubmit={onSubmit}\n          direction={props.direction}\n        />\n      </div>\n    </div>\n  );\n};\n\nlet mapStateToProps = state => ({\n  isFetching: state.common.isFetching,\n  direction: state.common.direction,\n  profile: state.authentication.profile,\n});\n\nexport default connect(mapStateToProps, {})(AddCourse);\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Courses/EditCourse/EditCourse.jsx",["923","924","925"],"import React, { useRef, useState } from 'react';\nimport classes from '../AddCourse/AddCourse.module.css';\nimport { useTranslation } from 'react-i18next';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport uploadicon from '../../../Assets/Images/upload.svg';\nimport LessonFileCourse from '../AddCourse/LessonFileCourse/LessonFileCourse';\nimport { AuthInput, Preloader, TextAreaCustom } from 'Components';\nimport { required } from 'Utils/validators';\nimport FieldImageInput from 'Components/Common/FormControlls/FileControlls/FieldImageInput';\nimport { USER_ROLES } from 'Config/constants';\nimport { FileDrop } from 'react-file-drop';\n\nconst EditCourseForm = props => {\n  const { t, i18n } = useTranslation();\n\n  let maxLength = 300;\n  const [charactersLeft, setCharactersLeft] = useState(maxLength);\n\n  let handleTextArea = e => {\n    setCharactersLeft(maxLength - e.target.value.length);\n  };\n  const fileInputRef = useRef(null);\n\n  const onFileInputChange = event => {\n    const newFiles = [];\n    const newFilesToPush = [...event.target.files];\n    newFilesToPush.forEach(item => {\n      newFiles.push(item);\n    });\n    props.setFiles(newFiles);\n  };\n\n  const onTargetClick = () => {\n    fileInputRef.current.click();\n  };\n  const onDropHandler = (files, event) => {\n    const newFilesToPush = [...files];\n    const newFiles = [];\n    newFilesToPush.forEach(item => {\n      newFiles.push(item);\n    });\n    props.setFiles(newFiles);\n  };\n\n  const handleRemoveFile = index => {\n    props.setFiles([]);\n  };\n  let viewFiles = [];\n\n  viewFiles = props.files.map((f, index) => {\n    return <LessonFileCourse file={f} index={index} handleRemoveFile={handleRemoveFile} />;\n  });\n\n  return (\n    <form onSubmit={props.handleSubmit} className={classes.form}>\n      <div className={classes.field + ' ' + classes.inputField}>\n        <label className={classes.fieldLabel}>{t('addCourse.name')}</label>\n        <Field component={AuthInput} placeholder={t('addCourse.namePlaceholder')} name=\"name\" validate={[required]} />\n      </div>\n      <div className={classes.field + ' ' + classes.inputField}>\n        <label className={classes.fieldLabel}>{t('addActivity.description')}</label>\n        <Field\n          component={TextAreaCustom}\n          name=\"description\"\n          maxLength={maxLength}\n          left={charactersLeft}\n          rows={4}\n          onChange={handleTextArea}\n          isBig={true}\n        />\n      </div>\n      <div className={classes.field}>\n        <label className={classes.fieldLabel}>{t('addCourse.courseThumbnail')}</label>\n        <Field\n          component={FieldImageInput}\n          downloadText={t('addCourse.uploadImage')}\n          dragText={t('addCourse.dragImage')}\n          name=\"image\"\n          validate={[required]}\n        />\n      </div>\n      <div className={classes.field}>\n        <label className={classes.fieldLabel}>{t('addCourse.courseLessons')}</label>\n        <div className={classes.dragNdrop}>\n          <input onChange={onFileInputChange} multiple ref={fileInputRef} type=\"file\" className={classes.hidden} />\n          <FileDrop\n            onDrop={(files, event) => onDropHandler(files, event)}\n            onTargetClick={onTargetClick}\n            className={classes.drop}\n            draggingOverFrameClassName={classes.onDrag}\n            targetClassName={classes.dropInner}\n          >\n            <div className={classes.uploadBut}>\n              <img src={uploadicon} />\n              <p>{t('addCourse.uploadLesson')}</p>\n            </div>\n            <p className={classes.dragText}>{t('addCourse.dragFile')}</p>\n          </FileDrop>\n        </div>\n        <span className={classes.ability}>{t('addCourse.ability')}</span>\n        <div className={classes.filesList}>{viewFiles}</div>\n      </div>\n      <div className={classes.fieldBut}>\n        <button>{t('addCourse.addCourse')}</button>\n        <NavLink to=\"/programs\">{t('addCourse.cancel')}</NavLink>\n      </div>\n    </form>\n  );\n};\n\nlet EditCourseReduxForm = reduxForm({ form: 'editCourse' })(EditCourseForm);\n\nEditCourseReduxForm = connect(\n  state => ({\n    initialValues: state.courses.currentCourse,\n  }),\n  {}\n)(EditCourseReduxForm);\n\nconst EditCourse = props => {\n  const { t, i18n } = useTranslation();\n\n  const [images, setImages] = useState([]);\n  const [files, setFiles] = useState([]);\n\n  const onSubmit = formData => {\n    console.log(formData);\n  };\n\n  return (\n    <div className={classes.main}>\n      {props.user.roleId === USER_ROLES.LEARNER && <Redirect to=\"/\" />}\n      {props.isFetching && <Preloader />}\n      <div className={classes.header}>\n        <div className={classes.headerContainer}>\n          <h1>{t('addCourse.title')}</h1>\n        </div>\n      </div>\n      <div className={classes.formContainer}>\n        <EditCourseReduxForm\n          images={images}\n          setImages={setImages}\n          files={files}\n          setFiles={setFiles}\n          onSubmit={onSubmit}\n          direction={props.direction}\n        />\n      </div>\n    </div>\n  );\n};\n\nlet mapStateToProps = state => ({\n  isFetching: state.common.isFetching,\n  direction: state.common.direction,\n  profile: state.authentication.profile,\n  currentCourse: state.programs.currentCourse,\n});\n\nexport default connect(mapStateToProps, {})(EditCourse);\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Common/FormControlls/SearchInput/SearchInput.jsx",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Common/FormControlls/FileControlls/FieldImageInput.jsx",["926","927","928","929"],"import React, { Component, useRef, useState } from 'react';\nimport classes from './FileControlls.module.css';\nimport { FileDrop } from 'react-file-drop';\nimport { useTranslation } from 'react-i18next';\nimport ImageFile from './ImageFile/ImageFile';\nimport uploadicon from 'Assets/Images/upload.svg';\n\nconst FieldImageInput = ({ input, meta, ...props }) => {\n  const { t, i18n } = useTranslation();\n  const hasError = meta?.touched && meta?.error;\n\n  const fileInputRef = useRef(null);\n\n  const [files, setFiles] = useState([]);\n\n  const onFileInputChange = event => {\n    const newFiles = [];\n    const newFilesToPush = [...event.target.files];\n    newFilesToPush.forEach(item => {\n      newFiles.push(item);\n      input.onChange(item);\n    });\n    setFiles(newFiles);\n  };\n\n  const onTargetClick = () => {\n    fileInputRef.current.click();\n  };\n  const onDropHandler = (files, event) => {\n    const newFilesToPush = [...files];\n    const newFiles = [];\n    newFilesToPush.forEach(item => {\n      newFiles.push(item);\n    });\n    setFiles(newFiles);\n  };\n\n  const handleRemoveFile = index => {\n    setFiles([]);\n    input.onChange();\n  };\n\n  let viewFiles = [];\n\n  viewFiles = files.map((f, index) => {\n    return <ImageFile image={f} index={index} handleRemoveFile={handleRemoveFile} />;\n  });\n\n  return (\n    <div className={classes.file + ' ' + (hasError ? classes.error : '')}>\n      {files.length < 1 ? (\n        <div className={classes.dragNdrop}>\n          <input\n            onChange={onFileInputChange}\n            ref={fileInputRef}\n            type=\"file\"\n            className={classes.hidden}\n            accept=\".jpg, .png, .jpeg\"\n          />\n          <FileDrop\n            onDrop={(files, event) => onDropHandler(files, event)}\n            onTargetClick={onTargetClick}\n            className={classes.drop}\n            draggingOverFrameClassName={classes.onDrag}\n            targetClassName={classes.dropInner}\n          >\n            <div className={classes.uploadBut}>\n              <img src={uploadicon} />\n              <p>{props.downloadText}</p>\n            </div>\n            <p className={classes.dragText}>{props.dragText}</p>\n          </FileDrop>\n        </div>\n      ) : (\n        <div className={classes.files}>{viewFiles}</div>\n      )}\n      {hasError && <span>{meta?.error}</span>}\n    </div>\n  );\n};\n\nexport default FieldImageInput;\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Courses/AddCourse/LessonFileCourse/LessonFileCourse.jsx",["930","931"],"import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport classes from './LessonFileCourse.module.css';\n\nconst StyledProgressBar = styled.div`\n    width: ${({ width }) => width + \"%\"};\n    height: 8px;\n    background-color: #42a678;\n    border-radius: 20px;\n`;\n\nconst LessonFileCourse = (props) => {\n    const [progress, setProgress] = useState(100);\n\n\n    return(\n        <div className={classes.main}>\n            <span className={classes.name}>{props.file.name}</span>\n            <div className={classes.progress}>\n                <StyledProgressBar width={progress}/>\n            </div>\n            <span className={classes.progressCount}>{progress}%</span>\n            <button onClick={()=>{props.handleRemoveFile(props.index)}}>\n                <span>&#x2715;</span>\n            </button>\n        </div>\n    );\n}\n\nexport default LessonFileCourse;","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Common/FormControlls/FileControlls/ImageFile/ImageFile.jsx",["932"],"import React from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport classes from './ImageFile.module.css';\n\nconst StyledBut = styled.button`\n    left: ${({ direction }) => direction === \"ltr\" ? \"10px\" : \"-10px\"};\n`;\n\nconst ImageFileProgram = (props) => {\n    return(\n        <div className={classes.main}>\n            <StyledBut direction={props.direction} onClick={()=>{props.handleRemoveFile(props.index)}}>&#x2715;</StyledBut>\n            <img src={window.URL.createObjectURL(props.image)}/>\n        </div>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n    direction: state.common.direction\n})\n\nexport default connect(mapStateToProps, {})(ImageFileProgram);","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Themes/index.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Config/axios.js",["933"],"import axios from 'axios';\n\nimport store from 'Store/reduxStore';\nimport { clearAuthentication } from 'Store/Reducers/authentication';\nimport { AUTH_TOKEN_KEY } from './constants';\n\nconst instance = axios.create({\n  baseURL: process.env.REACT_APP_BASE_URL,\n  timeout: 1000 * 60, // 1 minute\n});\n\nconst onRequestSuccess = config => {\n  const token = localStorage.getItem(AUTH_TOKEN_KEY) || sessionStorage.getItem(AUTH_TOKEN_KEY);\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n};\n\nconst onResponseSuccess = response => response;\n\nconst onResponseError = err => {\n  const status = err.status || (err.response ? err.response.status : 0);\n  if ([401, 403].includes(status)) {\n    clearAuthentication(store.dispatch);\n  }\n  return Promise.reject(err);\n};\n\ninstance.interceptors.request.use(onRequestSuccess);\ninstance.interceptors.response.use(onResponseSuccess, onResponseError);\n\nexport default instance;\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Store/Reducers/users.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Services/users.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Common/TextEditor/index.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Utils/buildQuery.js",["934","935"],"export function buildQuery(data) {\n  // If the data is already a string, return it as-is\n  if (typeof data === 'string') return data;\n\n  // Create a query array to hold the key/value pairs\n  var query = [];\n\n  // Loop through the data object\n  for (var key in data) {\n    if (data.hasOwnProperty(key) && data[key] != null && data[key] != 'undefined' && data[key] != '') {\n      // Encode each key and value, concatenate them into a string, and push them to the array\n      query.push(encodeURIComponent(key) + '=' + encodeURIComponent(data[key]));\n    }\n  }\n\n  // Join each item in the array with a `&` and return the resulting string\n  return query.join('&');\n}\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/NotificationMiddleware.js",["936"],"import isPromise from 'is-promise';\n\nimport { GLOBAL_ACTION_TYPES } from 'Store/Reducers/global';\n\nexport default store => next => action => {\n  if (!isPromise(action.payload)) {\n    return next(action);\n  }\n\n  return next(action)\n    .then(response => {\n      const { config, status } = response.value;\n      if (['post', 'put', 'delete'].includes(config.method) && [200, 201].includes(status)) {\n        store.dispatch({\n          type: GLOBAL_ACTION_TYPES.SET_SUCCESS,\n        });\n\n        store.dispatch({\n          type: GLOBAL_ACTION_TYPES.RESET,\n        });\n      }\n\n      return Promise.resolve(response);\n    })\n    .catch(err => {\n      store.dispatch({\n        type: GLOBAL_ACTION_TYPES.SET_ERROR,\n        payload: err.response?.data.message,\n      });\n\n      store.dispatch({\n        type: GLOBAL_ACTION_TYPES.RESET,\n      });\n\n      return Promise.reject(err);\n    });\n};\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Store/Reducers/global.js",["937"],"export const GLOBAL_ACTION_TYPES = {\n  SET_LOADING: 'global/SET_LOADING',\n  SET_SUCCESS: 'global/SET_SUCCESS',\n  SET_ERROR: 'global/SET_ERROR',\n  RESET: 'global/RESET',\n};\n\nconst initialState = {\n  loading: false,\n  success: null,\n  error: null,\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case GLOBAL_ACTION_TYPES.SET_LOADING:\n      return { ...state, loading: true, success: false, error: null };\n    case GLOBAL_ACTION_TYPES.SET_SUCCESS:\n      return { ...state, loading: false, success: true, error: null };\n    case GLOBAL_ACTION_TYPES.SET_ERROR:\n      return { ...state, loading: false, success: null, error: payload };\n    case GLOBAL_ACTION_TYPES.RESET:\n      return { ...initialState };\n    default:\n      return state;\n  }\n};\n\nexport const resetGlobalState = () => ({\n  type: GLOBAL_ACTION_TYPES.RESET,\n});\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/SnackProvider.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Courses/AddEdit/index.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Courses/AddEdit/AddEdit.jsx",["938","939","940","941","942"],"import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { Formik, Form, Field } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport * as Yup from 'yup';\n\nimport { resetGlobalState } from 'Store/Reducers/global';\nimport { getOneCourse, createCourse, updateCourse, resetCoursesState } from 'Store/Reducers/courses';\nimport { PageLayout, Preloader, Grid, Button, Label, FileDrop, TextAreaCustom } from 'Components';\n\nconst AddEdit = props => {\n  const { t, i18n } = useTranslation();\n  const urlParams = useParams();\n\n  const { courses, profile } = props;\n\n  useEffect(() => {\n    if (urlParams.courseId) props.getOneCourse(profile.organizationId, urlParams.courseId);\n    return props.resetCoursesState;\n  }, []);\n\n  useEffect(() => {\n    if (!courses.loading && courses.success)\n      props.getOneCourse(profile.organizationId, courses.currentCourse?.courseId || urlParams.courseId);\n  }, [courses.success]);\n\n  const handleSubmit = (values, { setSubmitting }) => {\n    const formData = new FormData();\n\n    formData.append('logo', values.logo);\n    formData.append('name', values.name);\n    formData.append('courseCode', values.courseCode);\n    formData.append('description', values.description);\n    formData.append('selectedOrganization', profile.organizationId);\n\n    if (courses.currentCourse) {\n      formData.append('programId', courses.currentCourse.programId);\n      formData.append('courseId', courses.currentCourse.courseId);\n      formData.append('contentPath', courses.currentCourse.contentPath);\n      props.updateCourse(formData);\n    } else {\n      formData.append('programId', urlParams.programId);\n      props.createCourse(formData);\n    }\n\n    setSubmitting(false);\n  };\n\n  const handleGetFiles = (file, setFieldValue) => {\n    const fileReader = new FileReader();\n\n    if (!file) return;\n\n    fileReader.readAsDataURL(file);\n\n    fileReader.onload = data => {\n      setFieldValue('logo', fileReader.result);\n    };\n  };\n\n  const initialValues = {\n    name: courses.currentCourse?.name,\n    courseCode: courses.currentCourse?.courseCode,\n    description: courses.currentCourse?.description,\n  };\n  const validationSchema = Yup.object({\n    name: Yup.string().required('course name is required'),\n    courseCode: Yup.string().required('course code  is required'),\n  });\n\n  if (courses.loading) return <Preloader />;\n\n  return (\n    <PageLayout title={urlParams.courseId ? 'Edit course' : 'Add new course'} loading={courses.loading}>\n      <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={handleSubmit}>\n        {({ errors, touched, handleChange, setFieldValue }) => (\n          <Form>\n            <Field\n              id=\"name\"\n              name=\"name\"\n              label=\"Course name\"\n              component={TextField}\n              onChange={handleChange}\n              error={touched.name && Boolean(errors.name)}\n              helperText={touched.name && errors.name}\n              fullWidth\n              required\n            />\n            <Field\n              id=\"courseCode\"\n              name=\"courseCode\"\n              label=\"Course code\"\n              component={TextField}\n              onChange={handleChange}\n              error={touched.courseCode && Boolean(errors.courseCode)}\n              helperText={touched.courseCode && errors.courseCode}\n              fullWidth\n              required\n            />\n            <Label style={{ lineHeight: 1 }}>Description</Label>\n            <TextAreaCustom\n              id=\"description\"\n              name=\"description\"\n              defaultValue={courses.currentCourse?.description}\n              onChange={handleChange}\n              rows={5}\n              meta={{ touched, errors }}\n              style={{ width: '93%' }}\n            />\n\n            <Label style={{ lineHeight: 1 }}>Logo</Label>\n            <FileDrop\n              fileTypes={['image/*']}\n              getFiles={files => handleGetFiles(files[0], setFieldValue)}\n              defaultImage={courses.currentCourse?.image}\n            />\n\n            <Grid>\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={courses.loading}>\n                Save\n              </Button>\n              <Button variant=\"contained\" color=\"secondary\" disabled={courses.loading} onClick={props.history.goBack}>\n                Cancel\n              </Button>\n            </Grid>\n          </Form>\n        )}\n      </Formik>\n    </PageLayout>\n  );\n};\n\nconst mapStateToProps = state => ({\n  profile: state.authentication.profile,\n  programs: state.programs,\n  courses: state.courses,\n});\n\nconst mapDispatchToProps = {\n  getOneCourse,\n  createCourse,\n  updateCourse,\n  resetCoursesState,\n  resetGlobalState,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddEdit);\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/FileDrop/index.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/FileDrop/FileDrop.jsx",["943","944"],"import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { FilePond, registerPlugin } from 'react-filepond';\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport FilePondPluginFileValidateType from 'filepond-plugin-file-validate-type';\n\nimport 'filepond/dist/filepond.min.css';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\nimport './styles.module.css';\n\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview, FilePondPluginFileValidateType);\n\nconst FileDrop = ({ fileTypes, getFiles }) => {\n  const [files, setFiles] = useState([]);\n\n  useEffect(() => {\n    getFiles(files.map(file => file.file));\n  }, [files]);\n\n  return (\n    <div className=\"App\">\n      <FilePond\n        files={files}\n        acceptedFileTypes={fileTypes}\n        allowReorder={true}\n        onupdatefiles={setFiles}\n        labelIdle='<span class=\"filepond--label-action\"><img src=\"/static/media/upload.1e37f923.svg\"> Upload file</span> or drag and drop the file here '\n      />\n    </div>\n  );\n};\n\nexport default FileDrop;\n\nFileDrop.propTypes = {\n  title: PropTypes.string,\n  fileTypes: PropTypes.arrayOf(PropTypes.string),\n  getFiles: PropTypes.func,\n};\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Courses/CourseDetails/index.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Themes/Colors.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Courses/CourseDetails/Main.jsx",["945","946"],"import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nimport { Preloader } from 'Components';\nimport { Header, Body } from './Components';\nimport { getOneCourse, resetCoursesState } from 'Store/Reducers/courses';\n\nconst Main = props => {\n  const params = useParams();\n\n  const { courses, profile } = props;\n\n  useEffect(() => {\n    props.getOneCourse(profile.organizationId, params.courseId);\n    return props.resetCoursesState();\n  }, []);\n\n  useEffect(() => {\n    if (!courses.loading && courses.success) props.getOneCourse(profile.organizationId, params.courseId);\n  }, [courses.loading, courses.success]);\n\n  if (courses.loading) return <Preloader />;\n\n  return (\n    <div>\n      <Header course={courses.currentCourse} />\n      <Body course={courses.currentCourse} />\n    </div>\n  );\n};\n\nconst mapstateToProps = state => ({\n  profile: state.authentication.profile,\n  courses: state.courses,\n});\n\nconst mapDispatchToProps = {\n  getOneCourse,\n  resetCoursesState,\n};\n\nexport default connect(mapstateToProps, mapDispatchToProps)(Main);\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Courses/CourseDetails/Components/index.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Courses/CourseDetails/Components/Header/index.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Courses/CourseDetails/Components/Body/index.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Courses/CourseDetails/Components/Body/Body.jsx",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Courses/CourseDetails/Components/Header/Header.jsx",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Courses/CourseDetails/Components/Body/Components/index.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Courses/CourseDetails/Components/Body/Components/LessonCard.jsx",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Lessons/Lesson/Lesson.jsx",["947"],"import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nimport { Preloader } from 'Components';\nimport { getOneLesson, resetLessonsState } from 'Store/Reducers/lessons';\nimport { Header, Body } from './Components';\n\nconst Lesson = props => {\n  const urlParams = useParams();\n\n  const { profile, lessons } = props;\n\n  useEffect(() => {\n    props.getOneLesson(profile.organizationId, urlParams.lessonId);\n    return props.resetLessonsState;\n  }, []);\n\n  if (lessons.loading) return <Preloader />;\n\n  return (\n    <div>\n      <Header />\n      <Body />\n    </div>\n  );\n};\n\nconst mapStateToprops = state => ({\n  profile: state.authentication.profile,\n  lessons: state.lessons,\n});\n\nconst mapDispatchToProps = {\n  getOneLesson,\n  resetLessonsState,\n};\n\nexport default connect(mapStateToprops, mapDispatchToProps)(Lesson);\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Lessons/Routes.jsx",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Lessons/Lesson/index.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Lessons/Lesson/Components/index.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Lessons/Lesson/Components/Body/index.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Lessons/Lesson/Components/Header/index.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Lessons/Lesson/Components/Header/Header.jsx",["948"],"import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nimport { getOneLesson } from 'Store/Reducers/lessons';\nimport { Button, EditIcon, DeleteIcon } from 'Components';\nimport { AddEdit as EditLesson } from 'Pages/Lessons/AddEdit';\nimport CourseImage from 'Assets/Icons/course.svg';\nimport { orderNumber } from 'Utils/general';\nimport classes from './styles.module.css';\n\nconst Header = props => {\n  const [editLesson, setEditLesson] = useState(false);\n  const urlParams = useParams();\n\n  const { lessons, profile } = props;\n\n  const handleSaveLesson = (name, file) => {\n    setEditLesson(false);\n    props.getOneLesson(profile.organizationId, lessons.currentLesson?.lessonId);\n  };\n\n  const handleCloseLesson = () => {\n    props.getOneLesson(profile.organizationId, lessons.currentLesson?.lessonId);\n    setEditLesson(false);\n  };\n\n  return (\n    <div className={classes.header}>\n      <EditLesson title=\"Edit lesson\" open={editLesson} handleSave={handleSaveLesson} handleClose={handleCloseLesson} />\n      <div>\n        <img src={CourseImage} alt=\"course_thumbnail\" className={classes.thumbnail} />\n      </div>\n      <div className={classes.details}>\n        <div className={classes.courseName}>\n          <span>Course name</span>\n        </div>\n        <div className={classes.status}>\n          <p className={classes.number}>Lesson {orderNumber(lessons.currentLesson?.lessonOrder)}</p>\n          <p className={classes.separator}></p>\n          <p className={classes.badge}>in progress</p>\n        </div>\n        <div className={classes.lessonName}>{lessons.currentLesson?.lessonName}</div>\n        <div className={classes.lessonActions}>\n          <div>\n            <Button\n              className={classes.actionButton}\n              size=\"small\"\n              startIcon={<EditIcon />}\n              onClick={() => setEditLesson(true)}\n            >\n              <span>Edit</span>\n            </Button>\n          </div>\n          <div>\n            <Button className={classes.actionButton} size=\"small\" startIcon={<DeleteIcon color=\"error\" />}>\n              <span style={{ color: '#C70000' }}>Delete</span>\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  lessons: state.lessons,\n  profile: state.authentication.profile,\n});\n\nconst mapDispatchToProps = { getOneLesson };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Lessons/Lesson/Components/Body/Body.jsx",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Lessons/AddEdit/index.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Lessons/AddEdit/AddEdit.jsx",["949","950","951","952"],"import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Formik, Form, Field } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport * as Yup from 'yup';\n\nimport { Button, Preloader, Dialog, DialogTitle, DialogContent, DialogActions, Label, FileDrop } from 'Components';\nimport { createLesson, updateLesson, getOneLesson, resetLessonsState } from 'Store/Reducers/lessons';\n\nconst AddEdit = props => {\n  const urlParams = useParams();\n  const [file, setFile] = useState(null);\n\n  const { lessons, courses, profile } = props;\n\n  useEffect(() => {\n    // props.getOneLesson(profile.organizationId, urlParams.lessonId);\n    return props.handleClose;\n  }, []);\n\n  useEffect(() => {\n    // if (props.open && !lessons.loading) ;\n  }, [lessons.loading]);\n\n  const handleSubmit = async (values, { setSubmitting }) => {\n    const formData = new FormData();\n\n    formData.append('tincan', file[0]?.name);\n    formData.append('selectedOrganization', profile.organizationId);\n\n    if (lessons.currentLesson) {\n      formData.append('courseId', lessons.currentLesson?.courseId);\n      formData.append('lessonId', lessons.currentLesson.lessonId);\n      props.updateLesson(formData);\n    } else {\n      formData.append('courseId', courses.currentCourse?.courseId);\n      props.createLesson(formData, file[0]);\n    }\n\n    setSubmitting(false);\n  };\n\n  const validationSchema = Yup.object({\n    // name: Yup.string(),\n  });\n\n  const initialValues = {\n    // name: lessons.currentLesson?.lessonName,\n  };\n\n  if (lessons.loading) return <Preloader />;\n\n  return (\n    <div>\n      <Dialog open={props.open} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\" fullWidth>\n        <DialogTitle id=\"form-dialog-title\">{props.title}</DialogTitle>\n        <DialogContent>\n          <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={handleSubmit}>\n            {() => (\n              <Form>\n                <Label style={{ marginBottom: '19px' }}>Course lesson</Label>\n                <FileDrop getFiles={files => setFile(files)} fileTypes={['application/zip']} />\n                <DialogActions disableSpacing style={{ marginRight: 'auto' }}>\n                  <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                    Save\n                  </Button>\n                  <Button variant=\"contained\" color=\"secondary\" onClick={props.handleClose}>\n                    Cancel\n                  </Button>\n                </DialogActions>\n              </Form>\n            )}\n          </Formik>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n\nconst mapStateToprops = state => ({\n  profile: state.authentication.profile,\n  courses: state.courses,\n  lessons: state.lessons,\n});\n\nconst mapDispatchToProps = {\n  createLesson,\n  updateLesson,\n  getOneLesson,\n  resetLessonsState,\n};\n\nexport default connect(mapStateToprops, mapDispatchToProps)(AddEdit);\n\nAddEdit.propsTypes = {\n  title: PropTypes.string.isRequired,\n  open: PropTypes.bool.isRequired,\n  handleSave: PropTypes.func.isRequired,\n  handleClose: PropTypes.func.isRequired,\n};\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Services/lessons.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Store/Reducers/lessons.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/NoDataPlaceholder/index.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/NoDataPlaceholder/NoDataPlaceHolder.jsx",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Utils/general.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Services/common.js",[],{"ruleId":"953","replacedBy":"954"},{"ruleId":"955","replacedBy":"956"},{"ruleId":"957","severity":1,"message":"958","line":6,"column":36,"nodeType":"959","messageId":"960","endLine":6,"endColumn":48},{"ruleId":"957","severity":1,"message":"961","line":27,"column":11,"nodeType":"959","messageId":"960","endLine":27,"endColumn":12},{"ruleId":"962","severity":1,"message":"963","line":32,"column":6,"nodeType":"964","endLine":32,"endColumn":8,"suggestions":"965"},{"ruleId":"966","severity":1,"message":"967","line":10,"column":21,"nodeType":"968","messageId":"969","endLine":10,"endColumn":22,"suggestions":"970"},{"ruleId":"962","severity":1,"message":"963","line":13,"column":6,"nodeType":"964","endLine":13,"endColumn":8,"suggestions":"971"},{"ruleId":"957","severity":1,"message":"972","line":5,"column":8,"nodeType":"959","messageId":"960","endLine":5,"endColumn":15},{"ruleId":"962","severity":1,"message":"963","line":15,"column":6,"nodeType":"964","endLine":15,"endColumn":8,"suggestions":"973"},{"ruleId":"957","severity":1,"message":"974","line":1,"column":28,"nodeType":"959","messageId":"960","endLine":1,"endColumn":36},{"ruleId":"962","severity":1,"message":"963","line":14,"column":6,"nodeType":"964","endLine":14,"endColumn":32,"suggestions":"975"},{"ruleId":"962","severity":1,"message":"963","line":18,"column":6,"nodeType":"964","endLine":18,"endColumn":35,"suggestions":"976"},{"ruleId":"962","severity":1,"message":"963","line":19,"column":6,"nodeType":"964","endLine":19,"endColumn":8,"suggestions":"977"},{"ruleId":"957","severity":1,"message":"978","line":12,"column":14,"nodeType":"959","messageId":"960","endLine":12,"endColumn":18},{"ruleId":"957","severity":1,"message":"979","line":8,"column":10,"nodeType":"959","messageId":"960","endLine":8,"endColumn":21},{"ruleId":"957","severity":1,"message":"980","line":8,"column":23,"nodeType":"959","messageId":"960","endLine":8,"endColumn":37},{"ruleId":"962","severity":1,"message":"963","line":41,"column":6,"nodeType":"964","endLine":41,"endColumn":8,"suggestions":"981"},{"ruleId":"957","severity":1,"message":"982","line":5,"column":19,"nodeType":"959","messageId":"960","endLine":5,"endColumn":27},{"ruleId":"957","severity":1,"message":"983","line":5,"column":41,"nodeType":"959","messageId":"960","endLine":5,"endColumn":52},{"ruleId":"957","severity":1,"message":"978","line":13,"column":14,"nodeType":"959","messageId":"960","endLine":13,"endColumn":18},{"ruleId":"957","severity":1,"message":"978","line":58,"column":14,"nodeType":"959","messageId":"960","endLine":58,"endColumn":18},{"ruleId":"962","severity":1,"message":"963","line":63,"column":6,"nodeType":"964","endLine":63,"endColumn":8,"suggestions":"984"},{"ruleId":"957","severity":1,"message":"978","line":12,"column":14,"nodeType":"959","messageId":"960","endLine":12,"endColumn":18},{"ruleId":"957","severity":1,"message":"978","line":55,"column":14,"nodeType":"959","messageId":"960","endLine":55,"endColumn":18},{"ruleId":"962","severity":1,"message":"963","line":63,"column":6,"nodeType":"964","endLine":63,"endColumn":8,"suggestions":"985"},{"ruleId":"957","severity":1,"message":"986","line":1,"column":17,"nodeType":"959","messageId":"960","endLine":1,"endColumn":26},{"ruleId":"957","severity":1,"message":"974","line":1,"column":28,"nodeType":"959","messageId":"960","endLine":1,"endColumn":36},{"ruleId":"957","severity":1,"message":"987","line":16,"column":9,"nodeType":"959","messageId":"960","endLine":16,"endColumn":18},{"ruleId":"957","severity":1,"message":"978","line":17,"column":14,"nodeType":"959","messageId":"960","endLine":17,"endColumn":18},{"ruleId":"957","severity":1,"message":"978","line":16,"column":15,"nodeType":"959","messageId":"960","endLine":16,"endColumn":19},{"ruleId":"957","severity":1,"message":"974","line":1,"column":17,"nodeType":"959","messageId":"960","endLine":1,"endColumn":25},{"ruleId":"957","severity":1,"message":"987","line":17,"column":9,"nodeType":"959","messageId":"960","endLine":17,"endColumn":18},{"ruleId":"957","severity":1,"message":"978","line":18,"column":14,"nodeType":"959","messageId":"960","endLine":18,"endColumn":18},{"ruleId":"957","severity":1,"message":"978","line":7,"column":15,"nodeType":"959","messageId":"960","endLine":7,"endColumn":19},{"ruleId":"957","severity":1,"message":"978","line":13,"column":14,"nodeType":"959","messageId":"960","endLine":13,"endColumn":18},{"ruleId":"962","severity":1,"message":"963","line":19,"column":6,"nodeType":"964","endLine":19,"endColumn":8,"suggestions":"988"},{"ruleId":"989","severity":1,"message":"990","line":37,"column":9,"nodeType":"991","endLine":41,"endColumn":11},{"ruleId":"957","severity":1,"message":"992","line":61,"column":7,"nodeType":"959","messageId":"960","endLine":61,"endColumn":22},{"ruleId":"957","severity":1,"message":"978","line":11,"column":14,"nodeType":"959","messageId":"960","endLine":11,"endColumn":18},{"ruleId":"962","severity":1,"message":"963","line":17,"column":6,"nodeType":"964","endLine":17,"endColumn":8,"suggestions":"993"},{"ruleId":"957","severity":1,"message":"978","line":13,"column":14,"nodeType":"959","messageId":"960","endLine":13,"endColumn":18},{"ruleId":"962","severity":1,"message":"963","line":32,"column":6,"nodeType":"964","endLine":32,"endColumn":21,"suggestions":"994"},{"ruleId":"989","severity":1,"message":"990","line":43,"column":11,"nodeType":"991","endLine":46,"endColumn":13},{"ruleId":"989","severity":1,"message":"990","line":47,"column":11,"nodeType":"991","endLine":47,"endColumn":63},{"ruleId":"957","severity":1,"message":"978","line":7,"column":15,"nodeType":"959","messageId":"960","endLine":7,"endColumn":19},{"ruleId":"995","severity":1,"message":"996","line":11,"column":36,"nodeType":"997","messageId":"998","endLine":11,"endColumn":38},{"ruleId":"989","severity":1,"message":"990","line":11,"column":49,"nodeType":"991","endLine":11,"endColumn":78},{"ruleId":"957","severity":1,"message":"978","line":11,"column":14,"nodeType":"959","messageId":"960","endLine":11,"endColumn":18},{"ruleId":"957","severity":1,"message":"983","line":2,"column":16,"nodeType":"959","messageId":"960","endLine":2,"endColumn":27},{"ruleId":"957","severity":1,"message":"978","line":9,"column":16,"nodeType":"959","messageId":"960","endLine":9,"endColumn":20},{"ruleId":"957","severity":1,"message":"999","line":2,"column":16,"nodeType":"959","messageId":"960","endLine":2,"endColumn":23},{"ruleId":"957","severity":1,"message":"978","line":9,"column":16,"nodeType":"959","messageId":"960","endLine":9,"endColumn":20},{"ruleId":"957","severity":1,"message":"978","line":6,"column":14,"nodeType":"959","messageId":"960","endLine":6,"endColumn":18},{"ruleId":"957","severity":1,"message":"978","line":10,"column":15,"nodeType":"959","messageId":"960","endLine":10,"endColumn":19},{"ruleId":"1000","severity":1,"message":"1001","line":14,"column":51,"nodeType":"1002","messageId":"1003","endLine":14,"endColumn":53},{"ruleId":"995","severity":1,"message":"996","line":31,"column":68,"nodeType":"997","messageId":"998","endLine":31,"endColumn":70},{"ruleId":"957","severity":1,"message":"986","line":1,"column":17,"nodeType":"959","messageId":"960","endLine":1,"endColumn":26},{"ruleId":"957","severity":1,"message":"978","line":12,"column":16,"nodeType":"959","messageId":"960","endLine":12,"endColumn":20},{"ruleId":"957","severity":1,"message":"978","line":8,"column":15,"nodeType":"959","messageId":"960","endLine":8,"endColumn":19},{"ruleId":"995","severity":1,"message":"996","line":13,"column":36,"nodeType":"997","messageId":"998","endLine":13,"endColumn":38},{"ruleId":"989","severity":1,"message":"990","line":13,"column":49,"nodeType":"991","endLine":13,"endColumn":78},{"ruleId":"957","severity":1,"message":"1004","line":11,"column":9,"nodeType":"959","messageId":"960","endLine":11,"endColumn":14},{"ruleId":"957","severity":1,"message":"978","line":9,"column":15,"nodeType":"959","messageId":"960","endLine":9,"endColumn":19},{"ruleId":"1000","severity":1,"message":"1001","line":14,"column":55,"nodeType":"1002","messageId":"1003","endLine":14,"endColumn":57},{"ruleId":"1000","severity":1,"message":"1001","line":20,"column":52,"nodeType":"1002","messageId":"1003","endLine":20,"endColumn":54},{"ruleId":"989","severity":1,"message":"990","line":36,"column":29,"nodeType":"991","endLine":36,"endColumn":56},{"ruleId":"957","severity":1,"message":"978","line":27,"column":15,"nodeType":"959","messageId":"960","endLine":27,"endColumn":19},{"ruleId":"995","severity":1,"message":"996","line":47,"column":21,"nodeType":"997","messageId":"998","endLine":47,"endColumn":23},{"ruleId":"995","severity":1,"message":"996","line":49,"column":27,"nodeType":"997","messageId":"998","endLine":49,"endColumn":29},{"ruleId":"995","severity":1,"message":"996","line":51,"column":27,"nodeType":"997","messageId":"998","endLine":51,"endColumn":29},{"ruleId":"989","severity":1,"message":"990","line":71,"column":17,"nodeType":"991","endLine":71,"endColumn":42},{"ruleId":"957","severity":1,"message":"978","line":28,"column":15,"nodeType":"959","messageId":"960","endLine":28,"endColumn":19},{"ruleId":"989","severity":1,"message":"990","line":38,"column":25,"nodeType":"991","endLine":38,"endColumn":84},{"ruleId":"989","severity":1,"message":"990","line":44,"column":25,"nodeType":"991","endLine":44,"endColumn":80},{"ruleId":"957","severity":1,"message":"978","line":41,"column":14,"nodeType":"959","messageId":"960","endLine":41,"endColumn":18},{"ruleId":"962","severity":1,"message":"1005","line":62,"column":6,"nodeType":"964","endLine":62,"endColumn":24,"suggestions":"1006"},{"ruleId":"957","severity":1,"message":"1007","line":1,"column":17,"nodeType":"959","messageId":"960","endLine":1,"endColumn":25},{"ruleId":"957","severity":1,"message":"978","line":15,"column":15,"nodeType":"959","messageId":"960","endLine":15,"endColumn":19},{"ruleId":"995","severity":1,"message":"996","line":43,"column":21,"nodeType":"997","messageId":"998","endLine":43,"endColumn":23},{"ruleId":"995","severity":1,"message":"996","line":45,"column":27,"nodeType":"997","messageId":"998","endLine":45,"endColumn":29},{"ruleId":"995","severity":1,"message":"996","line":47,"column":27,"nodeType":"997","messageId":"998","endLine":47,"endColumn":29},{"ruleId":"989","severity":1,"message":"990","line":66,"column":17,"nodeType":"991","endLine":66,"endColumn":74},{"ruleId":"957","severity":1,"message":"978","line":28,"column":14,"nodeType":"959","messageId":"960","endLine":28,"endColumn":18},{"ruleId":"989","severity":1,"message":"990","line":38,"column":9,"nodeType":"991","endLine":38,"endColumn":100},{"ruleId":"957","severity":1,"message":"961","line":18,"column":11,"nodeType":"959","messageId":"960","endLine":18,"endColumn":12},{"ruleId":"957","severity":1,"message":"978","line":18,"column":14,"nodeType":"959","messageId":"960","endLine":18,"endColumn":18},{"ruleId":"989","severity":1,"message":"990","line":8,"column":13,"nodeType":"991","endLine":8,"endColumn":35},{"ruleId":"962","severity":1,"message":"963","line":56,"column":6,"nodeType":"964","endLine":56,"endColumn":8,"suggestions":"1008"},{"ruleId":"957","severity":1,"message":"1009","line":58,"column":10,"nodeType":"959","messageId":"960","endLine":58,"endColumn":24},{"ruleId":"957","severity":1,"message":"1010","line":59,"column":10,"nodeType":"959","messageId":"960","endLine":59,"endColumn":24},{"ruleId":"957","severity":1,"message":"1011","line":60,"column":10,"nodeType":"959","messageId":"960","endLine":60,"endColumn":26},{"ruleId":"1012","severity":1,"message":"1013","line":63,"column":99,"nodeType":"1014","endLine":63,"endColumn":126},{"ruleId":"1012","severity":1,"message":"1013","line":64,"column":102,"nodeType":"1014","endLine":64,"endColumn":129},{"ruleId":"962","severity":1,"message":"1015","line":19,"column":7,"nodeType":"964","endLine":19,"endColumn":9,"suggestions":"1016"},{"ruleId":"962","severity":1,"message":"1017","line":17,"column":6,"nodeType":"964","endLine":17,"endColumn":50,"suggestions":"1018"},{"ruleId":"957","severity":1,"message":"1019","line":2,"column":10,"nodeType":"959","messageId":"960","endLine":2,"endColumn":18},{"ruleId":"957","severity":1,"message":"982","line":6,"column":19,"nodeType":"959","messageId":"960","endLine":6,"endColumn":27},{"ruleId":"957","severity":1,"message":"1020","line":22,"column":8,"nodeType":"959","messageId":"960","endLine":22,"endColumn":15},{"ruleId":"957","severity":1,"message":"978","line":47,"column":14,"nodeType":"959","messageId":"960","endLine":47,"endColumn":18},{"ruleId":"989","severity":1,"message":"990","line":159,"column":15,"nodeType":"991","endLine":159,"endColumn":85},{"ruleId":"957","severity":1,"message":"1021","line":9,"column":8,"nodeType":"959","messageId":"960","endLine":9,"endColumn":27},{"ruleId":"957","severity":1,"message":"978","line":22,"column":15,"nodeType":"959","messageId":"960","endLine":22,"endColumn":19},{"ruleId":"957","severity":1,"message":"978","line":13,"column":14,"nodeType":"959","messageId":"960","endLine":13,"endColumn":18},{"ruleId":"995","severity":1,"message":"996","line":77,"column":88,"nodeType":"997","messageId":"998","endLine":77,"endColumn":90},{"ruleId":"962","severity":1,"message":"963","line":13,"column":6,"nodeType":"964","endLine":13,"endColumn":8,"suggestions":"1022"},{"ruleId":"957","severity":1,"message":"978","line":21,"column":14,"nodeType":"959","messageId":"960","endLine":21,"endColumn":18},{"ruleId":"957","severity":1,"message":"1023","line":29,"column":7,"nodeType":"959","messageId":"960","endLine":29,"endColumn":33},{"ruleId":"957","severity":1,"message":"1024","line":30,"column":7,"nodeType":"959","messageId":"960","endLine":30,"endColumn":37},{"ruleId":"957","severity":1,"message":"1025","line":58,"column":7,"nodeType":"959","messageId":"960","endLine":58,"endColumn":25},{"ruleId":"989","severity":1,"message":"990","line":195,"column":15,"nodeType":"991","endLine":195,"endColumn":39},{"ruleId":"957","severity":1,"message":"978","line":221,"column":14,"nodeType":"959","messageId":"960","endLine":221,"endColumn":18},{"ruleId":"957","severity":1,"message":"1026","line":222,"column":10,"nodeType":"959","messageId":"960","endLine":222,"endColumn":14},{"ruleId":"957","severity":1,"message":"1027","line":224,"column":10,"nodeType":"959","messageId":"960","endLine":224,"endColumn":20},{"ruleId":"962","severity":1,"message":"963","line":231,"column":6,"nodeType":"964","endLine":231,"endColumn":8,"suggestions":"1028"},{"ruleId":"957","severity":1,"message":"1029","line":1,"column":17,"nodeType":"959","messageId":"960","endLine":1,"endColumn":28},{"ruleId":"957","severity":1,"message":"978","line":20,"column":15,"nodeType":"959","messageId":"960","endLine":20,"endColumn":19},{"ruleId":"957","severity":1,"message":"1023","line":28,"column":9,"nodeType":"959","messageId":"960","endLine":28,"endColumn":35},{"ruleId":"957","severity":1,"message":"1024","line":29,"column":9,"nodeType":"959","messageId":"960","endLine":29,"endColumn":39},{"ruleId":"957","severity":1,"message":"1025","line":57,"column":9,"nodeType":"959","messageId":"960","endLine":57,"endColumn":27},{"ruleId":"989","severity":1,"message":"990","line":164,"column":29,"nodeType":"991","endLine":164,"endColumn":52},{"ruleId":"957","severity":1,"message":"978","line":188,"column":15,"nodeType":"959","messageId":"960","endLine":188,"endColumn":19},{"ruleId":"957","severity":1,"message":"1026","line":189,"column":12,"nodeType":"959","messageId":"960","endLine":189,"endColumn":16},{"ruleId":"957","severity":1,"message":"1027","line":190,"column":12,"nodeType":"959","messageId":"960","endLine":190,"endColumn":22},{"ruleId":"957","severity":1,"message":"978","line":45,"column":14,"nodeType":"959","messageId":"960","endLine":45,"endColumn":18},{"ruleId":"957","severity":1,"message":"1030","line":1,"column":28,"nodeType":"959","messageId":"960","endLine":1,"endColumn":38},{"ruleId":"957","severity":1,"message":"1031","line":2,"column":19,"nodeType":"959","messageId":"960","endLine":2,"endColumn":30},{"ruleId":"962","severity":1,"message":"963","line":46,"column":6,"nodeType":"964","endLine":46,"endColumn":8,"suggestions":"1032"},{"ruleId":"957","severity":1,"message":"974","line":1,"column":28,"nodeType":"959","messageId":"960","endLine":1,"endColumn":36},{"ruleId":"957","severity":1,"message":"978","line":20,"column":14,"nodeType":"959","messageId":"960","endLine":20,"endColumn":18},{"ruleId":"962","severity":1,"message":"1033","line":33,"column":6,"nodeType":"964","endLine":33,"endColumn":8,"suggestions":"1034"},{"ruleId":"995","severity":1,"message":"996","line":120,"column":70,"nodeType":"997","messageId":"998","endLine":120,"endColumn":72},{"ruleId":"957","severity":1,"message":"1035","line":6,"column":9,"nodeType":"959","messageId":"960","endLine":6,"endColumn":19},{"ruleId":"957","severity":1,"message":"978","line":33,"column":15,"nodeType":"959","messageId":"960","endLine":33,"endColumn":19},{"ruleId":"989","severity":1,"message":"990","line":22,"column":17,"nodeType":"991","endLine":22,"endColumn":37},{"ruleId":"957","severity":1,"message":"999","line":4,"column":10,"nodeType":"959","messageId":"960","endLine":4,"endColumn":17},{"ruleId":"957","severity":1,"message":"1036","line":6,"column":10,"nodeType":"959","messageId":"960","endLine":6,"endColumn":16},{"ruleId":"957","severity":1,"message":"961","line":17,"column":11,"nodeType":"959","messageId":"960","endLine":17,"endColumn":12},{"ruleId":"957","severity":1,"message":"978","line":17,"column":14,"nodeType":"959","messageId":"960","endLine":17,"endColumn":18},{"ruleId":"957","severity":1,"message":"1037","line":18,"column":9,"nodeType":"959","messageId":"960","endLine":18,"endColumn":17},{"ruleId":"957","severity":1,"message":"1038","line":24,"column":7,"nodeType":"959","messageId":"960","endLine":24,"endColumn":25},{"ruleId":"957","severity":1,"message":"978","line":30,"column":14,"nodeType":"959","messageId":"960","endLine":30,"endColumn":18},{"ruleId":"962","severity":1,"message":"963","line":37,"column":6,"nodeType":"964","endLine":37,"endColumn":8,"suggestions":"1039"},{"ruleId":"962","severity":1,"message":"1040","line":54,"column":6,"nodeType":"964","endLine":54,"endColumn":22,"suggestions":"1041"},{"ruleId":"957","severity":1,"message":"978","line":10,"column":15,"nodeType":"959","messageId":"960","endLine":10,"endColumn":19},{"ruleId":"957","severity":1,"message":"1042","line":13,"column":12,"nodeType":"959","messageId":"960","endLine":13,"endColumn":16},{"ruleId":"989","severity":1,"message":"990","line":68,"column":25,"nodeType":"991","endLine":68,"endColumn":42},{"ruleId":"989","severity":1,"message":"990","line":71,"column":25,"nodeType":"991","endLine":71,"endColumn":44},{"ruleId":"989","severity":1,"message":"990","line":37,"column":13,"nodeType":"991","endLine":37,"endColumn":57},{"ruleId":"957","severity":1,"message":"961","line":28,"column":11,"nodeType":"959","messageId":"960","endLine":28,"endColumn":12},{"ruleId":"957","severity":1,"message":"978","line":28,"column":14,"nodeType":"959","messageId":"960","endLine":28,"endColumn":18},{"ruleId":"962","severity":1,"message":"1043","line":40,"column":6,"nodeType":"964","endLine":40,"endColumn":8,"suggestions":"1044"},{"ruleId":"957","severity":1,"message":"1029","line":1,"column":17,"nodeType":"959","messageId":"960","endLine":1,"endColumn":28},{"ruleId":"957","severity":1,"message":"978","line":22,"column":15,"nodeType":"959","messageId":"960","endLine":22,"endColumn":19},{"ruleId":"957","severity":1,"message":"1023","line":30,"column":9,"nodeType":"959","messageId":"960","endLine":30,"endColumn":35},{"ruleId":"957","severity":1,"message":"1024","line":31,"column":9,"nodeType":"959","messageId":"960","endLine":31,"endColumn":39},{"ruleId":"957","severity":1,"message":"1025","line":59,"column":9,"nodeType":"959","messageId":"960","endLine":59,"endColumn":27},{"ruleId":"989","severity":1,"message":"990","line":186,"column":29,"nodeType":"991","endLine":186,"endColumn":52},{"ruleId":"957","severity":1,"message":"978","line":214,"column":15,"nodeType":"959","messageId":"960","endLine":214,"endColumn":19},{"ruleId":"957","severity":1,"message":"1026","line":215,"column":12,"nodeType":"959","messageId":"960","endLine":215,"endColumn":16},{"ruleId":"957","severity":1,"message":"1027","line":216,"column":12,"nodeType":"959","messageId":"960","endLine":216,"endColumn":22},{"ruleId":"957","severity":1,"message":"1045","line":1,"column":45,"nodeType":"959","messageId":"960","endLine":1,"endColumn":51},{"ruleId":"957","severity":1,"message":"978","line":14,"column":15,"nodeType":"959","messageId":"960","endLine":14,"endColumn":19},{"ruleId":"957","severity":1,"message":"978","line":87,"column":15,"nodeType":"959","messageId":"960","endLine":87,"endColumn":19},{"ruleId":"957","severity":1,"message":"1046","line":88,"column":12,"nodeType":"959","messageId":"960","endLine":88,"endColumn":23},{"ruleId":"953","replacedBy":"1047"},{"ruleId":"955","replacedBy":"1048"},{"ruleId":"957","severity":1,"message":"978","line":14,"column":15,"nodeType":"959","messageId":"960","endLine":14,"endColumn":19},{"ruleId":"957","severity":1,"message":"1049","line":30,"column":11,"nodeType":"959","messageId":"960","endLine":30,"endColumn":23},{"ruleId":"957","severity":1,"message":"978","line":94,"column":15,"nodeType":"959","messageId":"960","endLine":94,"endColumn":19},{"ruleId":"957","severity":1,"message":"1046","line":95,"column":12,"nodeType":"959","messageId":"960","endLine":95,"endColumn":23},{"ruleId":"957","severity":1,"message":"978","line":10,"column":15,"nodeType":"959","messageId":"960","endLine":10,"endColumn":19},{"ruleId":"957","severity":1,"message":"1050","line":11,"column":9,"nodeType":"959","messageId":"960","endLine":11,"endColumn":26},{"ruleId":"995","severity":1,"message":"996","line":24,"column":67,"nodeType":"997","messageId":"998","endLine":24,"endColumn":69},{"ruleId":"962","severity":1,"message":"1043","line":19,"column":6,"nodeType":"964","endLine":19,"endColumn":8,"suggestions":"1051"},{"ruleId":"957","severity":1,"message":"982","line":5,"column":10,"nodeType":"959","messageId":"960","endLine":5,"endColumn":18},{"ruleId":"957","severity":1,"message":"1052","line":9,"column":10,"nodeType":"959","messageId":"960","endLine":9,"endColumn":20},{"ruleId":"962","severity":1,"message":"963","line":49,"column":6,"nodeType":"964","endLine":49,"endColumn":8,"suggestions":"1053"},{"ruleId":"957","severity":1,"message":"978","line":10,"column":15,"nodeType":"959","messageId":"960","endLine":10,"endColumn":19},{"ruleId":"1000","severity":1,"message":"1001","line":20,"column":53,"nodeType":"1002","messageId":"1003","endLine":20,"endColumn":55},{"ruleId":"995","severity":1,"message":"996","line":35,"column":77,"nodeType":"997","messageId":"998","endLine":35,"endColumn":79},{"ruleId":"957","severity":1,"message":"978","line":11,"column":15,"nodeType":"959","messageId":"960","endLine":11,"endColumn":19},{"ruleId":"957","severity":1,"message":"1054","line":15,"column":9,"nodeType":"959","messageId":"960","endLine":15,"endColumn":19},{"ruleId":"1000","severity":1,"message":"1001","line":30,"column":51,"nodeType":"1002","messageId":"1003","endLine":30,"endColumn":53},{"ruleId":"1000","severity":1,"message":"1001","line":38,"column":49,"nodeType":"1002","messageId":"1003","endLine":38,"endColumn":51},{"ruleId":"995","severity":1,"message":"996","line":66,"column":67,"nodeType":"997","messageId":"998","endLine":66,"endColumn":69},{"ruleId":"995","severity":1,"message":"996","line":75,"column":61,"nodeType":"997","messageId":"998","endLine":75,"endColumn":63},{"ruleId":"957","severity":1,"message":"1055","line":3,"column":8,"nodeType":"959","messageId":"960","endLine":3,"endColumn":17},{"ruleId":"957","severity":1,"message":"1056","line":6,"column":8,"nodeType":"959","messageId":"960","endLine":6,"endColumn":18},{"ruleId":"957","severity":1,"message":"961","line":10,"column":12,"nodeType":"959","messageId":"960","endLine":10,"endColumn":13},{"ruleId":"957","severity":1,"message":"978","line":10,"column":15,"nodeType":"959","messageId":"960","endLine":10,"endColumn":19},{"ruleId":"989","severity":1,"message":"990","line":20,"column":17,"nodeType":"991","endLine":20,"endColumn":36},{"ruleId":"957","severity":1,"message":"978","line":19,"column":15,"nodeType":"959","messageId":"960","endLine":19,"endColumn":19},{"ruleId":"957","severity":1,"message":"1057","line":28,"column":12,"nodeType":"959","messageId":"960","endLine":28,"endColumn":24},{"ruleId":"957","severity":1,"message":"1058","line":82,"column":12,"nodeType":"959","messageId":"960","endLine":82,"endColumn":23},{"ruleId":"957","severity":1,"message":"1059","line":90,"column":12,"nodeType":"959","messageId":"960","endLine":90,"endColumn":22},{"ruleId":"957","severity":1,"message":"1060","line":97,"column":12,"nodeType":"959","messageId":"960","endLine":97,"endColumn":14},{"ruleId":"957","severity":1,"message":"1061","line":99,"column":9,"nodeType":"959","messageId":"960","endLine":99,"endColumn":19},{"ruleId":"957","severity":1,"message":"1062","line":109,"column":12,"nodeType":"959","messageId":"960","endLine":109,"endColumn":20},{"ruleId":"957","severity":1,"message":"1026","line":111,"column":12,"nodeType":"959","messageId":"960","endLine":111,"endColumn":16},{"ruleId":"957","severity":1,"message":"1063","line":8,"column":10,"nodeType":"959","messageId":"960","endLine":8,"endColumn":23},{"ruleId":"957","severity":1,"message":"978","line":24,"column":14,"nodeType":"959","messageId":"960","endLine":24,"endColumn":18},{"ruleId":"957","severity":1,"message":"978","line":14,"column":14,"nodeType":"959","messageId":"960","endLine":14,"endColumn":18},{"ruleId":"957","severity":1,"message":"978","line":16,"column":14,"nodeType":"959","messageId":"960","endLine":16,"endColumn":18},{"ruleId":"989","severity":1,"message":"990","line":96,"column":15,"nodeType":"991","endLine":96,"endColumn":39},{"ruleId":"957","severity":1,"message":"978","line":116,"column":14,"nodeType":"959","messageId":"960","endLine":116,"endColumn":18},{"ruleId":"957","severity":1,"message":"978","line":16,"column":14,"nodeType":"959","messageId":"960","endLine":16,"endColumn":18},{"ruleId":"989","severity":1,"message":"990","line":96,"column":15,"nodeType":"991","endLine":96,"endColumn":39},{"ruleId":"957","severity":1,"message":"978","line":123,"column":14,"nodeType":"959","messageId":"960","endLine":123,"endColumn":18},{"ruleId":"957","severity":1,"message":"1064","line":1,"column":17,"nodeType":"959","messageId":"960","endLine":1,"endColumn":26},{"ruleId":"957","severity":1,"message":"961","line":9,"column":11,"nodeType":"959","messageId":"960","endLine":9,"endColumn":12},{"ruleId":"957","severity":1,"message":"978","line":9,"column":14,"nodeType":"959","messageId":"960","endLine":9,"endColumn":18},{"ruleId":"989","severity":1,"message":"990","line":68,"column":15,"nodeType":"991","endLine":68,"endColumn":39},{"ruleId":"957","severity":1,"message":"986","line":1,"column":17,"nodeType":"959","messageId":"960","endLine":1,"endColumn":26},{"ruleId":"957","severity":1,"message":"1065","line":13,"column":22,"nodeType":"959","messageId":"960","endLine":13,"endColumn":33},{"ruleId":"989","severity":1,"message":"990","line":14,"column":13,"nodeType":"991","endLine":14,"endColumn":65},{"ruleId":"1066","severity":1,"message":"1067","line":8,"column":1,"nodeType":"1068","endLine":29,"endColumn":3},{"ruleId":"995","severity":1,"message":"996","line":10,"column":68,"nodeType":"997","messageId":"998","endLine":10,"endColumn":70},{"ruleId":"995","severity":1,"message":"996","line":10,"column":96,"nodeType":"997","messageId":"998","endLine":10,"endColumn":98},{"ruleId":"1066","severity":1,"message":"1067","line":5,"column":1,"nodeType":"1068","endLine":37,"endColumn":3},{"ruleId":"1066","severity":1,"message":"1067","line":14,"column":1,"nodeType":"1068","endLine":27,"endColumn":3},{"ruleId":"957","severity":1,"message":"974","line":1,"column":17,"nodeType":"959","messageId":"960","endLine":1,"endColumn":25},{"ruleId":"957","severity":1,"message":"961","line":14,"column":11,"nodeType":"959","messageId":"960","endLine":14,"endColumn":12},{"ruleId":"957","severity":1,"message":"978","line":14,"column":14,"nodeType":"959","messageId":"960","endLine":14,"endColumn":18},{"ruleId":"962","severity":1,"message":"1069","line":22,"column":6,"nodeType":"964","endLine":22,"endColumn":8,"suggestions":"1070"},{"ruleId":"962","severity":1,"message":"1071","line":27,"column":6,"nodeType":"964","endLine":27,"endColumn":23,"suggestions":"1072"},{"ruleId":"962","severity":1,"message":"1073","line":19,"column":6,"nodeType":"964","endLine":19,"endColumn":13,"suggestions":"1074"},{"ruleId":"962","severity":1,"message":"1075","line":26,"column":6,"nodeType":"964","endLine":26,"endColumn":8,"suggestions":"1076"},{"ruleId":"962","severity":1,"message":"1077","line":17,"column":6,"nodeType":"964","endLine":17,"endColumn":8,"suggestions":"1078"},{"ruleId":"962","severity":1,"message":"1077","line":21,"column":6,"nodeType":"964","endLine":21,"endColumn":40,"suggestions":"1079"},{"ruleId":"962","severity":1,"message":"1080","line":17,"column":6,"nodeType":"964","endLine":17,"endColumn":8,"suggestions":"1081"},{"ruleId":"957","severity":1,"message":"987","line":14,"column":9,"nodeType":"959","messageId":"960","endLine":14,"endColumn":18},{"ruleId":"957","severity":1,"message":"1082","line":5,"column":24,"nodeType":"959","messageId":"960","endLine":5,"endColumn":29},{"ruleId":"957","severity":1,"message":"1083","line":6,"column":10,"nodeType":"959","messageId":"960","endLine":6,"endColumn":19},{"ruleId":"957","severity":1,"message":"987","line":13,"column":9,"nodeType":"959","messageId":"960","endLine":13,"endColumn":18},{"ruleId":"962","severity":1,"message":"1084","line":21,"column":6,"nodeType":"964","endLine":21,"endColumn":8,"suggestions":"1085"},"no-native-reassign",["1086"],"no-negated-in-lhs",["1087"],"no-unused-vars","'PrivateRoute' is defined but never used.","Identifier","unusedVar","'t' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["1088"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["1089","1090"],["1091"],"'courses' is defined but never used.",["1092"],"'useState' is defined but never used.",["1093"],["1094"],["1095"],"'i18n' is assigned a value but never used.","'searchValue' is assigned a value but never used.","'setSearchValue' is assigned a value but never used.",["1096"],"'Redirect' is defined but never used.","'useLocation' is defined but never used.",["1097"],["1098"],"'useEffect' is defined but never used.","'urlParams' is assigned a value but never used.",["1099"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ProfilePassword' is assigned a value but never used.",["1100"],["1101"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'NavLink' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'query' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'logit' and 'props'. Either include them or remove the dependency array. Mutable values like 'modalRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["1102"],"'Fragment' is defined but never used.",["1103"],"'filterOneValue' is assigned a value but never used.","'filterTwoValue' is assigned a value but never used.","'filterThreeValue' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has a missing dependency: 'input'. Either include it or remove the dependency array.",["1104"],"React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["1105"],"'useStore' is defined but never used.","'Submenu' is defined but never used.","'ActivitiesContainer' is defined but never used.",["1106"],"'disableDefSupervisorOption' is assigned a value but never used.","'disableDefSupervisorOptionText' is assigned a value but never used.","'supervisorsOptions' is assigned a value but never used.","'type' is assigned a value but never used.","'supervisor' is assigned a value but never used.",["1107"],"'useCallback' is defined but never used.","'useReducer' is defined but never used.","'useDispatch' is defined but never used.",["1108"],"React Hook useEffect has missing dependencies: 'isLearner', 'profile.employeeId', 'profile.organizationId', 'profile.userId', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1109"],"'planeticon' is defined but never used.","'faPlus' is defined but never used.","'editMode' is assigned a value but never used.","'StyledProgressSpan' is assigned a value but never used.",["1110"],"React Hook useEffect has a missing dependency: 't'. Either include it or remove the dependency array.",["1111"],"'file' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'profile.organizationId', 'props', and 'urlParams.programId'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1112"],"'useRef' is defined but never used.","'departament' is assigned a value but never used.",["1086"],["1087"],"'fileInputRef' is assigned a value but never used.","'maxProgramsToView' is assigned a value but never used.",["1113"],"'USER_ROLES' is defined but never used.",["1114"],"'activities' is assigned a value but never used.","'AddCourse' is defined but never used.","'EditCourse' is defined but never used.","'repeatOption' is assigned a value but never used.","'monthOption' is assigned a value but never used.","'dateOption' is assigned a value but never used.","'st' is assigned a value but never used.","'daysOfWeek' is assigned a value but never used.","'everyOpt' is assigned a value but never used.","'getOneProgram' is defined but never used.","'Component' is defined but never used.","'setProgress' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has missing dependencies: 'profile.organizationId', 'props', and 'urlParams.courseId'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1115"],"React Hook useEffect has missing dependencies: 'courses.currentCourse?.courseId', 'courses.loading', 'profile.organizationId', 'props', and 'urlParams.courseId'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1116"],"React Hook useEffect has a missing dependency: 'getFiles'. Either include it or remove the dependency array. If 'getFiles' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1117"],"React Hook useEffect has a missing dependency: 'defaultImage'. Either include it or remove the dependency array. If 'setFiles' needs the current value of 'defaultImage', you can also switch to useReducer instead of useState and read 'defaultImage' in the reducer.",["1118"],"React Hook useEffect has missing dependencies: 'params.courseId', 'profile.organizationId', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1119"],["1120"],"React Hook useEffect has missing dependencies: 'profile.organizationId', 'props', and 'urlParams.lessonId'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1121"],"'Field' is defined but never used.","'TextField' is defined but never used.","React Hook useEffect has a missing dependency: 'props.handleClose'. Either include it or remove the dependency array.",["1122"],"no-global-assign","no-unsafe-negation",{"desc":"1123","fix":"1124"},{"messageId":"1125","fix":"1126","desc":"1127"},{"messageId":"1128","fix":"1129","desc":"1130"},{"desc":"1123","fix":"1131"},{"desc":"1123","fix":"1132"},{"desc":"1133","fix":"1134"},{"desc":"1135","fix":"1136"},{"desc":"1123","fix":"1137"},{"desc":"1123","fix":"1138"},{"desc":"1123","fix":"1139"},{"desc":"1123","fix":"1140"},{"desc":"1123","fix":"1141"},{"desc":"1123","fix":"1142"},{"desc":"1143","fix":"1144"},{"desc":"1145","fix":"1146"},{"desc":"1123","fix":"1147"},{"desc":"1148","fix":"1149"},{"desc":"1150","fix":"1151"},{"desc":"1123","fix":"1152"},{"desc":"1123","fix":"1153"},{"desc":"1123","fix":"1154"},{"desc":"1155","fix":"1156"},{"desc":"1123","fix":"1157"},{"desc":"1158","fix":"1159"},{"desc":"1160","fix":"1161"},{"desc":"1160","fix":"1162"},{"desc":"1123","fix":"1163"},{"desc":"1164","fix":"1165"},{"desc":"1166","fix":"1167"},{"desc":"1168","fix":"1169"},{"desc":"1170","fix":"1171"},{"desc":"1172","fix":"1173"},{"desc":"1174","fix":"1175"},{"desc":"1176","fix":"1177"},{"desc":"1178","fix":"1179"},"Update the dependencies array to be: [props]",{"range":"1180","text":"1181"},"removeEscape",{"range":"1182","text":"1183"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"1184","text":"1185"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"1186","text":"1181"},{"range":"1187","text":"1181"},"Update the dependencies array to be: [props, props.profile.employeeId]",{"range":"1188","text":"1189"},"Update the dependencies array to be: [props, props.profile.joinedCourses]",{"range":"1190","text":"1191"},{"range":"1192","text":"1181"},{"range":"1193","text":"1181"},{"range":"1194","text":"1181"},{"range":"1195","text":"1181"},{"range":"1196","text":"1181"},{"range":"1197","text":"1181"},"Update the dependencies array to be: [props, props.profile]",{"range":"1198","text":"1199"},"Update the dependencies array to be: [logit, props]",{"range":"1200","text":"1201"},{"range":"1202","text":"1181"},"Update the dependencies array to be: [input]",{"range":"1203","text":"1204"},"Update the dependencies array to be: [props.location.path, props.isAuthenticated, props.history]",{"range":"1205","text":"1206"},{"range":"1207","text":"1181"},{"range":"1208","text":"1181"},{"range":"1209","text":"1181"},"Update the dependencies array to be: [isLearner, profile.employeeId, profile.organizationId, profile.userId, props]",{"range":"1210","text":"1211"},{"range":"1212","text":"1181"},"Update the dependencies array to be: [props.activity, t]",{"range":"1213","text":"1214"},"Update the dependencies array to be: [profile.organizationId, props, urlParams.programId]",{"range":"1215","text":"1216"},{"range":"1217","text":"1216"},{"range":"1218","text":"1181"},"Update the dependencies array to be: [profile.organizationId, props, urlParams.courseId]",{"range":"1219","text":"1220"},"Update the dependencies array to be: [courses.currentCourse?.courseId, courses.loading, courses.success, profile.organizationId, props, urlParams.courseId]",{"range":"1221","text":"1222"},"Update the dependencies array to be: [files, getFiles]",{"range":"1223","text":"1224"},"Update the dependencies array to be: [defaultImage]",{"range":"1225","text":"1226"},"Update the dependencies array to be: [params.courseId, profile.organizationId, props]",{"range":"1227","text":"1228"},"Update the dependencies array to be: [courses.loading, courses.success, params.courseId, profile.organizationId, props]",{"range":"1229","text":"1230"},"Update the dependencies array to be: [profile.organizationId, props, urlParams.lessonId]",{"range":"1231","text":"1232"},"Update the dependencies array to be: [props.handleClose]",{"range":"1233","text":"1234"},[904,906],"[props]",[202,203],"",[202,202],"\\",[400,402],[608,610],[535,561],"[props, props.profile.employeeId]",[647,676],"[props, props.profile.joinedCourses]",[586,588],[1232,1234],[2154,2156],[2074,2076],[670,672],[572,574],[1002,1017],"[props, props.profile]",[2175,2193],"[logit, props]",[2121,2123],[612,614],"[input]",[417,461],"[props.location.path, props.isAuthenticated, props.history]",[494,496],[8240,8242],[1601,1603],[1323,1325],"[isLearner, profile.employeeId, profile.organizationId, profile.userId, props]",[1398,1400],[1894,1910],"[props.activity, t]",[1348,1350],"[profile.organizationId, props, urlParams.programId]",[597,599],[1368,1370],[861,863],"[profile.organizationId, props, urlParams.courseId]",[1042,1059],"[courses.currentCourse?.courseId, courses.loading, courses.success, profile.organizationId, props, urlParams.courseId]",[828,835],"[files, getFiles]",[958,960],"[defaultImage]",[510,512],"[params.courseId, profile.organizationId, props]",[647,681],"[courses.loading, courses.success, params.courseId, profile.organizationId, props]",[516,518],"[profile.organizationId, props, urlParams.lessonId]",[792,794],"[props.handleClose]"]