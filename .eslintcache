[{"/home/dev/Рабочий стол/Eugen/lxp-frontend/src/index.js":"1","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/reportWebVitals.js":"2","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Redux/reduxStore.js":"3","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Utils/i18n.js":"4","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/App.js":"5","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Common/Preloader/Preloader.jsx":"6","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Redux/commonReducer.js":"7","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Redux/coursesReducer.js":"8","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Redux/activitiesReducer.js":"9","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Redux/notificationsReducer.js":"10","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Redux/programsReducer.js":"11","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Redux/userReducer.js":"12","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Courses/CoursesContainer.jsx":"13","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Common/LoadDataRouter/LoadDataRouter.jsx":"14","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Home/HomeContainer.jsx":"15","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Navbar/NavbarContainer.jsx":"16","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Activites/ActivitiesContainer.jsx":"17","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Reports/ReportsContainer.jsx":"18","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Activity/AddActivity/AddActivity.jsx":"19","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Profile/Profile.jsx":"20","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Auth/Login/Login.jsx":"21","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Auth/Forgot/ForgotPassword.jsx":"22","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Activity/Activity.jsx":"23","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Api/api.js":"24","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Common/FormControlls/FormControlls.js":"25","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Utils/validators.js":"26","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Home/Home.jsx":"27","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Courses/Courses.jsx":"28","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Reports/Reports.jsx":"29","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Navbar/Navbar.jsx":"30","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Activites/Activities.jsx":"31","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Common/ProgressBar/ProgressBar.jsx":"32","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Common/Cutsom/Select/CustomSelect.jsx":"33","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Profile/Password/ProfilePassword.jsx":"34","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Profile/Info/ProfileInfo.jsx":"35","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Profile/Email/ProfileEmail.jsx":"36","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Profile/Notifications/ProfileNotifications.jsx":"37","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Assets/Images/searchicon.js":"38","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Assets/Images/homeicon.js":"39","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Assets/Images/notification.js":"40","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Assets/Images/courses.js":"41","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Assets/Images/activities.js":"42","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Assets/Images/myreport.js":"43","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Assets/Images/programicon.js":"44","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Courses/CourseItemView/CourseItemView.jsx":"45","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Home/Statistic/Statistic.jsx":"46","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Reports/Filter/Filter.jsx":"47","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Navbar/Burger/Burger.jsx":"48","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Activites/ActivityItem/ActivityItem.jsx":"49","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Navbar/ProfileMenu/ProfileMenu.jsx":"50","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Common/SearchModal/SearchModal.jsx":"51","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Reports/UserInfo/UserInfo.jsx":"52","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Home/Courses/Courses.jsx":"53","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Home/Activities/HomeActivities.jsx":"54","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Assets/Images/clock.js":"55","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Assets/Images/logout_icon.js":"56","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Assets/Images/profile_settings_icon.js":"57","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Navbar/Burger/BurgerMenu.jsx":"58","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Assets/Images/empty_state_icon.js":"59","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Home/Courses/CourseItem/CourseItem.jsx":"60","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Reports/ReportMain/ReportMain.jsx":"61","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Reports/ReportDetails/ReportDetails.jsx":"62"},{"size":731,"mtime":1609834616326,"results":"63","hashOfConfig":"64"},{"size":362,"mtime":1609834616326,"results":"65","hashOfConfig":"64"},{"size":863,"mtime":1609834616326,"results":"66","hashOfConfig":"64"},{"size":532,"mtime":1609834616326,"results":"67","hashOfConfig":"64"},{"size":3116,"mtime":1609860497110,"results":"68","hashOfConfig":"64"},{"size":303,"mtime":1609834616322,"results":"69","hashOfConfig":"64"},{"size":1268,"mtime":1609834616326,"results":"70","hashOfConfig":"64"},{"size":1295,"mtime":1609843832515,"results":"71","hashOfConfig":"64"},{"size":1639,"mtime":1609834616326,"results":"72","hashOfConfig":"64"},{"size":1609,"mtime":1609834616326,"results":"73","hashOfConfig":"64"},{"size":867,"mtime":1609834616326,"results":"74","hashOfConfig":"64"},{"size":2893,"mtime":1609843832515,"results":"75","hashOfConfig":"64"},{"size":923,"mtime":1609834616322,"results":"76","hashOfConfig":"64"},{"size":1618,"mtime":1609843832511,"results":"77","hashOfConfig":"64"},{"size":1695,"mtime":1609843832515,"results":"78","hashOfConfig":"64"},{"size":1343,"mtime":1609843832515,"results":"79","hashOfConfig":"64"},{"size":1733,"mtime":1609834616322,"results":"80","hashOfConfig":"64"},{"size":1532,"mtime":1609855848833,"results":"81","hashOfConfig":"64"},{"size":4204,"mtime":1609838601968,"results":"82","hashOfConfig":"64"},{"size":2439,"mtime":1609860042919,"results":"83","hashOfConfig":"64"},{"size":3111,"mtime":1609834616322,"results":"84","hashOfConfig":"64"},{"size":2895,"mtime":1609843832511,"results":"85","hashOfConfig":"64"},{"size":7476,"mtime":1609834616322,"results":"86","hashOfConfig":"64"},{"size":1925,"mtime":1609843832511,"results":"87","hashOfConfig":"64"},{"size":910,"mtime":1609838601968,"results":"88","hashOfConfig":"64"},{"size":600,"mtime":1609860042919,"results":"89","hashOfConfig":"64"},{"size":1870,"mtime":1609834616322,"results":"90","hashOfConfig":"64"},{"size":3048,"mtime":1609834616322,"results":"91","hashOfConfig":"64"},{"size":855,"mtime":1609946211032,"results":"92","hashOfConfig":"64"},{"size":5897,"mtime":1609843832515,"results":"93","hashOfConfig":"64"},{"size":4002,"mtime":1609834616322,"results":"94","hashOfConfig":"64"},{"size":717,"mtime":1609834616322,"results":"95","hashOfConfig":"64"},{"size":1485,"mtime":1609838601968,"results":"96","hashOfConfig":"64"},{"size":1953,"mtime":1609860042919,"results":"97","hashOfConfig":"64"},{"size":2278,"mtime":1609860042919,"results":"98","hashOfConfig":"64"},{"size":2117,"mtime":1609860042919,"results":"99","hashOfConfig":"64"},{"size":1473,"mtime":1609860042919,"results":"100","hashOfConfig":"64"},{"size":728,"mtime":1609834616322,"results":"101","hashOfConfig":"64"},{"size":1250,"mtime":1609834616322,"results":"102","hashOfConfig":"64"},{"size":1007,"mtime":1609834616322,"results":"103","hashOfConfig":"64"},{"size":1441,"mtime":1609834616322,"results":"104","hashOfConfig":"64"},{"size":1762,"mtime":1609834616322,"results":"105","hashOfConfig":"64"},{"size":657,"mtime":1609834616322,"results":"106","hashOfConfig":"64"},{"size":1534,"mtime":1609834616322,"results":"107","hashOfConfig":"64"},{"size":1380,"mtime":1609834616322,"results":"108","hashOfConfig":"64"},{"size":2950,"mtime":1609843832515,"results":"109","hashOfConfig":"64"},{"size":1990,"mtime":1609917252306,"results":"110","hashOfConfig":"64"},{"size":1530,"mtime":1609834616326,"results":"111","hashOfConfig":"64"},{"size":3065,"mtime":1609834616322,"results":"112","hashOfConfig":"64"},{"size":2132,"mtime":1609834616326,"results":"113","hashOfConfig":"64"},{"size":2961,"mtime":1609838601968,"results":"114","hashOfConfig":"64"},{"size":1204,"mtime":1609850563649,"results":"115","hashOfConfig":"64"},{"size":1610,"mtime":1609843832515,"results":"116","hashOfConfig":"64"},{"size":1668,"mtime":1609834616322,"results":"117","hashOfConfig":"64"},{"size":573,"mtime":1609834616322,"results":"118","hashOfConfig":"64"},{"size":1568,"mtime":1609834616322,"results":"119","hashOfConfig":"64"},{"size":1206,"mtime":1609834616322,"results":"120","hashOfConfig":"64"},{"size":1744,"mtime":1609834616326,"results":"121","hashOfConfig":"64"},{"size":1071,"mtime":1609834616322,"results":"122","hashOfConfig":"64"},{"size":1395,"mtime":1609834616322,"results":"123","hashOfConfig":"64"},{"size":5365,"mtime":1609944037227,"results":"124","hashOfConfig":"64"},{"size":1243,"mtime":1609946791603,"results":"125","hashOfConfig":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},"fyckl3",{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"128"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"128"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"128"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"128"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"128"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"128"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"128"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"128"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"128"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"128"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"128"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"128"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"128"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"128"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"128"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"128"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"128"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"128"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"128"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"128"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"128"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"128"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"128"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"128"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"128"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"128"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"128"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"128"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"128"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"128"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"128"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"128"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"128"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"128"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"283","messages":"284","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/dev/Рабочий стол/Eugen/lxp-frontend/src/index.js",[],["285","286"],"/home/dev/Рабочий стол/Eugen/lxp-frontend/src/reportWebVitals.js",[],"/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Redux/reduxStore.js",[],"/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Utils/i18n.js",[],"/home/dev/Рабочий стол/Eugen/lxp-frontend/src/App.js",["287"],"import React from \"react\";\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Activity from \"./Components/Activity/Activity\";\nimport LoadDataRouter from \"./Components/Common/LoadDataRouter/LoadDataRouter\";\nimport CoursesContainer from \"./Components/Courses/CoursesContainer\";\nimport HomeContainer from \"./Components/Home/HomeContainer\";\nimport NavbarContainer from \"./Components/Navbar/NavbarContainer\";\nimport styled from \"styled-components\";\nimport { useTranslation } from \"react-i18next\";\nimport { connect } from \"react-redux\";\nimport { setDirection } from \"./Redux/commonReducer\";\nimport ActivitiesContainer from \"./Components/Activites/ActivitiesContainer\";\nimport Login from \"./Components/Auth/Login/Login\";\nimport AddActivity from \"./Components/Activity/AddActivity/AddActivity\";\nimport ForgotPassword from \"./Components/Auth/Forgot/ForgotPassword\";\nimport ReportsContainer from \"./Components/Reports/ReportsContainer\";\nimport Profile from \"./Components/Profile/Profile\";\n\nconst StyledContentContainer = styled.div`\n  width: 100%;\n  direction: ${({ direction }) => direction};\n`;\n\nconst App = (props) => {\n  const { t, i18n } = useTranslation();\n\n  const changeLanguage = (language) => {\n    switch (language) {\n      case \"en\": {\n        props.setDirection(\"ltr\");\n        break;\n      }\n      case \"ar\": {\n        props.setDirection(\"rtl\");\n        break;\n      }\n      default: {\n        props.setDirection(\"ltr\");\n        break;\n      }\n    }\n    i18n.changeLanguage(language);\n  };\n\n  return (\n    <BrowserRouter>\n      <StyledContentContainer direction={props.direction}>\n        <NavbarContainer changeLanguage={changeLanguage} />\n        <Switch>\n          <Route exact path=\"/\">\n            <Redirect to=\"/home\" />\n          </Route>\n          <Route\n            path=\"/home\"\n            render={() => <LoadDataRouter Component={HomeContainer} />}\n          />\n          <Route\n            path=\"/courses\"\n            render={() => <LoadDataRouter Component={CoursesContainer} />}\n          />\n          <Route\n            path=\"/activities/view/:activityId\"\n            render={() => <LoadDataRouter Component={Activity} />}\n          />\n          <Route\n            exact\n            path=\"/activities\"\n            render={() => <LoadDataRouter Component={ActivitiesContainer} />}\n          />\n          <Route\n            path=\"/activities/add\"\n            render={() => <LoadDataRouter Component={AddActivity} />}\n          />\n          <Route\n            path=\"/profile\"\n            render={() => <LoadDataRouter Component={Profile} />}\n          />\n          <Route path=\"/login\" render={() => <Login />} />\n          <Route path=\"/forgot_password\" render={() => <ForgotPassword />} />\n          <Route\n            path=\"/report\"\n            render={() => <LoadDataRouter Component={ReportsContainer} />}\n          />\n        </Switch>\n      </StyledContentContainer>\n    </BrowserRouter>\n  );\n};\n\nlet mapStateToProps = (state) => ({\n  direction: state.common.direction,\n});\n\nexport default connect(mapStateToProps, {\n  setDirection,\n})(App);\n","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Common/Preloader/Preloader.jsx",["288"],"import React from 'react';\nimport preloader from '../../../Assets/Common/preloader.svg';\nimport classes from './Preloader.module.css';\n\nconst Preloader = (props) => {\n    return(\n        <div className={classes.main}>\n            <img src={preloader}/>\n        </div>\n    );\n}\n\nexport default Preloader;","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Redux/commonReducer.js",[],"/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Redux/coursesReducer.js",["289","290"],"import { coursesApi } from '../Api/api';\nimport img1 from '../Assets/Images/Mocks/img1.jpg';\nimport img2 from '../Assets/Images/Mocks/img2.jpg';\nimport { setIsFetching } from './commonReducer';\n\nconst SET_COURSES_DATA = 'SET_COURSES_DATA';\nconst SET_JOINED_COURSES = 'SET_JOINED_COURSES';\n\nlet initialState = {\n    courses: [],\n    page: 1,\n    take: 20,\n    joinedCourses: []\n}\n\nconst coursesReducer = (state = initialState, action) => {\n    switch(action.type){\n        case SET_COURSES_DATA: {\n            return { ...state, courses: action.courses }\n        }\n        case SET_JOINED_COURSES: {\n            return { ...state, joinedCourses: action.joinedCourses }\n        }\n        default:\n            return state;\n    }\n}\n\nexport const setCoursesData = (courses) => ({\n    type: SET_COURSES_DATA, courses\n});\nexport const setJoinedCourses = (joinedCourses) => ({\n    type: SET_JOINED_COURSES, joinedCourses\n});\n\nexport const getCourses = (organizationId, page, take) => async (dispatch) => {\n    dispatch(setIsFetching(true));\n    try{\n        let respnose = await coursesApi.getCourses(organizationId, page, take);\n        dispatch([setCoursesData(respnose.courses), setIsFetching(false)]);\n    }catch(err){\n        dispatch(setIsFetching(false));\n    }\n}\n\nexport default coursesReducer;","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Redux/activitiesReducer.js",[],"/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Redux/notificationsReducer.js",[],"/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Redux/programsReducer.js",[],"/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Redux/userReducer.js",[],"/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Courses/CoursesContainer.jsx",["291"],"import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Courses from './Courses';\nimport { getCourses } from '../../Redux/coursesReducer';\nimport Preloader from '../Common/Preloader/Preloader';\n\nconst CoursesContainer = (props) => {\n    useEffect(()=>{\n        if(props.page && props.take){\n            props.getCourses(props.user.organizationId, props.page, props.take);\n        }\n    },[]);\n    return(\n        <>\n            {props.isFetching ? <Preloader/> :\n            <Courses courses={props.courses} direction={props.direction}/>}\n        </>\n        \n    );\n}\n\nlet mapStateToProps = (state) => ({\n    courses: state.courses.courses,\n    user: state.user.user,\n    isFetching: state.common.isFetching,\n    page: state.courses.page,\n    take: state.courses.take,\n    direction: state.common.direction\n});\n\nexport default connect(mapStateToProps, {\n    getCourses\n})(CoursesContainer);","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Common/LoadDataRouter/LoadDataRouter.jsx",["292","293","294"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { setCurrentRoute } from '../../../Redux/commonReducer';\nimport { getUserProfile, getProfile } from '../../../Redux/userReducer';\nimport Login from '../../Auth/Login/Login';\nimport { getUnreadNotifications } from '../../../Redux/notificationsReducer';\n\nconst LoadDataRouter = ({Component, isAuth, setCurrentRoute,\n                        currentRoute, getUserProfile, getProfile, isStartData,\n                        getUnreadNotifications, user, limit, employeeId}) => {\n    useEffect(()=>{\n        setCurrentRoute(window.location.pathname);\n        if((localStorage.usertoken || sessionStorage.usertoken) && !isStartData){\n            if(employeeId){\n                getUserProfile(employeeId);\n            }else{\n                getProfile(localStorage.usertoken || sessionStorage.usertoken);\n            }\n            getUnreadNotifications(limit, user.organizationId);\n        }   \n    },[employeeId]);\n    return(\n        <>\n            {(localStorage.usertoken || sessionStorage.usertoken) ? <Component/> : <Redirect to=\"/login\"/>}\n        </>\n        \n    )\n}\n\nlet mapStateToProps = (state) => ({\n    isAuth: state.user.isAuth,\n    currentRoute: state.common.currentRoute,\n    isStartData: state.user.isStartData,\n    user: state.user.user,\n    limit: state.notifications.limit,\n    employeeId: state.user.employeeId\n});\n\nexport default connect(mapStateToProps, {\n    setCurrentRoute,\n    getUserProfile,\n    getProfile,\n    getUnreadNotifications\n})(LoadDataRouter);","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Home/HomeContainer.jsx",["295","296","297"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Preloader from '../Common/Preloader/Preloader';\nimport Home from './Home';\nimport { getCourses, setJoinedCourses } from '../../Redux/coursesReducer';\nimport { getActivities } from '../../Redux/activitiesReducer';\nimport { getPrograms } from '../../Redux/programsReducer';\n\nconst HomeContainer = (props) => {\n    useEffect(()=>{\n        if(props.isAuth && props.user.employeeId){\n            props.getActivities(props.user.employeeId, props.user.userId, props.user.organizationId);\n            props.getPrograms(props.user.organizationId);\n        }\n    },[props.isAuth]);\n\n    useEffect(()=>{\n        props.setJoinedCourses(props.user.joinedCourses);\n    },[props.user.joinedCourses]);\n    \n    return(\n        <>\n            {props.isFetching && <Preloader/>}\n            {props.isAuth && <Home user={props.user}\n                                    courses={props.courses}\n                                    activities={props.activities}\n                                    direction={props.direction}\n                                    programs={props.programs}/>}\n        </>\n        \n    );\n}\n\nlet mapStateToProps = (state) => ({\n    isFetching: state.common.isFetching,\n    user: state.user.user,\n    isAuth: state.user.isAuth,\n    courses: state.courses.joinedCourses,\n    activities: state.activities.activities,\n    page: state.courses.page,\n    take: state.courses.take,\n    direction: state.common.direction,\n    programs: state.programs.programs\n});\n\nexport default connect(mapStateToProps, {\n    getCourses,\n    getActivities,\n    getPrograms,\n    setJoinedCourses\n})(HomeContainer);","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Navbar/NavbarContainer.jsx",["298","299"],"import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport Navbar from './Navbar';\n\nconst NavbarContainer = (props) => {\n    const [isOpenSearchModal, setIsOpenSearchModal] = useState(false);\n    const [isOpenNotificationsModal, setIsOpenNotificationsModal] = useState(false);\n    return(\n        <>\n        {(props.currentRoute != \"/login\" && props.currentRoute != \"/forgot_password\") &&\n        <Navbar user={props.user} \n                changeLanguage={props.changeLanguage}\n                direction={props.direction}\n                setIsOpenSearchModal={setIsOpenSearchModal}\n                isOpenSearchModal={isOpenSearchModal}\n                totalUnreadNotificationsCount={props.totalUnreadNotificationsCount}\n                unreadNotifications={props.unreadNotifications}\n                setIsOpenNotificationsModal={setIsOpenNotificationsModal}\n                isOpenNotificationsModal={isOpenNotificationsModal}/>}\n        </>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n    user: state.user.user,\n    direction: state.common.direction,\n    currentRoute: state.common.currentRoute,\n    unreadNotifications: state.notifications.unreadNotifications,\n    totalUnreadNotificationsCount: state.notifications.totalUnreadNotificationsCount\n});\n\nexport default connect(mapStateToProps, {})(NavbarContainer);","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Activites/ActivitiesContainer.jsx",["300"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Activities from './Activities';\nimport { getActivities } from '../../Redux/activitiesReducer';\nimport Preloader from '../Common/Preloader/Preloader';\nimport { useLayoutEffect } from 'react';\n\nconst ActivitiesContainer = (props) => {\n    useEffect(()=>{\n        if(props.user.employeeId){\n            props.getActivities(props.user.employeeId, props.user.userId, props.user.organizationId);\n        }  \n    },[]);\n\n    const [size, setSize] = useState([window.outerWidth, window.innerHeight]);\n    const [blockWidth, setBlockWidth] = useState(49);\n\n    useLayoutEffect(()=>{\n        function updateSize(){\n            setSize([window.outerWidth, window.innerHeight]);\n        }\n        window.addEventListener('resize', updateSize);\n        updateSize();\n        return () => window.removeEventListener('resize', updateSize);\n    },[]);\n\n    useEffect(()=>{\n        if(size[0] > 700){\n            setBlockWidth(49);\n        }else{\n            setBlockWidth(100);\n        }\n    },[size]);\n\n\n    return(\n        <>\n            {props.isFetching ? <Preloader/> :\n            <>\n                {props.isAuth && \n                    <Activities activities={props.activities}\n                                direction={props.direction}\n                                blockWidth={blockWidth}/>}\n            </>}\n        </>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n    isFetching: state.common.isFetching,\n    user: state.user.user,\n    activities: state.activities.activities,\n    isAuth: state.user.isAuth,\n    direction: state.common.direction\n});\n\nexport default connect(mapStateToProps, {\n    getActivities\n})(ActivitiesContainer);","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Reports/ReportsContainer.jsx",["301","302"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Preloader from '../Common/Preloader/Preloader';\nimport Reports from './Reports';\nimport { getCourses } from '../../Redux/coursesReducer';\nimport { getActivities } from '../../Redux/activitiesReducer';\nimport { getPrograms } from '../../Redux/programsReducer';\n\nconst ReportsContainer = (props) => {\n    useEffect(()=>{\n        if(props.isAuth){\n            props.getActivities(props.user.employeeId, props.user.userId, props.user.organizationId);\n            props.getPrograms(props.user.organizationId);\n        }\n    },[props.isAuth]);\n\n    return(\n        <>\n            {props.isFetching && <Preloader/>}\n            {props.isAuth && <Reports user={props.user}\n                                    courses={props.courses}\n                                    activities={props.activities}\n                                    direction={props.direction}\n                                    programs={props.programs}/>}\n        </>\n        \n    );\n}\n\nlet mapStateToProps = (state) => ({\n    isFetching: state.common.isFetching,\n    user: state.user.user,\n    isAuth: state.user.isAuth,\n    courses: state.courses.joinedCourses,\n    activities: state.activities.currentActivity,\n    page: state.courses.page,\n    take: state.courses.take,\n    direction: state.common.direction,\n    programs: state.programs.programs\n});\n\nexport default connect(mapStateToProps, {\n    getCourses,\n    getActivities,\n    getPrograms\n})(ReportsContainer);","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Activity/AddActivity/AddActivity.jsx",["303","304","305"],"import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport classes from './AddActivity.module.css';\nimport { useTranslation } from 'react-i18next';\nimport { AuthInput, TextAreaCustom } from '../../Common/FormControlls/FormControlls';\nimport { required } from '../../../Utils/validators';\nimport CustomSelect from '../../Common/Cutsom/Select/CustomSelect';\nimport { NavLink } from 'react-router-dom';\n\nconst AddActivityForm = (props) => {\n    const {t, i18n} = useTranslation();\n    let maxLength = 300;\n\n    const [charactersLeft, setCharactersLeft] = useState(maxLength);\n\n    let handleTextArea = (e) => {\n        setCharactersLeft(maxLength - e.target.value.length);\n    }\n\n    let types = [t(\"addActivity.typeDef\"), \"type1\", \"type2\", \"type3\"];\n\n    return(\n        <form onSubmit={props.handleSubmit} className={classes.form}>\n            <div className={classes.field}>\n                <label className={classes.fieldLabel}>{t(\"addActivity.name\")}</label>\n                <Field component={AuthInput} placeholder={t(\"addActivity.namePlaceholder\")} name=\"name\"\n                    validate={[required]}/>\n            </div>\n            <div className={classes.field}>\n                <label className={classes.fieldLabel}>{t(\"addActivity.link\")}</label>\n                <Field component={AuthInput} name=\"link\"\n                    validate={[required]}/>\n            </div>\n            <div className={classes.field}>\n                <label className={classes.fieldLabel}>{t(\"addActivity.type\")}</label>\n                <p></p>\n                <CustomSelect options={types} setFunction={props.setType} width={66}/>\n            </div>\n            <div className={classes.field}>\n                <label className={classes.fieldLabel}>{t(\"addActivity.description\")}</label>\n                <Field component={TextAreaCustom} name=\"description\"\n                    validate={[required]} maxLength={maxLength} left={charactersLeft} rows={5} onChange={handleTextArea}/>\n            </div>\n            <div className={classes.field}>\n                <label className={classes.fieldLabel}>{t(\"addActivity.visibility\")}</label>\n                <div className={classes.radios}>\n                    <div className={classes.visibilityBlock}>\n                        <input type=\"radio\" name=\"visibility\" id=\"public\" onChange={e=>{props.setVisibility(e.target.value)}} value=\"public\"/>\n                        <label htmlFor={\"public\"}>Public</label>\n                        <div className={classes.check}></div>\n                    </div>\n                    <div className={classes.visibilityBlock}>\n                        <input type=\"radio\" name=\"visibility\" id=\"private\" checked onChange={e=>{props.setVisibility(e.target.value)}} value=\"private\"/>\n                        <label htmlFor={\"private\"}>Private</label>\n                        <div className={classes.check}></div>\n                    </div>\n                </div>\n            </div>\n            <div className={classes.fieldBut}>\n                <button>{t(\"addActivity.addActivity\")}</button>\n                <NavLink to=\"/activities\">{t(\"addActivity.cancel\")}</NavLink>\n            </div>\n        </form>\n    );\n}\n\nconst AddActivityReduxForm = reduxForm({form: 'addActivity'})(AddActivityForm);\n\n\nconst AddActivity = (props) => {\n    const {t, i18n} = useTranslation();\n    const [type, setType] = useState(\"\");\n    const [visibility, setVisibility] = useState(\"private\");\n\n    let onSubmit = (formData) => {\n        console.log(formData);\n\n    }\n    return(\n        <div className={classes.main}>\n            <div className={classes.header}>\n                <div className={classes.headerContainer}>\n                    <h1>{t(\"addActivity.title\")}</h1>\n                </div>\n            </div>\n            <div className={classes.formContainer}>\n                <AddActivityReduxForm onSubmit={onSubmit} setType={setType} visibility={visibility} setVisibility={setVisibility}/>\n            </div>\n        </div>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n    isFetching: state.common.isFetching,\n})\n\nexport default connect(mapStateToProps, {\n\n})(AddActivity);\n\n","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Profile/Profile.jsx",["306"],"import React from 'react';\nimport { connect } from 'react-redux';\nimport classes from './Profile.module.css';\nimport { useTranslation } from 'react-i18next';\nimport { NavLink, Redirect, Route } from 'react-router-dom';\nimport ProfileInfo from './Info/ProfileInfo';\nimport ProfileEmail from './Email/ProfileEmail';\nimport ProfilePassword from './Password/ProfilePassword';\nimport ProfileNotifications from './Notifications/ProfileNotifications';\n\nconst Profile = (props) => {\n    const {t, i18n} = useTranslation();\n    return(\n        <div className={classes.main}>\n            <div className={classes.container}>\n                <h1>{t(\"profile.title\")}</h1>\n                <div className={classes.body}>\n                    <div className={classes.menu}>\n                        <div className={classes.menuItem}>\n                            <NavLink to=\"/profile/info\" activeClassName={classes.active}>{t(\"profile.tabs.info\")}</NavLink>\n                        </div>\n                        <div className={classes.menuItem}>\n                            <NavLink to=\"/profile/email\" activeClassName={classes.active}>{t(\"profile.tabs.email\")}</NavLink>\n                        </div>\n                        <div className={classes.menuItem}>\n                            <NavLink to=\"/profile/password\" activeClassName={classes.active}>{t(\"profile.tabs.password\")}</NavLink>\n                        </div>\n                        <div className={classes.menuItem}>\n                            <NavLink to=\"/profile/notifications\" activeClassName={classes.active}>{t(\"profile.tabs.notifications\")}</NavLink>\n                        </div>\n                    </div>\n                    <div className={classes.content}>\n                        <Route exact path=\"/profile\">\n                            <Redirect to=\"/profile/info\"/>\n                        </Route>\n                        <Route path=\"/profile/info\" render={()=><ProfileInfo/>}/>\n                        <Route path=\"/profile/email\" render={()=><ProfileEmail/>}/>\n                        <Route path=\"/profile/password\" render={()=><ProfilePassword/>}/>\n                        <Route path=\"/profile/notifications\" render={()=><ProfileNotifications/>}/>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n    user: state.user.user\n});\n\nexport default connect(mapStateToProps, {})(Profile);","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Auth/Login/Login.jsx",["307","308","309"],"import React, { useEffect, useState } from 'react';\nimport classes from '../Auth.module.css';\nimport { reduxForm, Field } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport Preloader from '../../Common/Preloader/Preloader';\nimport { AuthInput } from '../../Common/FormControlls/FormControlls';\nimport { useTranslation } from 'react-i18next';\nimport { login } from '../../../Redux/userReducer';\nimport { setCurrentRoute } from '../../../Redux/commonReducer';\nimport { isEmail, required } from '../../../Utils/validators';\n\nconst LoginForm = (props) => {\n    const {t, i18n} = useTranslation();\n    return(\n        <form className={classes.form} onSubmit={props.handleSubmit}>\n            <h3>{t(\"login.title\")}</h3>\n            <div className={classes.field}>\n                <label>{t(\"login.username\")}</label>\n                <Field component={AuthInput} placeholder={t(\"login.usernamePlaceholder\")} name=\"email\"\n                        validate={[required, isEmail]}/>\n            </div>\n            <div className={classes.field}>\n                <label>{t(\"login.password\")}</label>\n                <Field component={AuthInput} placeholder={t(\"login.passwordPlaceholder\")} name=\"password\" type=\"password\"\n                        validate={[required]}/>\n            </div>\n            <label className={classes.checkbox}>\n                <span className={classes.checkText}>{t(\"login.rememberMe\")}</span>\n                <input type=\"checkbox\"  onChange={()=>{props.setIsRememberMe(!props.isRememberMe)}} value={props.isRememberMe}/>\n                <span className={classes.checkmark}></span>\n            </label>\n            <NavLink to=\"/forgot_password\">{t(\"login.forgotPassword\")}</NavLink>\n            {props.error && <div className={classes.error}>{props.error}</div>}\n            <button>{t(\"login.login\")}</button>\n        </form>\n    );\n}\n\nconst LoginReduxForm = reduxForm({form:'login'})(LoginForm);\n\nconst Login = (props) => {\n    const [isRememberMe, setIsRememberMe] = useState(false);\n    const {t, i18n} = useTranslation();\n\n    useEffect(()=>{\n        props.setCurrentRoute(window.location.pathname);\n    },[]);\n\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, isRememberMe);\n    }\n    return(\n        <div className={classes.main}>\n            {(localStorage.usertoken || sessionStorage.usertoken) && <Redirect to=\"/\"/>}\n            <div className={classes.login}>\n                <h1>{t(\"login.header\")}</h1>\n                {props.isFetching && <Preloader/>}\n                <LoginReduxForm onSubmit={onSubmit} isRememberMe={isRememberMe} setIsRememberMe={setIsRememberMe}/>\n            </div>\n            <div className={classes.back}>\n                <div></div>\n                <div className={classes.green}></div>\n            </div>\n            \n        </div>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n    isFetching: state.common.isFetching,\n    isAuth: state.user.isAuth\n});\n\nexport default connect(mapStateToProps, {\n    login,\n    setCurrentRoute\n})(Login);\n\n\n\n","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Auth/Forgot/ForgotPassword.jsx",["310","311","312"],"import React, { useEffect } from 'react';\nimport classes from '../Auth.module.css';\nimport { useTranslation } from 'react-i18next';\nimport { Field, reduxForm } from 'redux-form';\nimport { AuthInput } from '../../Common/FormControlls/FormControlls';\nimport { required, passValidationMatch } from '../../../Utils/validators';\nimport Preloader from '../../Common/Preloader/Preloader';\nimport { connect } from 'react-redux';\nimport { setCurrentRoute } from '../../../Redux/commonReducer';\nimport { Redirect } from 'react-router-dom';\n\nconst ForgotPasswordForm = (props) => {\n    const {t, i18n} = useTranslation();\n    return(\n        <form className={classes.form} onSubmit={props.handleSubmit}>\n            <h3>{t(\"forgotPassword.title\")}</h3>\n            <div className={classes.field}>\n                <label>{t(\"forgotPassword.oldPassword\")}</label>\n                <Field component={AuthInput} placeholder={t(\"forgotPassword.oldPassword\")} name=\"oldPassword\" type=\"password\"\n                    validate={[required]}/>\n            </div>\n            <div className={classes.field}>\n                <label>{t(\"forgotPassword.newPassword\")}</label>\n                <Field component={AuthInput} placeholder={t(\"forgotPassword.newPassword\")} name=\"newPassword\" type=\"password\"\n                    validate={[required]}/>\n            </div>\n            <div className={classes.field}>\n                <label>{t(\"forgotPassword.newPassword\")}</label>\n                <Field component={AuthInput} placeholder={t(\"forgotPassword.newPassword\")} name=\"repeatPassword\" type=\"password\"\n                    validate={[required, passValidationMatch]}/>\n            </div>\n            {props.error && <div className={classes.error}>{props.error}</div>}\n            <button>{t(\"forgotPassword.submit\")}</button>\n        </form>\n    )\n}\n\nconst ForgotPasswordReduxForm = reduxForm({form: 'forgotPass'})(ForgotPasswordForm);\n\nconst ForgotPassword = (props) => {\n    const {t, i18n} = useTranslation();\n\n    const onSubmit = (formData) => {\n        console.log(formData);\n    }\n\n    useEffect(()=>{\n        props.setCurrentRoute(window.location.pathname);\n    },[]);\n\n    return(\n        <div className={classes.main}>\n            {(localStorage.usertoken || sessionStorage.usertoken) && <Redirect to=\"/\"/>}\n            <div className={classes.login}>\n                <h1>{t(\"forgotPassword.header\")}</h1>\n                {props.isFetching && <Preloader/>}\n                <ForgotPasswordReduxForm onSubmit={onSubmit}/>\n            </div>\n            <div className={classes.back}>\n                <div></div>\n                <div className={classes.green}></div>\n            </div>\n            \n        </div>\n    )\n}\n\nlet mapStateToProps = (state) => ({\n    isFetching: state.common.isFetching,\n    isAuth: state.user.isAuth\n});\n\nexport default connect(mapStateToProps, {\n    setCurrentRoute\n})(ForgotPassword);","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Activity/Activity.jsx",["313","314","315"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport ProgressBar from '../Common/ProgressBar/ProgressBar';\nimport classes from './Activity.module.css';\nimport { setCurrentActivity } from '../../Redux/activitiesReducer';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport Preloader from '../Common/Preloader/Preloader';\nimport { setIsFetching } from '../../Redux/commonReducer';\nimport { getActivity } from '../../Redux/activitiesReducer';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\n\nconst StyledMarkButton = styled.button`\n    margin-left: ${({ direction }) => direction === \"ltr\" ? \"8px\" : \"0\"};\n    margin-right: ${({ direction }) => direction === \"rtl\" ? \"8px\" : \"0\"};\n`;\n\nconst StyledLeftSide = styled.div`\n    margin-left: ${({ direction }) => direction === \"rtl\" ? \"30px\" : \"0\"};\n    margin-right: ${({ direction }) => direction === \"ltr\" ? \"30px\" : \"0\"};\n`;\n\nconst StyledProgressSpan = styled.span`\n    margin-left: ${({ direction }) => direction === \"ltr\" ? \"13px\" : \"0\"};\n    margin-right: ${({ direction }) => direction === \"rtl\" ? \"13px\" : \"0\"};\n`;\n\nconst Activity = (props) => {\n    const {t, i18n} = useTranslation();\n    let widthProgressBar = 83;\n    let heightProgressBar = 16;\n    \n    useEffect(()=>{\n            let activityId = props.match.params.activityId;\n            props.getActivity(activityId, props.user.selectedOrganizationId);\n    },[]);\n\n    const [daysLag, setDaysLag] = useState(0);\n    useEffect(()=>{\n        if(props.activity){\n            const endTime = new Date(props.activity.end);\n            const now = new Date();\n\n            var newDaysLag = Math.ceil(Math.abs(endTime.getTime() - now.getTime()) / (1000 * 3600 * 24));\n            \n            if(endTime >= now){\n                newDaysLag = newDaysLag + t(\"activityMini.daysLeft\");\n            }else{\n                newDaysLag = newDaysLag + t(\"activityMini.daysAgo\");\n            }\n            setDaysLag(newDaysLag);\n        }\n        \n    },[props.activity]);\n    \n\n    return(\n        <div className={classes.main}>\n            {!props.activity ? <Preloader/> :\n            <div className={classes.container}>\n                <StyledLeftSide className={classes.leftSide} direction={props.direction}>\n                    <div className={classes.block + \" \" + classes.withoutPadding}>\n                        <div className={classes.infoBlock}>\n                            <p>{t(\"home.statistic.infoUser.welcome\")}</p>\n                            <h3>{props.user.fullName}</h3>\n                        </div>\n                        <div className={classes.infoBlock}>\n                            <label>{t(\"home.statistic.infoUser.learningHours\")}</label>\n                            <span><strong>34 {t(\"home.statistic.infoUser.hours\")}</strong> {t(\"home.statistic.infoUser.and\")} <strong>54 {t(\"home.statistic.infoUser.mins\")}</strong></span>\n                        </div>\n                        <hr className={classes.line}/>\n                        <div className={classes.infoBlock}>\n                            <label>{t(\"home.statistic.infoUser.learningGoal\")}</label>\n                            <span><strong>34 {t(\"home.statistic.infoUser.hours\")}</strong></span>\n                        </div>\n                    </div>\n                    <div className={classes.block + \" \" + classes.programs}>\n                        <div className={classes.programsHeader}>\n                            <h4>{t(\"home.statistic.programs.related\")}</h4>\n                            <NavLink to=\"/programs\">{t(\"home.statistic.programs.viewAll\")}</NavLink>\n                        </div>\n                        <div className={classes.progressBlock}>\n                            <label>Sketching out ideas for securin....</label>\n                            <div className={classes.progressContainer}>\n                                <ProgressBar width={widthProgressBar} height={heightProgressBar} progress={78}/>\n                                <span>78%</span>\n                            </div>\n                        </div>\n                        <div className={classes.progressBlock}>\n                            <label>Team brainstorming</label>\n                            <div className={classes.progressContainer}>\n                                <ProgressBar width={widthProgressBar} height={heightProgressBar} progress={42}/>\n                                <span>42%</span>\n                            </div>\n                        </div>\n                    </div>\n                </StyledLeftSide>\n                <div className={classes.rightSide}>\n                    <div className={classes.tabHeader}>\n                        <h1>{t(\"activityDetails.title\")}</h1>\n                        <span>{t(\"activityDetails.label\")}</span>\n                    </div>\n                    <div className={classes.activity}>\n                        <div className={classes.activityHeader}>\n                            <span className={classes.fullPath}><span className={classes.path}>Cybersecurity awareness &gt;</span> Cybersecurity</span>\n                            <div className={classes.headerRightSide}>\n                                <button className={classes.editBut}>\n                                    <i className=\"far fa-edit\"></i>\n                                    {t(\"activityDetails.edit\")}\n                                </button>\n                                <button className={classes.removeBut}>\n                                    <i className=\"far fa-trash-alt\"></i>\n                                    {t(\"activityDetails.delete\")}\n                                </button>\n                            </div>\n                        </div>\n                        <h2>{props.activity.name}</h2>\n                        <div className={classes.activityFoot}>\n                            <div className={classes.activityProgressBlock}>\n                                <ProgressBar width={widthProgressBar} height={heightProgressBar} progress={props.activity.totalPoints}/>\n                                <StyledProgressSpan direction={props.direction}>{props.activity.totalPoints}%</StyledProgressSpan>\n                            </div>\n                            <div className={classes.activityFootRight}>\n                                <span>{daysLag}</span>\n                                <StyledMarkButton className={classes.mark} direction={props.direction}>{t(\"activityDetails.butComplete\")}</StyledMarkButton>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.videoBlock}>\n                        <div className={classes.video}>\n                            <button>\n                                <i className=\"fas fa-play-circle\"></i>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>}\n        </div>\n    );\n}\n\n\nlet WithUrlDataContainerComponent = withRouter(Activity);\n\nlet mapStateToProps = (state) => ({\n    isFetching: state.common.isFetching,\n    activity: state.activities.currentActivity,\n    activities: state.activities.activities,\n    user: state.user.user,\n    direction: state.common.direction\n})\n\nexport default connect(mapStateToProps, {\n    setCurrentActivity,\n    setIsFetching,\n    getActivity\n})(WithUrlDataContainerComponent);","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Api/api.js",[],"/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Common/FormControlls/FormControlls.js",["316"],"import React from 'react';\nimport classes from './FormControlls.module.css';\nimport { useTranslation } from 'react-i18next';\n\nexport const AuthInput = ({input, meta, ...props}) => {\n    const hasError = meta.touched && meta.error;\n    return(\n        <div className={classes.formControll + \" \" + (hasError && classes.error)}>\n            <input {...input} {...props}/>\n            {hasError && <span>{meta.error}</span>}\n        </div>\n    );\n}\n\nexport const TextAreaCustom = ({input, meta, ...props}) => {\n    const {t, i18n} = useTranslation();\n    const hasError = meta.touched && meta.error;\n    return(\n        <div className={classes.textarea + \" \" + (hasError && classes.error)}>\n            <textarea maxLength={props.maxLength} {...input} {...props}/>\n            {hasError && <span>{meta.error}</span>}\n            <label>{props.left} {t(\"addActivity.charactersLeft\")}</label>\n        </div>\n    )\n}\n","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Utils/validators.js",["317"],"export const required = (value) =>{\n    if(value) return undefined;\n   \n    return 'The field is required!';\n}\n\nexport const isEmail = (value) => {\n    let rep = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\n    if(rep.test(value)){\n        return undefined;\n    }\n    return 'Incorrect email!';   \n}\nexport const passValidationMatch = (value, allValues) => {\n    if(value !== allValues.newPassword) return `Passwords didn't match!`;\n    return undefined;\n}\n\nexport const emailValidationMatch = (value, allValues) => {\n    if(value !== allValues.newEmail) return `Emails didn't match!`;\n    return undefined;\n}","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Home/Home.jsx",[],"/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Courses/Courses.jsx",["318","319"],"import React, { useEffect, useState } from 'react';\nimport classes from './Courses.module.css';\nimport CourseItemView from './CourseItemView/CourseItemView';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\n\nconst StyledLabel = styled.label`\n    margin-left: ${({ direction }) => direction === \"rtl\" ? \"56px\" : \"0\"};\n    margin-right: ${({ direction }) => direction === \"ltr\" ? \"56px\" : \"0\"};\n`;\n\nconst Courses = (props) => {\n    const [all, setAll] = useState(false);\n    const [completed, setCompleted] = useState(true);\n    const [inProgress, setInProgress] = useState(true);\n    const [notStarted, setNotStarted] = useState(false);\n    const {t, i18n} = useTranslation();\n\n    let courses = props.courses.map(item => {\n        return <CourseItemView item={item} key={item.courseId}/>\n    })\n\n    return(\n        <div className={classes.main}>\n            <div className={classes.coursesHeader}>\n                <div className={classes.coursesHeaderContainer}>\n                    <h1>{t(\"courses.title\")}</h1>\n                    <div className={classes.filters}>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"courses.filters.all\")}</span>\n                            <input type=\"checkbox\" onChange={()=>{setAll(!all)}}/>\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"courses.filters.completed\")}</span>\n                            <input type=\"checkbox\" onChange={()=>{setCompleted(!completed)}} checked={completed}/>\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"courses.filters.inProgress\")}</span>\n                            <input type=\"checkbox\" onChange={()=>{setInProgress(!inProgress)}} checked={inProgress}/>\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"courses.filters.notStarted\")}</span>\n                            <input type=\"checkbox\" onChange={()=>{setNotStarted(!notStarted)}}/>\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                    </div>\n                </div>\n            </div>\n            <div className={classes.itemsList}>\n                <div className={classes.containerItems}>\n                    {courses}\n                </div>  \n            </div>\n        </div>\n    );\n}\n\nexport default Courses;","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Reports/Reports.jsx",[],"/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Navbar/Navbar.jsx",["320","321","322"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport classes from './Navbar.module.css';\nimport { NavLink } from 'react-router-dom';\nimport { programicon } from '../../Assets/Images/programicon.js';\nimport { myreporticon } from '../../Assets/Images/myreport.js';\nimport { activitiesicon } from '../../Assets/Images/activities.js';\nimport { coursesicon } from '../../Assets/Images/courses.js';\nimport { notificationicon } from '../../Assets/Images/notification.js';\nimport { homeicon } from '../../Assets/Images/homeicon.js';\nimport { searchicon } from '../../Assets/Images/searchicon.js';\nimport Burger from './Burger/Burger';\nimport { useTranslation } from 'react-i18next';\nimport SearchModal from '../Common/SearchModal/SearchModal';\nimport ProfileMenu from './ProfileMenu/ProfileMenu';\n\nconst StyledLogoBlock = styled.div`\n    a span{\n        margin-left: ${({ direction }) => direction === \"ltr\" ? \"5px\" : \"0\"};\n        margin-right: ${({ direction }) => direction === \"rtl\" ? \"5px\" : \"0\"};\n    }\n`;\nconst StyledLinks = styled.div`\n    margin-left: ${({ direction }) => direction === \"ltr\" ? \"60px\" : \"0\"};\n    margin-right: ${({ direction }) => direction === \"rtl\" ? \"60px\" : \"0\"};\n`;\n\nconst StyledNotifications = styled.div`\n    margin-left: ${({ direction }) => direction === \"rtl\" ? \"15px\" : \"0\"};\n    margin-right: ${({ direction }) => direction === \"ltr\" ? \"15px\" : \"0\"};\n`;\n\nconst StyledBut = styled.button`\n    margin-left: ${({ direction }) => direction === \"rtl\" ? \"15px\" : \"0\"};\n    margin-right: ${({ direction }) => direction === \"ltr\" ? \"15px\" : \"0\"};\n`;\n\nconst Navbar = (props) => {\n    const {t, i18n} = useTranslation();\n\n    return(\n        <nav className={classes.main}>\n            <div className={classes.container}>\n                <div className={classes.leftSideNav}>\n                    <StyledLogoBlock className={classes.logoBlock} direction={props.direction}>\n                        <NavLink to=\"/home\">\n                            <div className={classes.logo}></div>\n                            <span>{t(\"navbar.logo\")}</span>\n                        </NavLink>\n                    </StyledLogoBlock>\n                    <StyledLinks className={classes.links} direction={props.direction}>\n                        <div className={classes.menuItem}>\n                            <NavLink to=\"/home\" activeClassName={classes.active}>\n                                {homeicon}\n                                {t(\"navbar.home\")}\n                            </NavLink>\n                        </div>\n                        <div className={classes.menuItem}>\n                            <NavLink to=\"/programs\" activeClassName={classes.active}>\n                                {programicon}\n                                {t(\"navbar.programs\")}\n                            </NavLink>\n                        </div>\n                        <div className={classes.menuItem}>\n                            <NavLink to=\"/courses\" activeClassName={classes.active}>\n                                {coursesicon}\n                                {t(\"navbar.courses\")}\n                            </NavLink>\n                        </div>\n                        <div className={classes.menuItem}>\n                            <NavLink to=\"/activities\" activeClassName={classes.active}>\n                                {activitiesicon}\n                                {t(\"navbar.activities\")}\n                            </NavLink>\n                        </div>\n                        <div className={classes.menuItem}>\n                            <NavLink to=\"/report\" activeClassName={classes.active}>\n                                {myreporticon}\n                                {t(\"navbar.myreport\")}\n                            </NavLink>\n                        </div>\n                    </StyledLinks>\n                </div>\n                <button onClick={()=>{props.changeLanguage('en')}}>EN</button>\n                <button onClick={()=>{props.changeLanguage('ar')}}>AR</button>\n                <div className={classes.rightSideNav}>\n                    <StyledBut className={classes.searchBut + \" \" + (props.isOpenSearchModal && classes.activeSearch)} direction={props.direction} onClick={()=>{props.setIsOpenSearchModal(!props.isOpenSearchModal)}}>\n                        {searchicon}\n                    </StyledBut>\n                    {props.isOpenSearchModal && <SearchModal/>}\n                    <StyledNotifications className={classes.notifications} direction={props.direction}>\n                        <button onClick={()=>{props.setIsOpenNotificationsModal(!props.isOpenNotificationsModal)}} className={classes.notBut + \" \" + (props.isOpenNotificationsModal && classes.activeModalNotifications)}>\n                            {notificationicon}\n                            <div className={classes.notificationsCount}>\n                                {props.totalUnreadNotificationsCount}\n                            </div>\n                        </button>\n                    </StyledNotifications>\n                    <input type=\"checkbox\" hidden id=\"profileMenu\" className={classes.check}/>\n                    <label className={classes.userMenu} htmlFor=\"profileMenu\">\n                        {props.user.profilePhoto ? \n                        <img src={props.user.profilePhoto}/> : \n                        <div className={classes.userDefault}></div>}\n                        <span>{props.user.name}</span>\n                        <div className={classes.profileMenuContainer}>\n                            <ProfileMenu/>\n                        </div>\n                    </label>\n                    <div className={classes.burger}>\n                        <Burger/>\n                    </div>\n                </div>\n            </div>\n            \n            \n\n        </nav>\n    )\n}\n\nexport default Navbar;","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Activites/Activities.jsx",["323","324"],"import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport classes from './Activities.module.css';\nimport { useTranslation } from 'react-i18next';\nimport ActivityItem from './ActivityItem/ActivityItem';\nimport { NavLink } from 'react-router-dom';\n\nconst StyledLabel = styled.label`\n    margin-left: ${({ direction }) => direction === \"rtl\" ? \"56px\" : \"0\"};\n    margin-right: ${({ direction }) => direction === \"ltr\" ? \"56px\" : \"0\"};\n`;\n\nconst Activities = (props) => {\n    const {t, i18n} = useTranslation();\n    const [all, setAll] = useState(false);\n    const [completed, setCompleted] = useState(true);\n    const [inProgress, setInProgress] = useState(true);\n    const [notStarted, setNotStarted] = useState(false);\n    const [privateParam, setPrivateParam] = useState(false);\n\n    props.activities.sort(function(a,b){\n        return new Date(b.end) - new Date(a.end);\n    });\n\n    let activities = props.activities.map(item => {\n        return <ActivityItem item={item} key={item.activityId} width={props.blockWidth}/>\n    });\n\n    return(\n        <div className={classes.main}>\n            <div className={classes.header}>\n                <div className={classes.headerContainer}>\n                    <div className={classes.headerHeader}>\n                        <h1>{t(\"activities.title\")}</h1>\n                        <NavLink to=\"/activities/add\">\n                            <i className=\"fas fa-plus\"></i>\n                            {t(\"activities.addActivityBut\")}\n                        </NavLink>\n                    </div>\n                    <div className={classes.filters}>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"activities.filters.all\")}</span>\n                            <input type=\"checkbox\" onChange={()=>{setAll(!all)}}/>\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"activities.filters.completed\")}</span>\n                            <input type=\"checkbox\" onChange={()=>{setCompleted(!completed)}} checked={completed}/>\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"activities.filters.inProgress\")}</span>\n                            <input type=\"checkbox\" onChange={()=>{setInProgress(!inProgress)}} checked={inProgress}/>\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"activities.filters.notStarted\")}</span>\n                            <input type=\"checkbox\" onChange={()=>{setNotStarted(!notStarted)}}/>\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"activities.filters.private\")}</span>\n                            <input type=\"checkbox\" onChange={()=>{setPrivateParam(!privateParam)}}/>\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                    </div>\n                </div>\n            </div>\n            <div className={classes.itemsList}>\n                <div className={classes.containerItems}>\n                    {activities}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Activities;","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Common/ProgressBar/ProgressBar.jsx",[],"/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Common/Cutsom/Select/CustomSelect.jsx",["325"],"import React, { useEffect, useState } from 'react';\nimport classes from './CustomSelect.module.css';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\n\nconst StyledSelect = styled.div`\n    width: ${({ width }) => width + \"%\"};\n`;\n\nconst CustomSelect = (props) => {\n    const [currentOption, setCurrentOption] = useState(props.options[0]);\n    const [isOpenDropdown, setIsOpenDropdown] = useState(false);\n\n    let handleSelect = (option) => {\n        setCurrentOption(option);\n        props.setFunction(option);\n        setIsOpenDropdown(false);\n    }\n\n    let options = props.options.map(option => {\n        return <span onClick={()=>{handleSelect(option)}} className={classes.option}>{option}</span>\n    });\n\n    return(\n        <StyledSelect className={classes.main} width={props.width}>\n            <input hidden type=\"checkout\" value={isOpenDropdown}/>\n            <div className={classes.view} onClick={()=>setIsOpenDropdown(!isOpenDropdown)}>\n                <span>{currentOption}</span>\n                <div className={classes.arrow + \" \" + (isOpenDropdown && classes.open)}></div>\n            </div>\n            {isOpenDropdown && \n            <div className={classes.dropdown + \" \" + (isOpenDropdown && classes.openDropdown)}>\n                {options}\n            </div>}\n        </StyledSelect> \n    );\n}\n\nlet mapStateToProps = (state) => ({\n    direction: state.common.direction\n});\n\nexport default connect(mapStateToProps, null)(CustomSelect);","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Profile/Password/ProfilePassword.jsx",["326","327"],"import React from 'react';\nimport classes from './ProfilePassword.module.css';\nimport { connect } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { AuthInput } from '../../Common/FormControlls/FormControlls';\nimport { Field, reduxForm } from 'redux-form';\nimport { passValidationMatch, required } from '../../../Utils/validators';\nimport { NavLink } from 'react-router-dom';\n\nconst ProfilePasswordForm = (props) => {\n    const {t, i18n} = useTranslation();\n\n    return(\n        <form className={classes.form} onSubmit={props.handleSubmit}>\n            <div className={classes.field + \" \" + classes.fieldBorder}>\n                <label>{t(\"profile.profilePass.current\")}</label>\n                <Field component={AuthInput} name=\"password\" validate={[required]} disabled type={\"password\"}/>\n            </div>\n            <div className={classes.field}>\n                <label>{t(\"profile.profilePass.new\")}</label>\n                <Field component={AuthInput} name=\"newPassword\" validate={[required]} type={\"password\"}/>\n            </div>\n            <div className={classes.field}>\n                <label>{t(\"profile.profilePass.reenter\")}</label>\n                <Field component={AuthInput} name=\"repeatPassword\" validate={[required, passValidationMatch]} type={\"password\"}/>\n            </div>\n            <div className={classes.fieldBut}>\n                <button>{t(\"profile.saveChanges\")}</button>\n                <NavLink to=\"/profile/info\">{t(\"profile.cancel\")}</NavLink>\n            </div>\n        </form>\n    );\n}\n\nlet ProfilePasswordReduxForm = reduxForm({form: 'profilePass'})(ProfilePasswordForm);\n\nconst ProfilePassword = (props) => {\n    const onSubmit = (formData) => {\n        console.log(formData);\n    }\n\n    return(\n        <ProfilePasswordReduxForm onSubmit={onSubmit}/>    \n    );\n}\n\nlet mapStateToProps = (state) => ({\n    \n});\n\nexport default connect(mapStateToProps, {})(ProfilePasswordReduxForm);\n\n","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Profile/Info/ProfileInfo.jsx",["328","329","330","331","332"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport classes from './ProfileInfo.module.css';\nimport { useTranslation } from 'react-i18next';\nimport { AuthInput } from '../../Common/FormControlls/FormControlls';\nimport { required } from '../../../Utils/validators';\nimport default_user from '../../../Assets/Images/default_user.png';\nimport { NavLink } from 'react-router-dom';\n\nconst ProfileInfoForm = (props) => {\n    const {t, i18n} = useTranslation();\n\n    const [previewImage, setPreviewImage] = useState(null);\n\n    let handleImage = (e) => {\n        console.log(e.target.files);\n    }\n\n    useEffect(()=>{\n        props.initialize({\n            name: props.user.name,\n            profilePhoto: props.user.profilePhoto\n        });\n    },[]);\n\n    return(\n        <form className={classes.form} onSubmit={props.handleSubmit}>\n            <div className={classes.field}>\n                <label>{t(\"profile.profileInfo.fullname\")}</label>\n                <Field component={AuthInput} name=\"name\" validate={[required]}/>\n            </div>\n            <div className={classes.fieldImage}>\n                <label>{t(\"profile.profileInfo.photo\")}</label>\n                <label htmlFor=\"image\" className={classes.image}>\n                    <img src={props.user.profilePhoto ? props.user.profilePhoto : default_user}/>\n                </label>\n                <Field component={\"input\"} type=\"file\" name=\"profilePhoto\" id=\"image\" hidden onChange={handleImage}/>\n                <button>{t(\"profile.profileInfo.remove\")}</button>\n            </div>\n            <div className={classes.fieldBut}>\n                <button>{t(\"profile.saveChanges\")}</button>\n                <NavLink to=\"/profile/info\">{t(\"profile.cancel\")}</NavLink>\n            </div>\n        </form>\n    );\n}\n\nlet ProfileInfoReduxForm = reduxForm({form: \"profileInfo\"})(ProfileInfoForm);\n\n\nconst ProfileInfo = (props) => {\n    const onSubmit = (formData) => {\n        console.log(formData);\n    }\n\n    return(\n        <ProfileInfoReduxForm onSubmit={onSubmit} user={props.user}/>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n    user: state.user.user\n});\n\nexport default connect(mapStateToProps, {\n    \n})(ProfileInfo);","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Profile/Email/ProfileEmail.jsx",["333","334"],"import React, { useEffect } from 'react';\nimport classes from './ProfileEmail.module.css';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { AuthInput } from '../../Common/FormControlls/FormControlls';\nimport { emailValidationMatch, isEmail, required } from '../../../Utils/validators';\nimport { NavLink } from 'react-router-dom';\n\nconst ProfileEmailForm = (props) => {\n    const {t, i18n} = useTranslation();\n\n    useEffect(()=>{\n        props.initialize({\n            email: props.user.email\n        });\n    },[]);\n\n    return(\n        <form className={classes.form} onSubmit={props.handleSubmit}>\n            <div className={classes.field + \" \" + classes.fieldBorder}>\n                <label>{t(\"profile.profileEmail.current\")}</label>\n                <Field component={AuthInput} name=\"email\" validate={[required, isEmail]} disabled/>\n            </div>\n            <div className={classes.field}>\n                <label>{t(\"profile.profileEmail.new\")}</label>\n                <Field component={AuthInput} placeholder=\"mail@example.com\" name=\"newEmail\" validate={[required, isEmail]}/>\n            </div>\n            <div className={classes.field}>\n                <label>{t(\"profile.profileEmail.reenter\")}</label>\n                <Field component={AuthInput} placeholder=\"mail@example.com\" name=\"repeatEmail\" validate={[required, isEmail, emailValidationMatch]}/>\n            </div>\n            <div className={classes.fieldBut}>\n                <button>{t(\"profile.saveChanges\")}</button>\n                <NavLink to=\"/profile/info\">{t(\"profile.cancel\")}</NavLink>\n            </div>\n        </form>\n    )\n}\n\nlet ProfileEmailReduxForm = reduxForm({form: \"profileEmail\"})(ProfileEmailForm);\n\nconst ProfileEmail = (props) => {\n    const onSubmit = (formData) => {\n        console.log(formData);\n    }\n\n    return(\n        <ProfileEmailReduxForm onSubmit={onSubmit} user={props.user}/>\n    )\n}\n\nlet mapStateToProps = (state) => ({\n    user: state.user.user\n});\n\nexport default connect(mapStateToProps, {})(ProfileEmail);","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Profile/Notifications/ProfileNotifications.jsx",["335"],"import React, { useState } from 'react';\nimport classes from './ProfileNotifications.module.css';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\n\nconst ProfileNotifications = (props) => {\n    const {t, i18n} = useTranslation();\n\n    const [enableEmail, setEnableEmail] = useState(false);\n    const [enableText, setEnableText] = useState(false);\n\n    let handleEmail = () => {\n        setEnableEmail(!enableEmail);\n    }\n    let handleText = () => {\n        setEnableText(!enableText);\n    }\n\n    return(\n        <div className={classes.main}>\n            <div className={classes.field}>\n                <label htmlFor=\"email\">{t(\"profile.notifications.email\")}</label>\n                <label className={classes.switch}>\n                    <input type=\"checkbox\" id=\"email\" onChange={handleEmail} value={enableEmail}/>\n                    <span className={classes.slider}></span>\n                </label>\n            </div>\n            <div className={classes.field}>\n                <label htmlFor=\"text\">{t(\"profile.notifications.text\")}</label>\n                <label className={classes.switch}>\n                    <input type=\"checkbox\" id=\"text\" onChange={handleText} value={enableText}/>\n                    <span className={classes.slider}></span>\n                </label>\n            </div>\n        </div>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n\n});\n\nexport default connect(mapStateToProps, {})(ProfileNotifications);","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Assets/Images/searchicon.js",[],"/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Assets/Images/homeicon.js",[],"/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Assets/Images/notification.js",[],"/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Assets/Images/courses.js",[],"/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Assets/Images/activities.js",[],"/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Assets/Images/myreport.js",[],"/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Assets/Images/programicon.js",[],"/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Courses/CourseItemView/CourseItemView.jsx",["336","337","338"],"import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classes from './CourseItemView.module.css';\nimport { useTranslation } from 'react-i18next';\n\nconst CourseItem = (props) => {\n    const {t, i18n} = useTranslation();\n    return(\n        <div className={classes.main}>\n            <NavLink to={`/courses/${props.item.id}`}>\n                {(props.item.image != \"null\") ? <img src={props.item.image}/> : <div className={classes.defaultImg}></div>}\n                <div className={classes.itemInfo}>\n                    <label>{props.item.description}</label>\n                    <h2>{props.item.name}</h2>\n                    <div className={classes.itemFoot}>\n                        <span className={classes.status + \" \" + \n                            ((props.item.inProgress && classes.inProgress) ||\n                            (!props.item.inProgress && classes.completed))}>\n                                {((props.item.inProgress && t('courseMini.inProgress')) ||\n                                (!props.item.inProgress && t('courseMini.progressComplete')))}</span>\n                        <span className={classes.time}>{props.item.startingDate ? props.item.startingDate : t('courseMini.overdue')}</span>\n                    </div>\n                </div>\n                \n            </NavLink>\n        </div>\n    );\n}\n\nexport default CourseItem;","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Home/Statistic/Statistic.jsx",["339"],"import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport ProgressBar from '../../Common/ProgressBar/ProgressBar';\nimport classes from './Statistic.module.css';\nimport { useTranslation } from 'react-i18next';\n\nconst Statistic = (props) => {\n    const {t, i18n} = useTranslation();\n\n\n    let widthProgressBar = 83;\n    let heightProgressBar = 16;\n    return(\n        <div className={classes.main}>\n            <div className={classes.block + \" \" + classes.withoutPadding}>\n                <div className={classes.infoBlock}>\n                    <p>{t(\"home.statistic.infoUser.welcome\")}</p>\n                    <h3>{props.user.name}</h3>\n                </div>\n                <div className={classes.infoBlock}>\n                    <label>{t(\"home.statistic.infoUser.learningHours\")}</label>\n                    <span><strong>34 {t(\"home.statistic.infoUser.hours\")}</strong> {t(\"home.statistic.infoUser.and\")} <strong>54 {t(\"home.statistic.infoUser.mins\")}</strong></span>\n                </div>\n                <hr className={classes.line}/>\n                <div className={classes.infoBlock}>\n                    <label>{t(\"home.statistic.infoUser.learningGoal\")}</label>\n                    <span><strong>34 {t(\"home.statistic.infoUser.hours\")}</strong></span>\n                </div>\n            </div>\n            <div className={classes.block + \" \" + classes.programs}>\n                <div className={classes.programsHeader}>\n                    <h4>{t(\"home.statistic.programs.programs\")}</h4>\n                    <NavLink to=\"/programs\">{t(\"home.statistic.programs.viewAll\")}</NavLink>\n                </div>\n                <div className={classes.progressBlock}>\n                    <label>Cybersecurity</label>\n                    <div className={classes.progressContainer}>\n                        <ProgressBar width={widthProgressBar} height={heightProgressBar} progress={78}/>\n                        <span>78%</span>\n                    </div>\n                </div>\n                <div className={classes.progressBlock}>\n                    <label>Writing</label>\n                    <div className={classes.progressContainer}>\n                        <ProgressBar width={widthProgressBar} height={heightProgressBar} progress={42}/>\n                        <span>42%</span>\n                    </div>\n                </div>\n                <div className={classes.progressBlock}>\n                    <label>Information Technologies</label>\n                    <div className={classes.progressContainer}>\n                        <ProgressBar width={widthProgressBar} height={heightProgressBar} progress={60}/>\n                        <span>60%</span>\n                    </div>\n                </div>\n            </div>\n            <div className={classes.block + \" \" + classes.stats}>\n                <h4>{t(\"home.statistic.stats.stats\")}</h4>\n            </div>\n        </div>\n    );\n}\n\nexport default Statistic;","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Reports/Filter/Filter.jsx",["340","341","342","343"],"import React, { useEffect, useState } from 'react';\nimport classes from './Filter.module.css';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { useTranslation } from 'react-i18next';\n\nconst StyledSelect = styled.div`\n\n`;\n\nconst Filter = (props) => {\n    const { t, i18n } = useTranslation();\n\n    const [isOpenDropdown, setIsOpenDropdown] = useState(false);\n    const [isCourses, setIsCourses] = useState(false)\n    const [isActivities, setIsActivities] = useState(false)\n\n    return (\n        <StyledSelect className={classes.main} width={props.width}>\n            <input hidden type=\"checkout\" value={isOpenDropdown} />\n            <div className={classes.view} onClick={() => setIsOpenDropdown(!isOpenDropdown)}>\n                <span> {t(\"filterReports.filter\")} </span>\n                <div className={classes.arrow + \" \" + (isOpenDropdown && classes.open)}></div>\n            </div>\n            {isOpenDropdown &&\n                <div className={classes.dropdown + \" \" + (isOpenDropdown && classes.openDropdown)}>\n                    <span className={`${classes.option} ${classes.margin0}`}>\n                        {t(\"filterReports.filteredBy\")}\n                    </span>\n                    <div className={classes.margin0}>\n                        <input type=\"checkbox\" onChange={() => setIsCourses(true)} />\n                        <span className={`${classes.option} ${classes.margin0}`}> {t(\"filterReports.courses\")} </span>\n                    </div>\n                    <div className={classes.margin0}>\n                        <input type=\"checkbox\" onChange={() => setIsActivities(true)} />\n                        <span className={`${classes.option} ${classes.margin0}`}> {t(\"filterReports.activities\")} </span>\n                    </div>\n                </div>}\n        </StyledSelect>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n    direction: state.common.direction\n});\n\nexport default connect(mapStateToProps, null)(Filter);","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Navbar/Burger/Burger.jsx",[],"/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Activites/ActivityItem/ActivityItem.jsx",["344"],"import React from 'react';\nimport classes from './ActivityItem.module.css';\nimport { clockicon } from '../../../Assets/Images/clock';\nimport { NavLink } from 'react-router-dom';\nimport ProgressBar from '../../Common/ProgressBar/ProgressBar';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\n\n\nconst StyledMain = styled.div`\n    width: ${({ width }) => 'calc(' + width + '% - 32px)'};\n`;\n\nconst StyledTimeBlock = styled.div`\n    margin-left: ${({ direction }) => direction === \"ltr\" ? \"16px\" : \"0\"};\n    margin-right: ${({ direction }) => direction === \"rtl\" ? \"16px\" : \"0\"};\n`;\n\nconst StyledTimeSpan = styled.span`\n    margin-left: ${({ direction }) => direction === \"ltr\" ? \"4px\" : \"0\"};\n    margin-right: ${({ direction }) => direction === \"rtl\" ? \"4px\" : \"0\"};\n`;\n\nconst StyledProgressSpan = styled.span`\n    margin-left: ${({ direction }) => direction === \"ltr\" ? \"14px\" : \"0\"};\n    margin-right: ${({ direction }) => direction === \"rtl\" ? \"14px\" : \"0\"};\n`;\n\nconst ActivityItem = (props) => {\n    const {t, i18n} = useTranslation();\n    let widthProgressBar = 45;\n    let heightProgressBar = 8;\n\n    const endTime = new Date(props.item.end);\n    const now = new Date();\n\n    var daysLag = Math.ceil(Math.abs(endTime.getTime() - now.getTime()) / (1000 * 3600 * 24));\n    \n    return(\n        <StyledMain className={classes.main} width={props.width}>\n            <NavLink to={`/activities/view/${props.item.activityId}`}>\n                <div className={classes.activityHeader}>\n                    <span className={classes.program}>{(!props.item.description || props.item.description === \"\") ? t(\"activityMini.empty\") : props.item.description}</span>\n                    <div className={classes.headerSide}>\n                        <span className={classes.status}>{props.item.status}</span>\n                        <StyledTimeBlock className={classes.timeBlock} direction={props.direction}>\n                            {clockicon}\n                            <StyledTimeSpan className={classes.time} direction={props.direction}>\n                                {daysLag} \n                                {endTime >= now ? <span>{t(\"activityMini.daysLeft\")}</span>\n                                                : <span>{t(\"activityMini.daysAgo\")}</span>}\n                            </StyledTimeSpan>\n                        </StyledTimeBlock>\n                    </div>\n                    \n                </div>\n                <h3>{props.item.name}</h3>\n                <div className={classes.progressBlock}>\n                    <ProgressBar width={widthProgressBar} height={heightProgressBar} progress={props.item.totalPoints}/>\n                    <StyledProgressSpan direction={props.direction}>{props.item.totalPoints}%</StyledProgressSpan>\n                </div>\n                \n            </NavLink>\n        </StyledMain>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n    direction: state.common.direction\n});\n\nexport default connect(mapStateToProps, {})(ActivityItem);","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Navbar/ProfileMenu/ProfileMenu.jsx",[],"/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Common/SearchModal/SearchModal.jsx",["345","346","347","348"],"import React, { useState } from 'react';\nimport CustomSelect from '../Cutsom/Select/CustomSelect';\nimport classes from './SearchModal.module.css';\nimport { searchicon } from '../../../Assets/Images/searchicon.js';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\n\nconst StyledModal = styled.div`\n    transform: ${({ direction }) => direction === \"ltr\" ? 'translateY(100px) translateX(-743px)' : 'translateY(100px) translateX(743px)' }; \n    @media screen and (max-width: 1000px){\n        width: 620px;\n        transform: ${({ direction }) => direction === \"ltr\" ? 'translateY(100px) translateX(-543px)' : 'translateY(100px) translateX(543px)' }; \n    }\n    @media screen and (max-width: 822px){\n        width: 520px;\n        transform: ${({ direction }) => direction === \"ltr\" ? 'translateY(100px) translateX(-443px)' : 'translateY(100px) translateX(443px)' }; \n    }\n    @media screen and (max-width: 693px){\n        width: 420px;\n        transform: ${({ direction }) => direction === \"ltr\" ? 'translateY(160px) translateX(-343px)' : 'translateY(160px) translateX(343px)' }; \n    }\n`;\n\nconst StyledArrow = styled.div`\n    left: ${({ direction }) => direction === \"ltr\" ? \"-50px\" : \"50px\"};\n    \n    & div{\n        left: ${({ direction }) => direction === \"ltr\" ? \"-4.5px\" : \"3.5px\"};\n    }\n`;\n\nconst SearchModal = (props) => {\n    const [searchValue, setSearchValue] = useState('');\n\n    let filerOne = ['Search everything', 'option1', 'option2'];\n    let filerTwo = ['By anyone', 'option1', 'option2'];\n    let filerThree = ['In all segments', 'option1', 'option2'];\n\n    const [filterOneValue, setFilterOneValue] = useState(filerOne[0]);\n    const [filterTwoValue, setFilterTwoValue] = useState(filerTwo[0]);\n    const [filterThreeValue, setFilterThreeValue] = useState(filerThree[0]);\n\n    return(\n        <StyledModal className={classes.main} direction={props.direction}>\n            <StyledArrow className={classes.arrow} direction={props.direction}>\n                <div class={classes.innerArrow}></div>\n            </StyledArrow>\n            <div className={classes.body}>\n                <div className={classes.searchField}>\n                    <button>\n                        {searchicon}\n                    </button>\n                    <input placeholder=\"Search...\" name={\"value\"} onChange={(e)=>{setSearchValue(e.target.value)}}/>\n                </div>\n                <div className={classes.filters}>\n                    <CustomSelect options={filerOne} setFunction={setFilterOneValue} width={32}/>\n                    <CustomSelect options={filerTwo} setFunction={setFilterTwoValue} width={32}/>\n                    <CustomSelect options={filerThree} setFunction={setFilterThreeValue} width={32}/>\n                </div>\n            </div>\n        </StyledModal>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n    direction: state.common.direction\n});\n\nexport default connect(mapStateToProps, {})(SearchModal);","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Reports/UserInfo/UserInfo.jsx",["349"],"import React from 'react';\nimport classes from './UserInfo.module.css';\nimport { useTranslation } from 'react-i18next';\n\nconst UserInfo = (props) => {\n    const { t, i18n } = useTranslation();\n\n    return (\n        <div className={classes.main}>\n            <div className={classes.block + \" \" + classes.withoutPadding}>\n                <div className={classes.infoBlock}>\n                    <p>{t(\"home.statistic.infoUser.welcome\")}</p>\n                    <h3>{props.user.name}</h3>\n                </div>\n                <div className={classes.infoBlock}>\n                    <label>{t(\"home.statistic.infoUser.learningHours\")}</label>\n                    <span><strong>34 {t(\"home.statistic.infoUser.hours\")}</strong> {t(\"home.statistic.infoUser.and\")} <strong>54 {t(\"home.statistic.infoUser.mins\")}</strong></span>\n                </div>\n                <hr className={classes.line} />\n                <div className={classes.infoBlock}>\n                    <label>{t(\"home.statistic.infoUser.learningGoal\")}</label>\n                    <span><strong>34 {t(\"home.statistic.infoUser.hours\")}</strong></span>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default UserInfo","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Home/Courses/Courses.jsx",["350","351","352"],"import React from 'react';\nimport classes from './Courses.module.css';\nimport { coursesicon } from '../../../Assets/Images/courses';\nimport { NavLink } from 'react-router-dom';\nimport CourseItem from './CourseItem/CourseItem';\nimport { useTranslation } from 'react-i18next';\nimport { empty_state_icon } from '../../../Assets/Images/empty_state_icon';\n\nconst HomeCourses = (props) => {\n    const {t, i18n} = useTranslation();\n    let maxCoursesToView = 6;\n    let courses = [];\n    if(props.courses){\n        courses = props.courses.map((item, index) => {\n            if(index < maxCoursesToView){\n                return <CourseItem item={item} key={item.courseId}/>\n            }\n        });\n    }\n    \n    return(\n        <div className={classes.main}>\n            <div className={classes.coursesHeader}>\n                <div className={classes.coursesHeaderBlock}>\n                    {coursesicon}\n                    <span>{t('home.courses.title')}</span>\n                </div>\n                <NavLink to=\"/courses\">{t('home.courses.viewAll')}</NavLink>\n            </div>\n            <div className={classes.itemsList}>\n                {(courses.length > 0 && courses != null && courses != undefined) ? courses : \n                    <div className={classes.empty}>\n                        <div className={classes.emptyIcon}>\n                            {empty_state_icon}\n                        </div>\n                        <span>You have not been assigned to any courses yet</span>\n                    </div>\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default HomeCourses;","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Home/Activities/HomeActivities.jsx",["353","354","355"],"import React from 'react';\nimport classes from './HomeActivities.module.css';\nimport { activitiesicon } from '../../../Assets/Images/activities';\nimport { NavLink } from 'react-router-dom';\nimport ActivityItem from '../../Activites/ActivityItem/ActivityItem';\nimport { useTranslation } from 'react-i18next';\nimport { empty_state_icon } from '../../../Assets/Images/empty_state_icon';\n\nconst HomeActivities = (props) => {\n    const {t, i18n} = useTranslation();\n    let maxActivitiesToView = 10;\n    let blockWidth = 100;\n\n    let activities = [];\n    activities = props.activities.map((item, index) => {\n        if(index < maxActivitiesToView){\n            return <ActivityItem item={item} key={item.activityId} width={blockWidth}/>\n        }\n    });\n    return(\n        <div className={classes.main}>\n            <div className={classes.activitiesHeader}>\n                <div className={classes.activitiesHeaderBlock}>\n                    {activitiesicon}\n                    <span>{t(\"home.activities.title\")}</span>\n                </div>\n                <NavLink to=\"/activities\">{t(\"home.activities.viewAll\")}</NavLink>\n            </div>\n            <div className={classes.itemsList}>\n                {(activities.length > 0 && activities != null && activities != undefined) ? activities : \n                    <div className={classes.empty}>\n                        <div className={classes.emptyIcon}>\n                            {empty_state_icon}\n                        </div>\n                        <span>You have no activities</span>\n                    </div>\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default HomeActivities;","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Assets/Images/clock.js",[],"/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Assets/Images/logout_icon.js",[],"/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Assets/Images/profile_settings_icon.js",[],"/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Navbar/Burger/BurgerMenu.jsx",["356"],"import React from 'react';\nimport styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport classes from '../Navbar.module.css';\nimport { useTranslation } from 'react-i18next';\n\nconst Menu = styled.div`\n    width: 100%;\n    height: 100vh;\n    transform: ${({ open }) => open ? 'translateX(0)' : 'translateX(100%)'};\n    position: fixed;\n    top: 0;\n    left: 0;\n    background-color: #59bcabe3;\n    transition-duration: 0.4s;\n    z-index: 100;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    a{\n        font-size: 35px;\n    }\n    a.active{\n        color: white;\n    }\n\n`;\n\n\nconst BurgerMenu = ({open, setOpen}) => {\n    const {t, i18n} = useTranslation();\n    return(\n        <Menu open={open}>\n            <nav className={\"nav\"}>\n                <div className={classes.menuItem}>\n                    <NavLink to=\"/home\" activeClassName={\"active\"}>{t(\"navbar.home\")}</NavLink>\n                </div>\n                <div className={classes.menuItem}>\n                    <NavLink to=\"/programs\" activeClassName={\"active\"}>{t(\"navbar.programs\")}</NavLink>\n                </div>\n                <div className={classes.menuItem}>\n                    <NavLink to=\"/courses\" activeClassName={\"active\"}>{t(\"navbar.courses\")}</NavLink>\n                </div>\n                <div className={classes.menuItem}>\n                    <NavLink to=\"/activities\" activeClassName={\"active\"}>{t(\"navbar.activities\")}</NavLink>\n                </div>\n                <div className={classes.menuItem}>\n                    <NavLink to=\"/report\" activeClassName={\"active\"}>{t(\"navbar.myreport\")}</NavLink>\n                </div>\n            </nav>\n        </Menu>\n    )\n    \n}\n\nexport default BurgerMenu;","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Assets/Images/empty_state_icon.js",[],"/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Home/Courses/CourseItem/CourseItem.jsx",["357","358","359"],"import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classes from './CourseItem.module.css';\nimport { useTranslation } from 'react-i18next';\n\n\nconst CourseItem = (props) => {\n    const {t, i18n} = useTranslation();\n\n    return(\n        <div className={classes.main}>\n            <NavLink to={`/courses/${props.item.id}`}>\n                {(props.item.image != \"null\") ? <img src={props.item.image}/> : <div className={classes.defaultImg}></div>}\n                \n                <div className={classes.itemInfo}>\n                    <label>{props.item.description}</label>\n                    <h2>{props.item.name}</h2>\n                    <div className={classes.itemFoot}>\n                        <span className={classes.status + \" \" + \n                            ((props.item.inProgress && classes.inProgress) ||\n                            (!props.item.inProgress && classes.completed))}>\n                                {((props.item.inProgress && t('courseMini.inProgress')) ||\n                                (!props.item.inProgress && t('courseMini.progressComplete')))}</span>\n                        <span className={classes.time}>{props.item.startingDate ? props.item.startingDate : t('courseMini.overdue')}</span>\n                    </div>\n                </div>\n                \n            </NavLink>\n        </div>\n    );\n}\n\nexport default CourseItem;","/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Reports/ReportMain/ReportMain.jsx",["360","361"],"/home/dev/Рабочий стол/Eugen/lxp-frontend/src/Components/Reports/ReportDetails/ReportDetails.jsx",["362"],{"ruleId":"363","replacedBy":"364"},{"ruleId":"365","replacedBy":"366"},{"ruleId":"367","severity":1,"message":"368","line":26,"column":11,"nodeType":"369","messageId":"370","endLine":26,"endColumn":12},{"ruleId":"371","severity":1,"message":"372","line":8,"column":13,"nodeType":"373","endLine":8,"endColumn":35},{"ruleId":"367","severity":1,"message":"374","line":2,"column":8,"nodeType":"369","messageId":"370","endLine":2,"endColumn":12},{"ruleId":"367","severity":1,"message":"375","line":3,"column":8,"nodeType":"369","messageId":"370","endLine":3,"endColumn":12},{"ruleId":"376","severity":1,"message":"377","line":12,"column":7,"nodeType":"378","endLine":12,"endColumn":9,"suggestions":"379"},{"ruleId":"367","severity":1,"message":"380","line":1,"column":28,"nodeType":"369","messageId":"370","endLine":1,"endColumn":36},{"ruleId":"367","severity":1,"message":"381","line":6,"column":8,"nodeType":"369","messageId":"370","endLine":6,"endColumn":13},{"ruleId":"376","severity":1,"message":"382","line":22,"column":7,"nodeType":"378","endLine":22,"endColumn":19,"suggestions":"383"},{"ruleId":"367","severity":1,"message":"380","line":1,"column":28,"nodeType":"369","messageId":"370","endLine":1,"endColumn":36},{"ruleId":"376","severity":1,"message":"377","line":15,"column":7,"nodeType":"378","endLine":15,"endColumn":21,"suggestions":"384"},{"ruleId":"376","severity":1,"message":"377","line":19,"column":7,"nodeType":"378","endLine":19,"endColumn":33,"suggestions":"385"},{"ruleId":"386","severity":1,"message":"387","line":10,"column":30,"nodeType":"388","messageId":"389","endLine":10,"endColumn":32},{"ruleId":"386","severity":1,"message":"387","line":10,"column":64,"nodeType":"388","messageId":"389","endLine":10,"endColumn":66},{"ruleId":"376","severity":1,"message":"377","line":13,"column":7,"nodeType":"378","endLine":13,"endColumn":9,"suggestions":"390"},{"ruleId":"367","severity":1,"message":"380","line":1,"column":28,"nodeType":"369","messageId":"370","endLine":1,"endColumn":36},{"ruleId":"376","severity":1,"message":"377","line":15,"column":7,"nodeType":"378","endLine":15,"endColumn":21,"suggestions":"391"},{"ruleId":"367","severity":1,"message":"392","line":12,"column":15,"nodeType":"369","messageId":"370","endLine":12,"endColumn":19},{"ruleId":"367","severity":1,"message":"392","line":72,"column":15,"nodeType":"369","messageId":"370","endLine":72,"endColumn":19},{"ruleId":"367","severity":1,"message":"393","line":73,"column":12,"nodeType":"369","messageId":"370","endLine":73,"endColumn":16},{"ruleId":"367","severity":1,"message":"392","line":12,"column":15,"nodeType":"369","messageId":"370","endLine":12,"endColumn":19},{"ruleId":"367","severity":1,"message":"392","line":14,"column":15,"nodeType":"369","messageId":"370","endLine":14,"endColumn":19},{"ruleId":"367","severity":1,"message":"392","line":44,"column":15,"nodeType":"369","messageId":"370","endLine":44,"endColumn":19},{"ruleId":"376","severity":1,"message":"377","line":48,"column":7,"nodeType":"378","endLine":48,"endColumn":9,"suggestions":"394"},{"ruleId":"367","severity":1,"message":"392","line":13,"column":15,"nodeType":"369","messageId":"370","endLine":13,"endColumn":19},{"ruleId":"367","severity":1,"message":"392","line":41,"column":15,"nodeType":"369","messageId":"370","endLine":41,"endColumn":19},{"ruleId":"376","severity":1,"message":"377","line":49,"column":7,"nodeType":"378","endLine":49,"endColumn":9,"suggestions":"395"},{"ruleId":"367","severity":1,"message":"392","line":29,"column":15,"nodeType":"369","messageId":"370","endLine":29,"endColumn":19},{"ruleId":"376","severity":1,"message":"377","line":36,"column":7,"nodeType":"378","endLine":36,"endColumn":9,"suggestions":"396"},{"ruleId":"376","severity":1,"message":"397","line":54,"column":7,"nodeType":"378","endLine":54,"endColumn":23,"suggestions":"398"},{"ruleId":"367","severity":1,"message":"392","line":16,"column":15,"nodeType":"369","messageId":"370","endLine":16,"endColumn":19},{"ruleId":"399","severity":1,"message":"400","line":8,"column":21,"nodeType":"401","messageId":"402","endLine":8,"endColumn":22,"suggestions":"403"},{"ruleId":"367","severity":1,"message":"404","line":1,"column":17,"nodeType":"369","messageId":"370","endLine":1,"endColumn":26},{"ruleId":"367","severity":1,"message":"392","line":17,"column":15,"nodeType":"369","messageId":"370","endLine":17,"endColumn":19},{"ruleId":"367","severity":1,"message":"380","line":1,"column":17,"nodeType":"369","messageId":"370","endLine":1,"endColumn":25},{"ruleId":"367","severity":1,"message":"392","line":39,"column":15,"nodeType":"369","messageId":"370","endLine":39,"endColumn":19},{"ruleId":"371","severity":1,"message":"372","line":102,"column":25,"nodeType":"373","endLine":102,"endColumn":61},{"ruleId":"367","severity":1,"message":"404","line":1,"column":17,"nodeType":"369","messageId":"370","endLine":1,"endColumn":26},{"ruleId":"367","severity":1,"message":"392","line":14,"column":15,"nodeType":"369","messageId":"370","endLine":14,"endColumn":19},{"ruleId":"367","severity":1,"message":"404","line":1,"column":17,"nodeType":"369","messageId":"370","endLine":1,"endColumn":26},{"ruleId":"367","severity":1,"message":"392","line":11,"column":15,"nodeType":"369","messageId":"370","endLine":11,"endColumn":19},{"ruleId":"367","severity":1,"message":"405","line":37,"column":7,"nodeType":"369","messageId":"370","endLine":37,"endColumn":22},{"ruleId":"367","severity":1,"message":"392","line":12,"column":15,"nodeType":"369","messageId":"370","endLine":12,"endColumn":19},{"ruleId":"367","severity":1,"message":"406","line":14,"column":12,"nodeType":"369","messageId":"370","endLine":14,"endColumn":24},{"ruleId":"367","severity":1,"message":"407","line":14,"column":26,"nodeType":"369","messageId":"370","endLine":14,"endColumn":41},{"ruleId":"376","severity":1,"message":"377","line":25,"column":7,"nodeType":"378","endLine":25,"endColumn":9,"suggestions":"408"},{"ruleId":"371","severity":1,"message":"372","line":36,"column":21,"nodeType":"373","endLine":36,"endColumn":98},{"ruleId":"367","severity":1,"message":"392","line":11,"column":15,"nodeType":"369","messageId":"370","endLine":11,"endColumn":19},{"ruleId":"376","severity":1,"message":"377","line":17,"column":7,"nodeType":"378","endLine":17,"endColumn":9,"suggestions":"409"},{"ruleId":"367","severity":1,"message":"392","line":7,"column":15,"nodeType":"369","messageId":"370","endLine":7,"endColumn":19},{"ruleId":"367","severity":1,"message":"392","line":7,"column":15,"nodeType":"369","messageId":"370","endLine":7,"endColumn":19},{"ruleId":"386","severity":1,"message":"387","line":11,"column":36,"nodeType":"388","messageId":"389","endLine":11,"endColumn":38},{"ruleId":"371","severity":1,"message":"372","line":11,"column":49,"nodeType":"373","endLine":11,"endColumn":78},{"ruleId":"367","severity":1,"message":"392","line":8,"column":15,"nodeType":"369","messageId":"370","endLine":8,"endColumn":19},{"ruleId":"367","severity":1,"message":"404","line":1,"column":17,"nodeType":"369","messageId":"370","endLine":1,"endColumn":26},{"ruleId":"367","severity":1,"message":"392","line":12,"column":16,"nodeType":"369","messageId":"370","endLine":12,"endColumn":20},{"ruleId":"367","severity":1,"message":"410","line":15,"column":12,"nodeType":"369","messageId":"370","endLine":15,"endColumn":21},{"ruleId":"367","severity":1,"message":"411","line":16,"column":12,"nodeType":"369","messageId":"370","endLine":16,"endColumn":24},{"ruleId":"367","severity":1,"message":"392","line":31,"column":15,"nodeType":"369","messageId":"370","endLine":31,"endColumn":19},{"ruleId":"367","severity":1,"message":"412","line":33,"column":12,"nodeType":"369","messageId":"370","endLine":33,"endColumn":23},{"ruleId":"367","severity":1,"message":"413","line":39,"column":12,"nodeType":"369","messageId":"370","endLine":39,"endColumn":26},{"ruleId":"367","severity":1,"message":"414","line":40,"column":12,"nodeType":"369","messageId":"370","endLine":40,"endColumn":26},{"ruleId":"367","severity":1,"message":"415","line":41,"column":12,"nodeType":"369","messageId":"370","endLine":41,"endColumn":28},{"ruleId":"367","severity":1,"message":"392","line":6,"column":16,"nodeType":"369","messageId":"370","endLine":6,"endColumn":20},{"ruleId":"367","severity":1,"message":"392","line":10,"column":15,"nodeType":"369","messageId":"370","endLine":10,"endColumn":19},{"ruleId":"416","severity":1,"message":"417","line":14,"column":51,"nodeType":"418","messageId":"419","endLine":14,"endColumn":53},{"ruleId":"386","severity":1,"message":"387","line":31,"column":68,"nodeType":"388","messageId":"389","endLine":31,"endColumn":70},{"ruleId":"367","severity":1,"message":"392","line":10,"column":15,"nodeType":"369","messageId":"370","endLine":10,"endColumn":19},{"ruleId":"416","severity":1,"message":"417","line":15,"column":53,"nodeType":"418","messageId":"419","endLine":15,"endColumn":55},{"ruleId":"386","severity":1,"message":"387","line":30,"column":77,"nodeType":"388","messageId":"389","endLine":30,"endColumn":79},{"ruleId":"367","severity":1,"message":"392","line":32,"column":15,"nodeType":"369","messageId":"370","endLine":32,"endColumn":19},{"ruleId":"367","severity":1,"message":"392","line":8,"column":15,"nodeType":"369","messageId":"370","endLine":8,"endColumn":19},{"ruleId":"386","severity":1,"message":"387","line":13,"column":36,"nodeType":"388","messageId":"389","endLine":13,"endColumn":38},{"ruleId":"371","severity":1,"message":"372","line":13,"column":49,"nodeType":"373","endLine":13,"endColumn":78},{"ruleId":"367","severity":1,"message":"420","line":2,"column":16,"nodeType":"369","messageId":"370","endLine":2,"endColumn":23},{"ruleId":"367","severity":1,"message":"392","line":9,"column":16,"nodeType":"369","messageId":"370","endLine":9,"endColumn":20},{"ruleId":"367","severity":1,"message":"421","line":2,"column":16,"nodeType":"369","messageId":"370","endLine":2,"endColumn":27},"no-native-reassign",["422"],"no-negated-in-lhs",["423"],"no-unused-vars","'t' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'img1' is defined but never used.","'img2' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["424"],"'useState' is defined but never used.","'Login' is defined but never used.","React Hook useEffect has missing dependencies: 'getProfile', 'getUnreadNotifications', 'getUserProfile', 'isStartData', 'limit', 'setCurrentRoute', and 'user.organizationId'. Either include them or remove the dependency array. If 'setCurrentRoute' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["425"],["426"],["427"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["428"],["429"],"'i18n' is assigned a value but never used.","'type' is assigned a value but never used.",["430"],["431"],["432"],"React Hook useEffect has a missing dependency: 't'. Either include it or remove the dependency array.",["433"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["434","435"],"'useEffect' is defined but never used.","'ProfilePassword' is assigned a value but never used.","'previewImage' is assigned a value but never used.","'setPreviewImage' is assigned a value but never used.",["436"],["437"],"'isCourses' is assigned a value but never used.","'isActivities' is assigned a value but never used.","'searchValue' is assigned a value but never used.","'filterOneValue' is assigned a value but never used.","'filterTwoValue' is assigned a value but never used.","'filterThreeValue' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'NavLink' is defined but never used.","'useLocation' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"438","fix":"439"},{"desc":"440","fix":"441"},{"desc":"442","fix":"443"},{"desc":"444","fix":"445"},{"desc":"438","fix":"446"},{"desc":"442","fix":"447"},{"desc":"438","fix":"448"},{"desc":"438","fix":"449"},{"desc":"438","fix":"450"},{"desc":"451","fix":"452"},{"messageId":"453","fix":"454","desc":"455"},{"messageId":"456","fix":"457","desc":"458"},{"desc":"438","fix":"459"},{"desc":"438","fix":"460"},"Update the dependencies array to be: [props]",{"range":"461","text":"462"},"Update the dependencies array to be: [employeeId, getProfile, getUnreadNotifications, getUserProfile, isStartData, limit, setCurrentRoute, user.organizationId]",{"range":"463","text":"464"},"Update the dependencies array to be: [props, props.isAuth]",{"range":"465","text":"466"},"Update the dependencies array to be: [props, props.user.joinedCourses]",{"range":"467","text":"468"},{"range":"469","text":"462"},{"range":"470","text":"466"},{"range":"471","text":"462"},{"range":"472","text":"462"},{"range":"473","text":"462"},"Update the dependencies array to be: [props.activity, t]",{"range":"474","text":"475"},"removeEscape",{"range":"476","text":"477"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"478","text":"479"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"480","text":"462"},{"range":"481","text":"462"},[420,422],"[props]",[1036,1048],"[employeeId, getProfile, getUnreadNotifications, getUserProfile, isStartData, limit, setCurrentRoute, user.organizationId]",[653,667],"[props, props.isAuth]",[755,781],"[props, props.user.joinedCourses]",[506,508],[619,633],[2196,2198],[2144,2146],[1465,1467],[2045,2061],"[props.activity, t]",[168,169],"",[168,168],"\\",[835,837],[605,607]]