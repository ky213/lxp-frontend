[{"C:\\Users\\Nadai\\lxp-frontend\\src\\index.js":"1","C:\\Users\\Nadai\\lxp-frontend\\src\\App.js":"2","C:\\Users\\Nadai\\lxp-frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Nadai\\lxp-frontend\\src\\Utils\\i18n.js":"4","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Courses\\CoursesContainer.jsx":"5","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Activity\\Activity.jsx":"6","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Home\\HomeContainer.jsx":"7","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Navbar\\NavbarContainer.jsx":"8","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Activity\\AddActivity\\AddActivity.jsx":"9","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Activites\\ActivitiesContainer.jsx":"10","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Reports\\ReportsContainer.jsx":"11","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Profile\\Profile.jsx":"12","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Activity\\EditActivity\\EditActivity.jsx":"13","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Lessons\\LessonsContainer.jsx":"14","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Programs\\ProgramsContainer.jsx":"15","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\SearchResult\\SearchResultContainer.jsx":"16","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Notifications\\NotificationsContainer.jsx":"17","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Common\\LoadDataRouter\\LoadDataRouter.jsx":"18","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Auth\\Login\\Login.jsx":"19","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Auth\\Forgot\\ForgotPassword.jsx":"20","C:\\Users\\Nadai\\lxp-frontend\\src\\Utils\\validators.js":"21","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Common\\FormControlls\\FormControlls.js":"22","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Courses\\Courses.jsx":"23","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Home\\Home.jsx":"24","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Navbar\\Navbar.jsx":"25","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Activites\\Activities.jsx":"26","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Reports\\Reports.jsx":"27","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Common\\Preloader\\Preloader.jsx":"28","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Common\\ProgressBar\\ProgressBar.jsx":"29","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Activity\\DeleteActivity\\DeleteActivity.jsx":"30","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Activity\\Chat\\Chat.jsx":"31","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Activity\\ActivityFile\\ActivityFile.jsx":"32","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Profile\\Email\\ProfileEmail.jsx":"33","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Profile\\Info\\ProfileInfo.jsx":"34","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Profile\\Password\\ProfilePassword.jsx":"35","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Profile\\Notifications\\ProfileNotifications.jsx":"36","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Common\\Cutsom\\Select\\CustomSelect.jsx":"37","C:\\Users\\Nadai\\lxp-frontend\\src\\Assets\\Images\\programicon.js":"38","C:\\Users\\Nadai\\lxp-frontend\\src\\Assets\\Images\\myreport.js":"39","C:\\Users\\Nadai\\lxp-frontend\\src\\Assets\\Images\\notification.js":"40","C:\\Users\\Nadai\\lxp-frontend\\src\\Assets\\Images\\activities.js":"41","C:\\Users\\Nadai\\lxp-frontend\\src\\Assets\\Images\\homeicon.js":"42","C:\\Users\\Nadai\\lxp-frontend\\src\\Assets\\Images\\courses.js":"43","C:\\Users\\Nadai\\lxp-frontend\\src\\Assets\\Images\\searchicon.js":"44","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Notifications\\Notifications.jsx":"45","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\SearchResult\\SearchResult.jsx":"46","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Programs\\Programs.jsx":"47","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Lessons\\Lessons.jsx":"48","C:\\Users\\Nadai\\lxp-frontend\\src\\Assets\\Images\\planet_icon.js":"49","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Courses\\CourseItemView\\CourseItemView.jsx":"50","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Home\\Courses\\Courses.jsx":"51","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Home\\Statistic\\Statistic.jsx":"52","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Common\\SearchModal\\SearchModal.jsx":"53","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Navbar\\Burger\\Burger.jsx":"54","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Navbar\\ProfileMenu\\ProfileMenu.jsx":"55","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Notifications\\NotificationsModal\\NotificationsModal.jsx":"56","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Activites\\ActivityItem\\ActivityItem.jsx":"57","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Navbar\\Submenu\\Submenu.jsx":"58","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Reports\\UserInfo\\UserInfo.jsx":"59","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Reports\\ReportDetails\\ReportDetails.jsx":"60","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Reports\\ReportMain\\ReportMain.jsx":"61","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Activity\\Chat\\Message\\Message.jsx":"62","C:\\Users\\Nadai\\lxp-frontend\\src\\Assets\\Images\\empty_state_icon.js":"63","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Notifications\\NotificationItem\\NotificationItem.jsx":"64","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Notifications\\NotificationsModal\\NotificationModalItem\\NotificationModalItemMenu\\NotificationModalItemMenu.jsx":"65","C:\\Users\\Nadai\\lxp-frontend\\src\\Assets\\Images\\library.js":"66","C:\\Users\\Nadai\\lxp-frontend\\src\\Assets\\Images\\clock.js":"67","C:\\Users\\Nadai\\lxp-frontend\\src\\Assets\\Images\\logout_icon.js":"68","C:\\Users\\Nadai\\lxp-frontend\\src\\Assets\\Images\\profile_settings_icon.js":"69","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Reports\\Filter\\Filter.jsx":"70","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Notifications\\NotificationsModal\\NotificationModalItem\\NotificationModalItem.jsx":"71","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Navbar\\Burger\\BurgerMenu.jsx":"72","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Home\\Courses\\CourseItem\\CourseItem.jsx":"73","C:\\Users\\Nadai\\lxp-frontend\\src\\Store\\Reducers\\activities.js":"74","C:\\Users\\Nadai\\lxp-frontend\\src\\Store\\Reducers\\common.js":"75","C:\\Users\\Nadai\\lxp-frontend\\src\\Store\\Reducers\\user.js":"76","C:\\Users\\Nadai\\lxp-frontend\\src\\Store\\Reducers\\notifications.js":"77","C:\\Users\\Nadai\\lxp-frontend\\src\\Store\\Reducers\\courses.js":"78","C:\\Users\\Nadai\\lxp-frontend\\src\\Store\\Reducers\\programs.js":"79","C:\\Users\\Nadai\\lxp-frontend\\src\\Services\\api.js":"80","C:\\Users\\Nadai\\lxp-frontend\\src\\Store\\reduxStore.js":"81","C:\\Users\\Nadai\\lxp-frontend\\src\\Assets\\Images\\learners.js":"82","C:\\Users\\Nadai\\lxp-frontend\\src\\Utils\\constants.js":"83","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Home\\Programs\\HomePrograms.jsx":"84","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Programs\\AddProgram\\AddProgram.jsx":"85","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Programs\\ImageFileProgram\\ImageFileProgram.jsx":"86","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Programs\\ProgramItem\\ProgramItem.jsx":"87","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Activites\\Resources\\ResourcesContainer.jsx":"88","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Activites\\Resources\\Rerources.jsx":"89","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Home\\Activities\\LearnerHomeActivities\\HomeActivities.jsx":"90","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Home\\Activities\\ManagerHomeActivities\\ManagerHomeActivities.jsx":"91","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Programs\\ProgramDetails\\ProgramAttendees\\ProgramAttendeesContainer.jsx":"92","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Programs\\ProgramDetails\\ProgramAttendees\\ProgramAttendees.jsx":"93","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Programs\\ProgramDetails\\ProgramView\\ProgramViewContainer.jsx":"94","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Programs\\ProgramDetails\\ProgramView\\ProgramView.jsx":"95","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Courses\\AddCourse\\AddCourse.jsx":"96","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Courses\\AddCourse\\ImageFileCourse\\ImageFileCourse.jsx":"97","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Courses\\AddCourse\\LessonFileCourse\\LessonFileCourse.jsx":"98"},{"size":747,"mtime":1610615928756,"results":"99","hashOfConfig":"100"},{"size":4884,"mtime":1610718733942,"results":"101","hashOfConfig":"100"},{"size":375,"mtime":1610614366874,"results":"102","hashOfConfig":"100"},{"size":554,"mtime":1610614366873,"results":"103","hashOfConfig":"100"},{"size":2021,"mtime":1610615691741,"results":"104","hashOfConfig":"100"},{"size":8450,"mtime":1610615753726,"results":"105","hashOfConfig":"100"},{"size":1605,"mtime":1610615768799,"results":"106","hashOfConfig":"100"},{"size":2061,"mtime":1610615666481,"results":"107","hashOfConfig":"100"},{"size":9695,"mtime":1610718213998,"results":"108","hashOfConfig":"100"},{"size":3175,"mtime":1610615735017,"results":"109","hashOfConfig":"100"},{"size":1571,"mtime":1610615650439,"results":"110","hashOfConfig":"100"},{"size":2489,"mtime":1610614792355,"results":"111","hashOfConfig":"100"},{"size":10184,"mtime":1610615457141,"results":"112","hashOfConfig":"100"},{"size":371,"mtime":1610614792339,"results":"113","hashOfConfig":"100"},{"size":2348,"mtime":1610633007862,"results":"114","hashOfConfig":"100"},{"size":2284,"mtime":1610615680910,"results":"115","hashOfConfig":"100"},{"size":940,"mtime":1610615707005,"results":"116","hashOfConfig":"100"},{"size":1739,"mtime":1610615519920,"results":"117","hashOfConfig":"100"},{"size":3196,"mtime":1610615480000,"results":"118","hashOfConfig":"100"},{"size":2977,"mtime":1610615467826,"results":"119","hashOfConfig":"100"},{"size":657,"mtime":1610614366873,"results":"120","hashOfConfig":"100"},{"size":1693,"mtime":1610632456467,"results":"121","hashOfConfig":"100"},{"size":2991,"mtime":1610614792330,"results":"122","hashOfConfig":"100"},{"size":2620,"mtime":1610637613778,"results":"123","hashOfConfig":"100"},{"size":8050,"mtime":1610635842252,"results":"124","hashOfConfig":"100"},{"size":4017,"mtime":1610620826892,"results":"125","hashOfConfig":"100"},{"size":880,"mtime":1610614792362,"results":"126","hashOfConfig":"100"},{"size":315,"mtime":1610614792326,"results":"127","hashOfConfig":"100"},{"size":803,"mtime":1610614792327,"results":"128","hashOfConfig":"100"},{"size":1254,"mtime":1610614792319,"results":"129","hashOfConfig":"100"},{"size":2474,"mtime":1610614792317,"results":"130","hashOfConfig":"100"},{"size":1102,"mtime":1610614792314,"results":"131","hashOfConfig":"100"},{"size":2173,"mtime":1610614792351,"results":"132","hashOfConfig":"100"},{"size":2754,"mtime":1610614792352,"results":"133","hashOfConfig":"100"},{"size":2673,"mtime":1610614792354,"results":"134","hashOfConfig":"100"},{"size":1515,"mtime":1610614792353,"results":"135","hashOfConfig":"100"},{"size":2696,"mtime":1610614792323,"results":"136","hashOfConfig":"100"},{"size":1541,"mtime":1610614366806,"results":"137","hashOfConfig":"100"},{"size":661,"mtime":1610614366804,"results":"138","hashOfConfig":"100"},{"size":1011,"mtime":1610614366804,"results":"139","hashOfConfig":"100"},{"size":1878,"mtime":1610614366798,"results":"140","hashOfConfig":"100"},{"size":1254,"mtime":1610614366802,"results":"141","hashOfConfig":"100"},{"size":1445,"mtime":1610614366800,"results":"142","hashOfConfig":"100"},{"size":731,"mtime":1610614366807,"results":"143","hashOfConfig":"100"},{"size":2019,"mtime":1610614792346,"results":"144","hashOfConfig":"100"},{"size":6020,"mtime":1610614792365,"results":"145","hashOfConfig":"100"},{"size":4127,"mtime":1610633508793,"results":"146","hashOfConfig":"100"},{"size":532,"mtime":1610614792338,"results":"147","hashOfConfig":"100"},{"size":669,"mtime":1610614366805,"results":"148","hashOfConfig":"100"},{"size":1420,"mtime":1610718907352,"results":"149","hashOfConfig":"100"},{"size":1633,"mtime":1610614792334,"results":"150","hashOfConfig":"100"},{"size":4028,"mtime":1610637358192,"results":"151","hashOfConfig":"100"},{"size":4214,"mtime":1610615532577,"results":"152","hashOfConfig":"100"},{"size":1778,"mtime":1610614792340,"results":"153","hashOfConfig":"100"},{"size":3203,"mtime":1610615575951,"results":"154","hashOfConfig":"100"},{"size":4198,"mtime":1610614792349,"results":"155","hashOfConfig":"100"},{"size":4327,"mtime":1610695520948,"results":"156","hashOfConfig":"100"},{"size":2182,"mtime":1610614792343,"results":"157","hashOfConfig":"100"},{"size":1232,"mtime":1610614792363,"results":"158","hashOfConfig":"100"},{"size":2861,"mtime":1610614792360,"results":"159","hashOfConfig":"100"},{"size":5508,"mtime":1610614792361,"results":"160","hashOfConfig":"100"},{"size":2409,"mtime":1610614792318,"results":"161","hashOfConfig":"100"},{"size":1078,"mtime":1610614366801,"results":"162","hashOfConfig":"100"},{"size":3104,"mtime":1610614792345,"results":"163","hashOfConfig":"100"},{"size":2531,"mtime":1610614792348,"results":"164","hashOfConfig":"100"},{"size":972,"mtime":1610614366803,"results":"165","hashOfConfig":"100"},{"size":664,"mtime":1610614366800,"results":"166","hashOfConfig":"100"},{"size":1572,"mtime":1610614366803,"results":"167","hashOfConfig":"100"},{"size":1209,"mtime":1610614366806,"results":"168","hashOfConfig":"100"},{"size":2413,"mtime":1610614792359,"results":"169","hashOfConfig":"100"},{"size":2844,"mtime":1610614792347,"results":"170","hashOfConfig":"100"},{"size":2821,"mtime":1610614792340,"results":"171","hashOfConfig":"100"},{"size":1433,"mtime":1610614792333,"results":"172","hashOfConfig":"100"},{"size":1660,"mtime":1610616022548,"results":"173","hashOfConfig":"100"},{"size":1787,"mtime":1610614792369,"results":"174","hashOfConfig":"100"},{"size":2988,"mtime":1610616048061,"results":"175","hashOfConfig":"100"},{"size":3358,"mtime":1610616041773,"results":"176","hashOfConfig":"100"},{"size":1235,"mtime":1610616037459,"results":"177","hashOfConfig":"100"},{"size":2108,"mtime":1610707261864,"results":"178","hashOfConfig":"100"},{"size":2179,"mtime":1610614792366,"results":"179","hashOfConfig":"100"},{"size":1071,"mtime":1610617123132,"results":"180","hashOfConfig":"100"},{"size":2679,"mtime":1610617944204,"results":"181","hashOfConfig":"100"},{"size":190,"mtime":1610639294546,"results":"182","hashOfConfig":"100"},{"size":1756,"mtime":1610619345320,"results":"183","hashOfConfig":"100"},{"size":7019,"mtime":1610635753174,"results":"184","hashOfConfig":"100"},{"size":734,"mtime":1610631332415,"results":"185","hashOfConfig":"100"},{"size":3466,"mtime":1610701147365,"results":"186","hashOfConfig":"100"},{"size":2070,"mtime":1610636041730,"results":"187","hashOfConfig":"100"},{"size":3470,"mtime":1610636209223,"results":"188","hashOfConfig":"100"},{"size":1831,"mtime":1610637470207,"results":"189","hashOfConfig":"100"},{"size":3626,"mtime":1610639571745,"results":"190","hashOfConfig":"100"},{"size":2710,"mtime":1610707525926,"results":"191","hashOfConfig":"100"},{"size":3844,"mtime":1610707586731,"results":"192","hashOfConfig":"100"},{"size":2634,"mtime":1610714717090,"results":"193","hashOfConfig":"100"},{"size":4781,"mtime":1610719036874,"results":"194","hashOfConfig":"100"},{"size":7534,"mtime":1610724716252,"results":"195","hashOfConfig":"100"},{"size":731,"mtime":1610720148716,"results":"196","hashOfConfig":"100"},{"size":923,"mtime":1610724508772,"results":"197","hashOfConfig":"100"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},"1yvk6pd",{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"200"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"200"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"200"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"200"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"200"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"200"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"200"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"200"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"200"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"200"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"200"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"200"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"200"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"200"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"200"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"200"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"200"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"200"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"200"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"200"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"200"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"200"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"200"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"200"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"200"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"200"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"200"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"200"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"200"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"200"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"200"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"200"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"200"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"332","messages":"333","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"200"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"200"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"200"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"200"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"200"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"351","messages":"352","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"200"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"200"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"200"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"200"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"200"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"200"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"200"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"200"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"200"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"200"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"200"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416","usedDeprecatedRules":"200"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"419","usedDeprecatedRules":"200"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422","usedDeprecatedRules":"200"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"200"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"432","usedDeprecatedRules":"200"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"435","usedDeprecatedRules":"200"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"438","messages":"439","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"440","messages":"441","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"442","messages":"443","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"444","messages":"445","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"446","messages":"447","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"448","messages":"449","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Nadai\\lxp-frontend\\src\\index.js",[],["450","451"],"C:\\Users\\Nadai\\lxp-frontend\\src\\App.js",["452"],"import React from \"react\";\r\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Activity from \"./Pages/Activity/Activity\";\r\nimport LoadDataRouter from \"./Pages/Common/LoadDataRouter/LoadDataRouter\";\r\nimport CoursesContainer from \"./Pages/Courses/CoursesContainer\";\r\nimport HomeContainer from \"./Pages/Home/HomeContainer\";\r\nimport NavbarContainer from \"./Pages/Navbar/NavbarContainer\";\r\nimport styled from \"styled-components\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { connect } from \"react-redux\";\r\nimport { setDirection, setCurrentLanguage } from \"./Store/Reducers/common\";\r\nimport ActivitiesContainer from \"./Pages/Activites/ActivitiesContainer\";\r\nimport Login from \"./Pages/Auth/Login/Login\";\r\nimport AddActivity from \"./Pages/Activity/AddActivity/AddActivity\";\r\nimport ForgotPassword from \"./Pages/Auth/Forgot/ForgotPassword\";\r\nimport ReportsContainer from \"./Pages/Reports/ReportsContainer\";\r\nimport Profile from \"./Pages/Profile/Profile\";\r\nimport EditActivity from \"./Pages/Activity/EditActivity/EditActivity\";\r\nimport LessonsContainer from \"./Pages/Lessons/LessonsContainer\";\r\nimport ProgramsContainer from \"./Pages/Programs/ProgramsContainer\";\r\nimport SearchResultContainer from \"./Pages/SearchResult/SearchResultContainer\";\r\nimport NotificationsContainer from \"./Pages/Notifications/NotificationsContainer\";\r\nimport AddProgram from \"./Pages/Programs/AddProgram/AddProgram\";\r\nimport ResourcesContainer from \"./Pages/Activites/Resources/ResourcesContainer\";\r\nimport ProgramAttendeesContainer from \"./Pages/Programs/ProgramDetails/ProgramAttendees/ProgramAttendeesContainer\";\r\nimport ProgramViewContainer from \"./Pages/Programs/ProgramDetails/ProgramView/ProgramViewContainer\";\r\nimport AddCourse from \"./Pages/Courses/AddCourse/AddCourse\";\r\n\r\nconst StyledContentContainer = styled.div`\r\n  width: 100%;\r\n  direction: ${({ direction }) => direction};\r\n`;\r\n\r\nconst App = (props) => {\r\n  const { t, i18n } = useTranslation();\r\n\r\n  const changeLanguage = (language) => {\r\n    switch (language) {\r\n      case \"en\": {\r\n        props.setDirection(\"ltr\");\r\n        break;\r\n      }\r\n      case \"ar\": {\r\n        props.setDirection(\"rtl\");\r\n        break;\r\n      }\r\n      default: {\r\n        props.setDirection(\"ltr\");\r\n        break;\r\n      }\r\n    }\r\n    i18n.changeLanguage(language);\r\n  };\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <StyledContentContainer direction={props.direction}>\r\n        <NavbarContainer changeLanguage={changeLanguage} />\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to=\"/home\" />\r\n          </Route>\r\n          <Route exact path=\"/home\" render={() => <LoadDataRouter Component={HomeContainer} />}/>\r\n          <Route exact path=\"/courses\" render={() => <LoadDataRouter Component={CoursesContainer} />}/>\r\n          <Route path=\"/courses/view/:courseId\" render={() => <LoadDataRouter Component={LessonsContainer} />}/>\r\n          <Route path=\"/courses/add\" render={() => <LoadDataRouter Component={AddCourse} />}/>\r\n          <Route path=\"/activities/view/:activityId\" render={() => <LoadDataRouter Component={Activity} />}/>\r\n          <Route exact path=\"/activities\" render={() => <LoadDataRouter Component={ActivitiesContainer} />}/>\r\n          <Route path=\"/activities/add\" render={() => <LoadDataRouter Component={AddActivity} />}/>\r\n          <Route path=\"/activities/edit/:activityId\" render={() => <LoadDataRouter Component={EditActivity} />}/>\r\n          <Route exact path=\"/programs\" render={() => <LoadDataRouter Component={ProgramsContainer} />}/>\r\n          <Route path=\"/programs/add\" render={() => <LoadDataRouter Component={AddProgram} />}/>\r\n          <Route path=\"/programs/:programId/attendees\" render={() => <LoadDataRouter Component={ProgramAttendeesContainer} />}/>\r\n          <Route path=\"/programs/:programId\" render={() => <LoadDataRouter Component={ProgramViewContainer} />}/>\r\n          <Route path=\"/profile\" render={() => <LoadDataRouter Component={Profile} />}/>\r\n          <Route path=\"/login\" render={() => <Login />} />\r\n          <Route path=\"/forgot_password\" render={() => <ForgotPassword />} />\r\n          <Route path=\"/report\" render={() => <LoadDataRouter Component={ReportsContainer} />}/>\r\n          <Route path=\"/search\" render={() => <LoadDataRouter Component={SearchResultContainer} />}/>\r\n          <Route path=\"/home/notifications\" render={() => <LoadDataRouter Component={NotificationsContainer} />}/>\r\n          <Route path=\"/resources\" render={() => <LoadDataRouter Component={ResourcesContainer} />}/>\r\n        </Switch>\r\n      </StyledContentContainer>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nlet mapStateToProps = (state) => ({\r\n  direction: state.common.direction,\r\n  currentLanguage: state.common.currentLanguage,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  setDirection,\r\n  setCurrentLanguage,\r\n})(App);\r\n","C:\\Users\\Nadai\\lxp-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Nadai\\lxp-frontend\\src\\Utils\\i18n.js",[],"C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Courses\\CoursesContainer.jsx",["453"],"import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Courses from './Courses';\r\nimport { getCourses } from '../../Store/Reducers/courses';\r\nimport Preloader from '../Common/Preloader/Preloader';\r\n\r\nconst CoursesContainer = (props) => {\r\n    useEffect(()=>{\r\n        if(props.page && props.take){\r\n            props.getCourses(props.user.organizationId, props.page, props.take);\r\n        }\r\n    },[]);\r\n\r\n    const [all, setAll] = useState(true);\r\n    const [completed, setCompleted] = useState(true);\r\n    const [inProgress, setInProgress] = useState(true);\r\n    const [notStarted, setNotStarted] = useState(true);\r\n\r\n    const handleAll = () => {\r\n        let newAll = !all;\r\n        setAll(!all);\r\n        if(newAll){\r\n            setCompleted(true);\r\n            setInProgress(true);\r\n            setNotStarted(true);\r\n            return;\r\n        }else{\r\n            setCompleted(false);\r\n            setInProgress(false);\r\n            setNotStarted(false);\r\n        }\r\n    } \r\n\r\n    useEffect(()=>{\r\n        if(completed && inProgress && notStarted){\r\n            setAll(true);\r\n        }else{\r\n            setAll(false)\r\n        }\r\n    },[completed, inProgress, notStarted]);\r\n\r\n    return(\r\n        <>\r\n            {props.isFetching ? <Preloader/> :\r\n            <Courses courses={props.courses} direction={props.direction}\r\n                    all={all} setAll={handleAll}\r\n                    completed={completed} setCompleted={setCompleted}\r\n                    inProgress={inProgress} setInProgress={setInProgress}\r\n                    notStarted={notStarted} setNotStarted={setNotStarted}/>}\r\n        </>\r\n        \r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    courses: state.courses.courses,\r\n    user: state.user.user,\r\n    isFetching: state.common.isFetching,\r\n    page: state.courses.page,\r\n    take: state.courses.take,\r\n    direction: state.common.direction\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    getCourses\r\n})(CoursesContainer);","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Activity\\Activity.jsx",["454","455","456","457","458","459","460"],"import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ProgressBar from '../Common/ProgressBar/ProgressBar';\r\nimport classes from './Activity.module.css';\r\nimport { setCurrentActivity } from '../../Store/Reducers/activities';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport Preloader from '../Common/Preloader/Preloader';\r\nimport { setIsFetching } from '../../Store/Reducers/common';\r\nimport { getActivity } from '../../Store/Reducers/activities';\r\nimport { useTranslation } from 'react-i18next';\r\nimport styled from 'styled-components';\r\nimport DeleteActivity from './DeleteActivity/DeleteActivity';\r\nimport Chat from './Chat/Chat';\r\n\r\nconst StyledMarkButton = styled.button`\r\n    margin-left: ${({ direction }) => direction === \"ltr\" ? \"8px\" : \"0\"};\r\n    margin-right: ${({ direction }) => direction === \"rtl\" ? \"8px\" : \"0\"};\r\n`;\r\n\r\nconst StyledLeftSide = styled.div`\r\n    margin-left: ${({ direction }) => direction === \"rtl\" ? \"30px\" : \"0\"};\r\n    margin-right: ${({ direction }) => direction === \"ltr\" ? \"30px\" : \"0\"};\r\n`;\r\n\r\nconst StyledProgressSpan = styled.span`\r\n    margin-left: ${({ direction }) => direction === \"ltr\" ? \"13px\" : \"0\"};\r\n    margin-right: ${({ direction }) => direction === \"rtl\" ? \"13px\" : \"0\"};\r\n`;\r\n\r\nconst Activity = (props) => {\r\n    const {t, i18n} = useTranslation();\r\n    let widthProgressBar = 83;\r\n    let heightProgressBar = 16;\r\n\r\n    const [isShowDeleteModal, setIsShowDeleteModal] = useState(false);\r\n    \r\n    useEffect(()=>{\r\n            let activityId = props.match.params.activityId;\r\n            props.getActivity(activityId, props.user.selectedOrganizationId);\r\n    },[]);\r\n\r\n    const [daysLag, setDaysLag] = useState(0);\r\n    useEffect(()=>{\r\n        if(props.activity){\r\n            const endTime = new Date(props.activity.end);\r\n            const now = new Date();\r\n\r\n            var newDaysLag = Math.ceil(Math.abs(endTime.getTime() - now.getTime()) / (1000 * 3600 * 24));\r\n            \r\n            if(endTime >= now){\r\n                newDaysLag = newDaysLag + t(\"activityMini.daysLeft\");\r\n            }else{\r\n                newDaysLag = newDaysLag + t(\"activityMini.daysAgo\");\r\n            }\r\n            setDaysLag(newDaysLag);\r\n        }\r\n        \r\n    },[props.activity]);\r\n    \r\n\r\n    return(\r\n        <div className={classes.main}>\r\n            {!props.activity ? <Preloader/> :\r\n            <div className={classes.container}>\r\n                {isShowDeleteModal && <DeleteActivity setIsShowDeleteModal={setIsShowDeleteModal}/>}\r\n                <StyledLeftSide className={classes.leftSide} direction={props.direction}>\r\n                    <div className={classes.block + \" \" + classes.withoutPadding}>\r\n                        <div className={classes.infoBlock}>\r\n                            <p>{t(\"home.statistic.infoUser.welcome\")}</p>\r\n                            <h3>{props.user.name}</h3>\r\n                        </div>\r\n                        <div className={classes.infoBlock}>\r\n                            <label>{t(\"home.statistic.infoUser.learningHours\")}</label>\r\n                            <span><strong>34 {t(\"home.statistic.infoUser.hours\")}</strong> {t(\"home.statistic.infoUser.and\")} <strong>54 {t(\"home.statistic.infoUser.mins\")}</strong></span>\r\n                        </div>\r\n                        <hr className={classes.line}/>\r\n                        <div className={classes.infoBlock}>\r\n                            <label>{t(\"home.statistic.infoUser.learningGoal\")}</label>\r\n                            <span><strong>34 {t(\"home.statistic.infoUser.hours\")}</strong></span>\r\n                        </div>\r\n                    </div>\r\n                    {/* <div className={classes.block + \" \" + classes.programs}>\r\n                        <div className={classes.programsHeader}>\r\n                            <h4>{t(\"home.statistic.programs.related\")}</h4>\r\n                            <NavLink to=\"/programs\">{t(\"home.statistic.programs.viewAll\")}</NavLink>\r\n                        </div>\r\n                        <div className={classes.progressBlock}>\r\n                            <label>Sketching out ideas for securin....</label>\r\n                            <div className={classes.progressContainer}>\r\n                                <ProgressBar width={widthProgressBar} height={heightProgressBar} progress={78}/>\r\n                                <span>78%</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.progressBlock}>\r\n                            <label>Team brainstorming</label>\r\n                            <div className={classes.progressContainer}>\r\n                                <ProgressBar width={widthProgressBar} height={heightProgressBar} progress={42}/>\r\n                                <span>42%</span>\r\n                            </div>\r\n                        </div>\r\n                    </div> */}\r\n                </StyledLeftSide>\r\n                <div className={classes.rightSide}>\r\n                    <div className={classes.tabHeader}>\r\n                        <h1>{t(\"activityDetails.title\")}</h1>\r\n                        <span>{props.activity.isPublic ? t(\"activityDetails.public\") : t(\"activityDetails.private\")}</span>\r\n                    </div>\r\n                    <div className={classes.activity}>\r\n                        <div className={classes.activityHeader}>\r\n                            <span className={classes.fullPath}><span className={classes.path}>Cybersecurity awareness &gt;</span> Cybersecurity</span>\r\n                            <div className={classes.headerRightSide}>\r\n                                <NavLink to={`/activities/edit/${props.match.params.activityId}`} className={classes.editBut}>\r\n                                    <i className=\"far fa-edit\"></i>\r\n                                    {t(\"activityDetails.edit\")}\r\n                                </NavLink>\r\n                                <button className={classes.removeBut} onClick={()=>setIsShowDeleteModal(true)}>\r\n                                    <i className=\"far fa-trash-alt\"></i>\r\n                                    {t(\"activityDetails.delete\")}\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <h2>{props.activity.name}</h2>\r\n                        <div className={classes.activityFoot}>\r\n                            <div className={classes.activityProgressBlock}>\r\n                                {/* <ProgressBar width={widthProgressBar} height={heightProgressBar} progress={props.activity.totalPoints}/>\r\n                                <StyledProgressSpan direction={props.direction}>{props.activity.totalPoints}%</StyledProgressSpan> */}\r\n                                <span>{t(\"activityDetails.points\")} {props.activity.totalPoints}</span>\r\n                            </div>\r\n                            <div className={classes.activityFootRight}>\r\n                                <span>{daysLag}</span>\r\n                                <StyledMarkButton className={classes.mark} direction={props.direction}>{t(\"activityDetails.butComplete\")}</StyledMarkButton>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.videoBlock}>\r\n                        <div className={classes.video}>\r\n                            <button>\r\n                                <i className=\"fas fa-play-circle\"></i>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.chatBlock}>\r\n                        <h1>{props.activity.isPublic ? t(\"activityDetails.discuss\") : t(\"activityDetails.contact\")}</h1>\r\n                        <Chat currentUser={props.user}/>\r\n                    </div>\r\n                </div>\r\n            </div>}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nlet WithUrlDataContainerComponent = withRouter(Activity);\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isFetching: state.common.isFetching,\r\n    activity: state.activities.currentActivity,\r\n    activities: state.activities.activities,\r\n    user: state.user.user,\r\n    direction: state.common.direction\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    setCurrentActivity,\r\n    setIsFetching,\r\n    getActivity\r\n})(WithUrlDataContainerComponent);","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Home\\HomeContainer.jsx",["461","462","463"],"import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Preloader from '../Common/Preloader/Preloader';\r\nimport Home from './Home';\r\nimport { getCourses, setJoinedCourses } from '../../Store/Reducers/courses';\r\nimport { getActivities } from '../../Store/Reducers/activities';\r\n\r\nconst HomeContainer = (props) => {\r\n    useEffect(()=>{\r\n        if(props.user.employeeId){\r\n            props.getActivities(props.user.employeeId, props.user.userId, props.user.organizationId);\r\n        }\r\n    },[props.user.employeeId]);\r\n\r\n    useEffect(()=>{\r\n        props.setJoinedCourses(props.user.joinedCourses);\r\n    },[props.user.joinedCourses]);\r\n    \r\n    return(\r\n        <>\r\n            {props.isFetching && <Preloader/>}\r\n            {props.isAuth && <Home user={props.user}\r\n                                    courses={props.courses}\r\n                                    activities={props.activities}\r\n                                    direction={props.direction}\r\n                                    programs={props.programs}/>}\r\n        </>\r\n        \r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isFetching: state.common.isFetching,\r\n    user: state.user.user,\r\n    isAuth: state.user.isAuth,\r\n    courses: state.courses.joinedCourses,\r\n    activities: state.activities.activities,\r\n    page: state.courses.page,\r\n    take: state.courses.take,\r\n    direction: state.common.direction,\r\n    programs: state.programs.programs\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    getCourses,\r\n    getActivities,\r\n    setJoinedCourses\r\n})(HomeContainer);","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Navbar\\NavbarContainer.jsx",["464","465","466"],"import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Navbar from './Navbar';\r\nimport { getNotifications } from '../../Store/Reducers/notifications';\r\nimport { setCurrentLanguage } from '../../Store/Reducers/common';\r\n\r\nconst NavbarContainer = (props) => {\r\n    const [isOpenSearchModal, setIsOpenSearchModal] = useState(false);\r\n    const [isOpenNotificationsModal, setIsOpenNotificationsModal] = useState(false);\r\n    \r\n    useEffect(()=>{\r\n        props.getNotifications(props.currentPage, props.pageSize)\r\n    },[props.currentPage, props.pageSize]);\r\n\r\n    useEffect(()=>{\r\n        \r\n    },[props.currentRoute]);\r\n\r\n    return(\r\n        <>\r\n        {(props.currentRoute != \"/login\" && props.currentRoute != \"/forgot_password\") &&\r\n        <Navbar user={props.user} \r\n                changeLanguage={props.changeLanguage}\r\n                direction={props.direction}\r\n                setIsOpenSearchModal={setIsOpenSearchModal}\r\n                isOpenSearchModal={isOpenSearchModal}\r\n                totalUnreadNotificationsCount={props.totalUnreadNotificationsCount}\r\n                unreadNotifications={props.unreadNotifications}\r\n                setIsOpenNotificationsModal={setIsOpenNotificationsModal}\r\n                isOpenNotificationsModal={isOpenNotificationsModal}\r\n                setCurrentLanguage={props.setCurrentLanguage} \r\n                currentRoute={props.currentRoute}\r\n                />}\r\n        </>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    user: state.user.user,\r\n    direction: state.common.direction,\r\n    currentRoute: state.common.currentRoute,\r\n    unreadNotifications: state.notifications.unreadNotifications,\r\n    totalUnreadNotificationsCount: state.notifications.totalUnreadNotificationsCount,\r\n    currentPage: state.notifications.currentPage,\r\n    pageSize: state.notifications.pageSize,\r\n    notifications: state.notifications.notifications\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    getNotifications,\r\n    setCurrentLanguage\r\n})(NavbarContainer);","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Activity\\AddActivity\\AddActivity.jsx",["467","468","469","470","471","472","473","474","475","476"],"C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Activites\\ActivitiesContainer.jsx",["477"],"import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Activities from './Activities';\r\nimport { getActivities } from '../../Store/Reducers/activities';\r\nimport Preloader from '../Common/Preloader/Preloader';\r\nimport { useLayoutEffect } from 'react';\r\n\r\nconst ActivitiesContainer = (props) => {\r\n    useEffect(()=>{\r\n        if(props.user.employeeId){\r\n            props.getActivities(props.user.employeeId, props.user.userId, props.user.organizationId);\r\n        }  \r\n    },[props.user.employeeId]);\r\n\r\n    const [all, setAll] = useState(true);\r\n    const [completed, setCompleted] = useState(true);\r\n    const [inProgress, setInProgress] = useState(true);\r\n    const [notStarted, setNotStarted] = useState(true);\r\n    const [privateParam, setPrivateParam] = useState(true);\r\n\r\n    const handleAll = () => {\r\n        let newAll = !all;\r\n        setAll(!all);\r\n        if(newAll){\r\n            setCompleted(true);\r\n            setInProgress(true);\r\n            setNotStarted(true);\r\n            setPrivateParam(true);\r\n            return;\r\n        }else{\r\n            setCompleted(false);\r\n            setInProgress(false);\r\n            setNotStarted(false);\r\n            setPrivateParam(false);\r\n        }\r\n    } \r\n\r\n    useEffect(()=>{\r\n        if(completed && inProgress && notStarted && privateParam){\r\n            setAll(true);\r\n        }else{\r\n            setAll(false)\r\n        }\r\n    },[completed, inProgress, notStarted, privateParam]);\r\n\r\n\r\n    const [size, setSize] = useState([window.outerWidth, window.innerHeight]);\r\n    const [blockWidth, setBlockWidth] = useState(49);\r\n\r\n    useLayoutEffect(()=>{\r\n        function updateSize(){\r\n            setSize([window.outerWidth, window.innerHeight]);\r\n        }\r\n        window.addEventListener('resize', updateSize);\r\n        updateSize();\r\n        return () => window.removeEventListener('resize', updateSize);\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        if(size[0] > 700){\r\n            setBlockWidth(49);\r\n        }else{\r\n            setBlockWidth(100);\r\n        }\r\n    },[size]);\r\n\r\n\r\n    return(\r\n        <>\r\n            {props.isFetching ? <Preloader/> :\r\n            <>\r\n                {props.isAuth && \r\n                    <Activities activities={props.activities}\r\n                                direction={props.direction}\r\n                                blockWidth={blockWidth}\r\n                                all={all} setAll={handleAll}\r\n                                completed={completed} setCompleted={setCompleted}\r\n                                inProgress={inProgress} setInProgress={setInProgress}\r\n                                notStarted={notStarted} setNotStarted={setNotStarted}\r\n                                privateParam={privateParam} setPrivateParam={setPrivateParam}/>}\r\n            </>}\r\n        </>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isFetching: state.common.isFetching,\r\n    user: state.user.user,\r\n    activities: state.activities.activities,\r\n    isAuth: state.user.isAuth,\r\n    direction: state.common.direction\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    getActivities\r\n})(ActivitiesContainer);","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Reports\\ReportsContainer.jsx",["478","479","480"],"import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Preloader from '../Common/Preloader/Preloader';\r\nimport Reports from './Reports';\r\nimport { getActivities } from '../../Store/Reducers/activities';\r\nimport { setJoinedCourses } from '../../Store/Reducers/courses';\r\n\r\nconst ReportsContainer = (props) => {\r\n    useEffect(()=>{\r\n        if(props.user.employeeId){\r\n            props.getActivities(props.user.employeeId, props.user.userId, props.user.organizationId);\r\n            \r\n        }\r\n    },[props.user.employeeId]);\r\n\r\n    useEffect(()=>{\r\n        props.setJoinedCourses(props.user.joinedCourses);\r\n    },[props.user.joinedCourses]);\r\n\r\n\r\n    return(\r\n        <>\r\n            {props.isFetching ? <Preloader/> : <>\r\n            {   <Reports user={props.user}\r\n                            courses={props.courses}\r\n                            activities={props.activities}\r\n                            direction={props.direction}\r\n                            programs={props.programs}/>} </>}\r\n        </>\r\n        \r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isFetching: state.common.isFetching,\r\n    user: state.user.user,\r\n    isAuth: state.user.isAuth,\r\n    courses: state.courses.joinedCourses,\r\n    activities: state.activities.currentActivity,\r\n    page: state.courses.page,\r\n    take: state.courses.take,\r\n    direction: state.common.direction,\r\n    programs: state.programs.programs\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    getActivities,\r\n    setJoinedCourses\r\n})(ReportsContainer);","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Profile\\Profile.jsx",["481"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport classes from './Profile.module.css';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { NavLink, Redirect, Route } from 'react-router-dom';\r\nimport ProfileInfo from './Info/ProfileInfo';\r\nimport ProfileEmail from './Email/ProfileEmail';\r\nimport ProfilePassword from './Password/ProfilePassword';\r\nimport ProfileNotifications from './Notifications/ProfileNotifications';\r\n\r\nconst Profile = (props) => {\r\n    const {t, i18n} = useTranslation();\r\n    return(\r\n        <div className={classes.main}>\r\n            <div className={classes.container}>\r\n                <h1>{t(\"profile.title\")}</h1>\r\n                <div className={classes.body}>\r\n                    <div className={classes.menu}>\r\n                        <div className={classes.menuItem}>\r\n                            <NavLink to=\"/profile/info\" activeClassName={classes.active}>{t(\"profile.tabs.info\")}</NavLink>\r\n                        </div>\r\n                        <div className={classes.menuItem}>\r\n                            <NavLink to=\"/profile/email\" activeClassName={classes.active}>{t(\"profile.tabs.email\")}</NavLink>\r\n                        </div>\r\n                        <div className={classes.menuItem}>\r\n                            <NavLink to=\"/profile/password\" activeClassName={classes.active}>{t(\"profile.tabs.password\")}</NavLink>\r\n                        </div>\r\n                        <div className={classes.menuItem}>\r\n                            <NavLink to=\"/profile/notifications\" activeClassName={classes.active}>{t(\"profile.tabs.notifications\")}</NavLink>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.content}>\r\n                        <Route exact path=\"/profile\">\r\n                            <Redirect to=\"/profile/info\"/>\r\n                        </Route>\r\n                        <Route path=\"/profile/info\" render={()=><ProfileInfo/>}/>\r\n                        <Route path=\"/profile/email\" render={()=><ProfileEmail/>}/>\r\n                        <Route path=\"/profile/password\" render={()=><ProfilePassword/>}/>\r\n                        <Route path=\"/profile/notifications\" render={()=><ProfileNotifications/>}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    user: state.user.user\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Profile);","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Activity\\EditActivity\\EditActivity.jsx",["482","483","484","485","486","487","488","489","490"],"import React, { useEffect, useLayoutEffect, useRef, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport classes from '../AddActivity/AddActivity.module.css';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { AuthInput, Calendar, TextAreaCustom } from '../../Common/FormControlls/FormControlls';\r\nimport { required } from '../../../Utils/validators';\r\nimport CustomSelect from '../../Common/Cutsom/Select/CustomSelect';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport { getActivity } from '../../../Store/Reducers/activities';\r\nimport styled from 'styled-components';\r\nimport ActivityFile from '../ActivityFile/ActivityFile';\r\nimport { FileDrop } from 'react-file-drop';\r\nimport uploadicon from '../../../Assets/Images/upload.svg';\r\n\r\nconst StyledLabel = styled.label`\r\n    margin-left: ${({ direction }) => \"30px\"};\r\n    margin-right: ${({ direction }) => \"30px\"};\r\n`;\r\n\r\nconst EditActivityForm = (props) => {\r\n    const {t, i18n} = useTranslation();\r\n    let maxLength = 300;\r\n\r\n    const [charactersLeft, setCharactersLeft] = useState(maxLength);\r\n\r\n    let disableDefValueOption = true;\r\n    let disableDefValueOptionText = t(\"addActivity.typeDef\");\r\n\r\n    let disableDefSupervisorOption = true;\r\n    let disableDefSupervisorOptionText = t(\"addActivity.supervisorDef\");\r\n\r\n    const [size, setSize] = useState([window.outerWidth, window.innerHeight]);\r\n    const [selectWidth, setSelectWidth] = useState(66);\r\n\r\n    useLayoutEffect(()=>{\r\n        function updateSize(){\r\n            setSize([window.outerWidth, window.innerHeight]);\r\n        }\r\n        window.addEventListener('resize', updateSize);\r\n        updateSize();\r\n        return () => window.removeEventListener('resize', updateSize);\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        if(size[0] > 568){\r\n            setSelectWidth(66);\r\n        }else{\r\n            setSelectWidth(100);\r\n        }\r\n    },[size]);\r\n\r\n\r\n    let handleTextArea = (e) => {\r\n        setCharactersLeft(maxLength - e.target.value.length);\r\n    }\r\n\r\n    let types = [\"type1\", \"type2\", \"type3\"];\r\n\r\n    let supervisorsOptions = ['sup1', 'sup2', 'sup3'];\r\n\r\n\r\n    const fileInputRef = useRef(null);\r\n\r\n\r\n\r\n    const onFileInputChange = (event) => {\r\n        const newFiles = [...props.files];\r\n        const newFilesToPush = [...event.target.files];\r\n        newFilesToPush.forEach(item => {\r\n            newFiles.push(item);\r\n        })\r\n        props.setFiles(newFiles);\r\n    }\r\n\r\n    const onTargetClick = () => {\r\n        fileInputRef.current.click();\r\n    }\r\n    const onDropHandler = (files, event) => {\r\n        const newFilesToPush = [...files];\r\n        const newFiles = [...props.files];\r\n        newFilesToPush.forEach(item => {\r\n            newFiles.push(item);\r\n        })\r\n        props.setFiles(newFiles);\r\n    }\r\n\r\n    const handleRemoveFile = (index) => {\r\n        const newFiles = [...props.files];\r\n        newFiles.forEach((item, i) => {\r\n            if(index === i){\r\n                newFiles.splice(index, 1);\r\n            }\r\n        });\r\n        props.setFiles(newFiles);\r\n    }\r\n    let viewFiles = []\r\n\r\n    viewFiles = props.files.map((f, index) => {\r\n        return <ActivityFile name={f.name} index={index} handleRemoveFile={handleRemoveFile}/>\r\n    })\r\n\r\n\r\n    return(\r\n        <form onSubmit={props.handleSubmit} className={classes.form}>\r\n            <div className={classes.field + \" \" + classes.inputField}>\r\n                <label className={classes.fieldLabel}>{t(\"addActivity.name\")}</label>\r\n                <Field component={AuthInput} placeholder={t(\"addActivity.namePlaceholder\")} name=\"name\"\r\n                    validate={[required]}/>\r\n            </div>\r\n            <div className={classes.field + \" \" + classes.inputField}>\r\n                <label className={classes.fieldLabel}>{t(\"addActivity.link\")}</label>\r\n                <Field component={AuthInput} name=\"link\"/>\r\n            </div>\r\n            {/* <div className={classes.field}>\r\n                <label className={classes.fieldLabel}>{t(\"addActivity.supervisor\")}</label>\r\n                <p></p>\r\n                <Field component={CustomSelect} options={supervisorsOptions} setFunction={props.setSupervisor} width={selectWidth} \r\n                        validate={[required]} name=\"supervisor\" disableDefValueOption={disableDefSupervisorOption} disableDefValueOptionText={disableDefSupervisorOptionText}/>\r\n            </div> */}\r\n            <div className={classes.field + \" \" + classes.inputField}>\r\n                <label className={classes.fieldLabel}>{t(\"addActivity.points\")}</label>\r\n                <Field component={AuthInput} name=\"points\"\r\n                    validate={[required]}/>\r\n            </div>\r\n            <div className={classes.field}>\r\n                <label className={classes.fieldLabel}>{t(\"addActivity.description\")}</label>\r\n                <Field component={TextAreaCustom} name=\"description\"\r\n                       maxLength={maxLength} left={charactersLeft} rows={1} onChange={handleTextArea}/>\r\n            </div>\r\n            <div className={classes.field}>\r\n                <label className={classes.fieldLabel}>{t(\"addActivity.date\")}</label>\r\n                <div className={classes.dates}>\r\n                    <Field component={Calendar} name=\"start\"/>\r\n                    <StyledLabel direction={props.direction}>{t(\"addActivity.to\")}</StyledLabel>\r\n                    <Field component={Calendar} name=\"end\"/>\r\n                </div>\r\n            </div>\r\n            <div className={classes.field}>\r\n                <label className={classes.fieldLabel}>{t(\"addActivity.type\")}</label>\r\n                <p></p>\r\n                <Field component={CustomSelect} options={types} setFunction={props.setType} width={selectWidth} \r\n                        validate={[required]} name=\"type\" disableDefValueOption={disableDefValueOption} disableDefValueOptionText={disableDefValueOptionText}/>\r\n            </div>\r\n            <div className={classes.field}>\r\n                <label className={classes.fieldLabel}>{t(\"addActivity.visibility\")}</label>\r\n                <div className={classes.radios}>\r\n                    <div className={classes.visibilityBlock}>\r\n                        <input type=\"radio\" name=\"visibility\" id=\"public\" onChange={e=>{props.setVisibility(e.target.value)}} value=\"public\"/>\r\n                        <label htmlFor={\"public\"}>Public</label>\r\n                        <div className={classes.check}></div>\r\n                    </div>\r\n                    <div className={classes.visibilityBlock}>\r\n                        <input type=\"radio\" name=\"visibility\" id=\"private\" checked onChange={e=>{props.setVisibility(e.target.value)}} value=\"private\"/>\r\n                        <label htmlFor={\"private\"}>Private</label>\r\n                        <div className={classes.check}></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={classes.field}>\r\n                <label className={classes.fieldLabel}>{t(\"addActivity.upload\")}</label>\r\n                <div className={classes.dragNdrop}>\r\n                    <input onChange={onFileInputChange}\r\n                    ref={fileInputRef}\r\n                    type=\"file\"\r\n                    className={classes.hidden} multiple/>\r\n                    <FileDrop onDrop={(files, event) => onDropHandler(files, event)} onTargetClick={onTargetClick} className={classes.drop} draggingOverFrameClassName={classes.onDrag} targetClassName={classes.dropInner}>\r\n                        <div className={classes.uploadBut}>\r\n                            <img src={uploadicon}/>\r\n                            <p>{t(\"addActivity.upload\")}</p>\r\n                        </div>\r\n                        <p className={classes.dragText}>{t(\"addActivity.drag\")}</p>\r\n                    </FileDrop>\r\n                </div>\r\n                {props.files.length > 0 && \r\n                    <div className={classes.files}>\r\n                        {viewFiles}\r\n                    </div>\r\n                }\r\n            </div>\r\n            <div className={classes.fieldBut}>\r\n                <button>{t(\"editActivity.title\")}</button>\r\n                <NavLink to={`/activities/view/${props.activityId}`}>{t(\"addActivity.cancel\")}</NavLink>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nlet EditActivityReduxForm = reduxForm({form: 'editActivity'})(EditActivityForm);\r\n\r\nEditActivityReduxForm = connect(\r\n    state => ({\r\n        initialValues: state.activities.currentActivity\r\n    }),{}\r\n)(EditActivityReduxForm);\r\n\r\nconst EditActivity = (props) => {\r\n    const {t, i18n} = useTranslation();\r\n    const [type, setType] = useState(\"\");\r\n    const [visibility, setVisibility] = useState(\"private\");\r\n    const [supervisor, setSupervisor] = useState(\"\");\r\n\r\n    const [files, setFiles] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        let activityId = props.match.params.activityId;\r\n        props.getActivity(activityId, props.user.selectedOrganizationId);\r\n    },[]);\r\n\r\n    let onSubmit = (formData) => {\r\n        console.log(formData);\r\n\r\n    }\r\n    return(\r\n        <div className={classes.main}>\r\n            {props.isFetching && <Preloader/>}\r\n            <div className={classes.header}>\r\n                <div className={classes.headerContainer}>\r\n                    <h1>{t(\"editActivity.title\")}</h1>\r\n                </div>\r\n            </div>\r\n            <div className={classes.formContainer}>\r\n                <EditActivityReduxForm onSubmit={onSubmit} setFiles={setFiles} files={files} setSupervisor={setSupervisor} setType={setType} visibility={visibility} setVisibility={setVisibility} activityId={props.match.params.activityId} direction={props.direction}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nlet WithUrlDataContainerComponent = withRouter(EditActivity);\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isFetching: state.common.isFetching,\r\n    user: state.user.user,\r\n    direction: state.common.direction\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    getActivity\r\n})(WithUrlDataContainerComponent);\r\n\r\n","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Lessons\\LessonsContainer.jsx",[],"C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Programs\\ProgramsContainer.jsx",["491"],"import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Programs from './Programs';\r\nimport { getPrograms } from '../../Store/Reducers/programs';\r\nimport Preloader from '../Common/Preloader/Preloader';\r\n\r\n\r\nconst ProgramsContainer = (props) => {\r\n    useEffect(()=>{\r\n        if(props.user.organizationId){\r\n            props.getPrograms(props.user.organizationId, props.pageId, props.perPage);\r\n        }\r\n    },[props.user]);\r\n\r\n    const [all, setAll] = useState(true);\r\n    const [completed, setCompleted] = useState(true);\r\n    const [inProgress, setInProgress] = useState(true);\r\n    const [notStarted, setNotStarted] = useState(true);\r\n\r\n    const handleAll = () => {\r\n        let newAll = !all;\r\n        setAll(!all);\r\n        if(newAll){\r\n            setCompleted(true);\r\n            setInProgress(true);\r\n            setNotStarted(true);\r\n            return;\r\n        }else{\r\n            setCompleted(false);\r\n            setInProgress(false);\r\n            setNotStarted(false);\r\n        }\r\n    } \r\n\r\n    useEffect(()=>{\r\n        if(completed && inProgress && notStarted){\r\n            setAll(true);\r\n        }else{\r\n            setAll(false)\r\n        }\r\n    },[completed, inProgress, notStarted]);\r\n\r\n    useEffect(()=>{\r\n        if(props.programs.length < 1){\r\n            setAll(false);\r\n            setCompleted(false);\r\n            setInProgress(false);\r\n            setNotStarted(false);\r\n        }\r\n    },[props.programs]);\r\n\r\n    return(\r\n        <>\r\n            {props.isFetching ? <Preloader/> :\r\n            <Programs programs={props.programs} \r\n                    direction={props.direction}\r\n                    all={all} setAll={handleAll}\r\n                    completed={completed} setCompleted={setCompleted}\r\n                    inProgress={inProgress} setInProgress={setInProgress}\r\n                    notStarted={notStarted} setNotStarted={setNotStarted}\r\n                    user={props.user}/>}\r\n        </>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    user: state.user.user,\r\n    programs: state.programs.programs,\r\n    isFetching: state.common.isFetching,\r\n    direction: state.common.direction,\r\n    pageId: state.programs.pageId,\r\n    perPage: state.programs.perPage\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    getPrograms\r\n})(ProgramsContainer);","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\SearchResult\\SearchResultContainer.jsx",["492","493","494"],"import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Preloader from '../Common/Preloader/Preloader';\r\nimport SearchResult from './SearchResult';\r\nimport { setSearchValue } from '../../Store/Reducers/common'\r\n\r\nconst SearchResultContainer = (props) => {\r\n    const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n    const [viewAll, setViewAll] = useState(true);\r\n    const [viewPrograms, setViewPrograms] = useState(true);\r\n    const [viewCourses, setViewCourses] = useState(true);\r\n    const [viewActivities, setViewActivities] = useState(true);\r\n\r\n    const handleViewAll = () => {\r\n        let newViewAll = !viewAll;\r\n        setViewAll(!viewAll);\r\n        if(newViewAll){\r\n            setViewPrograms(true);\r\n            setViewCourses(true);\r\n            setViewActivities(true);\r\n            return;\r\n        }else{\r\n            setViewPrograms(false);\r\n            setViewCourses(false);\r\n            setViewActivities(false);\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(viewActivities && viewCourses && viewPrograms){\r\n            setViewAll(true);\r\n        }else{\r\n            setViewAll(false)\r\n        }\r\n    },[viewPrograms, viewCourses, viewActivities]);\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        const urlParams = new URLSearchParams(window.location.search);\r\n        props.setSearchValue(urlParams.get(\"value\"));\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        console.log(\"search\")\r\n    },[props.searchValue]);\r\n\r\n    return(\r\n        <>\r\n            {props.isFetching ? <Preloader/> :\r\n            <SearchResult searchValue={props.searchValue}\r\n                        viewAll={viewAll} setViewAll={handleViewAll}\r\n                        viewCourses={viewCourses} setViewCourses={setViewCourses}\r\n                        viewPrograms={viewPrograms} setViewPrograms={setViewPrograms}\r\n                        viewActivities={viewActivities} setViewActivities={setViewActivities}\r\n                        direction={props.direction}/>}\r\n        </>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isFetching: state.common.isFetching,\r\n    searchValue: state.common.searchValue,\r\n    direction: state.common.direction\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    setSearchValue\r\n})(SearchResultContainer);","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Notifications\\NotificationsContainer.jsx",["495"],"import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Preloader from '../Common/Preloader/Preloader';\r\nimport Notifications from './Notifications';\r\nimport { getNotifications } from '../../Store/Reducers/notifications';\r\n\r\nconst NotificationsContainer = (props) => {\r\n    useEffect(()=>{\r\n        props.getNotifications(props.currentPage, props.pageSize);\r\n    },[props.pageSize, props.currentPage]);\r\n\r\n    return(\r\n        <>\r\n            {props.isFetching ? <Preloader/> :\r\n            <Notifications notifications={props.notifications}/>}\r\n        </>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isFetching: state.common.isFetching,\r\n    notifications: state.notifications.notifications,\r\n    currentPage: state.notifications.currentPage,\r\n    pageSize: state.notifications.pageSize,\r\n    \r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    getNotifications\r\n})(NotificationsContainer);","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Common\\LoadDataRouter\\LoadDataRouter.jsx",["496","497","498","499"],"import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { setCurrentRoute } from '../../../Store/Reducers/common';\r\nimport { getUserProfile, getProfile } from '../../../Store/Reducers/user';\r\nimport Login from '../../Auth/Login/Login';\r\nimport { getUnreadNotifications } from '../../../Store/Reducers/notifications';\r\n\r\nconst LoadDataRouter = ({Component, isAuth, setCurrentRoute,\r\n                        currentRoute, getUserProfile, getProfile, isStartData,\r\n                        getUnreadNotifications, user, limit, employeeId}) => {\r\n    useEffect(()=>{\r\n        if((localStorage.usertoken || sessionStorage.usertoken) && !isStartData){\r\n            if(employeeId){\r\n                getUserProfile(employeeId);\r\n            }else{\r\n                getProfile(localStorage.usertoken || sessionStorage.usertoken);\r\n            }\r\n            getUnreadNotifications(limit, user.organizationId);\r\n        }   \r\n    },[employeeId]);\r\n\r\n    useEffect(()=>{\r\n        setCurrentRoute(window.location.pathname);\r\n    },[window.location.pathname]);\r\n    \r\n    return(\r\n        <>\r\n            {(localStorage.usertoken || sessionStorage.usertoken) ? <Component/> : <Redirect to=\"/login\"/>}\r\n        </>\r\n        \r\n    )\r\n    \r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.user.isAuth,\r\n    currentRoute: state.common.currentRoute,\r\n    isStartData: state.user.isStartData,\r\n    user: state.user.user,\r\n    limit: state.notifications.limit,\r\n    employeeId: state.user.employeeId\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    setCurrentRoute,\r\n    getUserProfile,\r\n    getProfile,\r\n    getUnreadNotifications\r\n})(LoadDataRouter);","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Auth\\Login\\Login.jsx",["500","501","502"],"import React, { useEffect, useState } from 'react';\r\nimport classes from '../Auth.module.css';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport { AuthInput } from '../../Common/FormControlls/FormControlls';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { login } from '../../../Store/Reducers/user';\r\nimport { setCurrentRoute } from '../../../Store/Reducers/common';\r\nimport { isEmail, required } from '../../../Utils/validators';\r\n\r\nconst LoginForm = (props) => {\r\n    const {t, i18n} = useTranslation();\r\n    return(\r\n        <form className={classes.form} onSubmit={props.handleSubmit}>\r\n            <h3>{t(\"login.title\")}</h3>\r\n            <div className={classes.field}>\r\n                <label>{t(\"login.username\")}</label>\r\n                <Field component={AuthInput} placeholder={t(\"login.usernamePlaceholder\")} name=\"email\"\r\n                        validate={[required, isEmail]}/>\r\n            </div>\r\n            <div className={classes.field}>\r\n                <label>{t(\"login.password\")}</label>\r\n                <Field component={AuthInput} placeholder={t(\"login.passwordPlaceholder\")} name=\"password\" type=\"password\"\r\n                        validate={[required]}/>\r\n            </div>\r\n            <label className={classes.checkbox}>\r\n                <span className={classes.checkText}>{t(\"login.rememberMe\")}</span>\r\n                <input type=\"checkbox\"  onChange={()=>{props.setIsRememberMe(!props.isRememberMe)}} value={props.isRememberMe}/>\r\n                <span className={classes.checkmark}></span>\r\n            </label>\r\n            <NavLink to=\"/forgot_password\">{t(\"login.forgotPassword\")}</NavLink>\r\n            {props.error && <div className={classes.error}>{props.error}</div>}\r\n            <button>{t(\"login.login\")}</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form:'login'})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const [isRememberMe, setIsRememberMe] = useState(false);\r\n    const {t, i18n} = useTranslation();\r\n\r\n    useEffect(()=>{\r\n        props.setCurrentRoute(window.location.pathname);\r\n    },[]);\r\n\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, isRememberMe);\r\n    }\r\n    return(\r\n        <div className={classes.main}>\r\n            {(localStorage.usertoken || sessionStorage.usertoken) && <Redirect to=\"/\"/>}\r\n            <div className={classes.login}>\r\n                <h1>{t(\"login.header\")}</h1>\r\n                {props.isFetching && <Preloader/>}\r\n                <LoginReduxForm onSubmit={onSubmit} isRememberMe={isRememberMe} setIsRememberMe={setIsRememberMe}/>\r\n            </div>\r\n            <div className={classes.back}>\r\n                <div></div>\r\n                <div className={classes.green}></div>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isFetching: state.common.isFetching,\r\n    isAuth: state.user.isAuth\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    login,\r\n    setCurrentRoute\r\n})(Login);\r\n\r\n\r\n\r\n","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Auth\\Forgot\\ForgotPassword.jsx",["503","504","505"],"import React, { useEffect } from 'react';\r\nimport classes from '../Auth.module.css';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { AuthInput } from '../../Common/FormControlls/FormControlls';\r\nimport { required, passValidationMatch } from '../../../Utils/validators';\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport { connect } from 'react-redux';\r\nimport { setCurrentRoute } from '../../../Store/Reducers/common';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst ForgotPasswordForm = (props) => {\r\n    const {t, i18n} = useTranslation();\r\n    return(\r\n        <form className={classes.form} onSubmit={props.handleSubmit}>\r\n            <h3>{t(\"forgotPassword.title\")}</h3>\r\n            <div className={classes.field}>\r\n                <label>{t(\"forgotPassword.oldPassword\")}</label>\r\n                <Field component={AuthInput} placeholder={t(\"forgotPassword.oldPassword\")} name=\"oldPassword\" type=\"password\"\r\n                    validate={[required]}/>\r\n            </div>\r\n            <div className={classes.field}>\r\n                <label>{t(\"forgotPassword.newPassword\")}</label>\r\n                <Field component={AuthInput} placeholder={t(\"forgotPassword.newPassword\")} name=\"newPassword\" type=\"password\"\r\n                    validate={[required]}/>\r\n            </div>\r\n            <div className={classes.field}>\r\n                <label>{t(\"forgotPassword.repeatPassword\")}</label>\r\n                <Field component={AuthInput} placeholder={t(\"forgotPassword.repeatPassword\")} name=\"repeatPassword\" type=\"password\"\r\n                    validate={[required, passValidationMatch]}/>\r\n            </div>\r\n            {props.error && <div className={classes.error}>{props.error}</div>}\r\n            <button>{t(\"forgotPassword.submit\")}</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ForgotPasswordReduxForm = reduxForm({form: 'forgotPass'})(ForgotPasswordForm);\r\n\r\nconst ForgotPassword = (props) => {\r\n    const {t, i18n} = useTranslation();\r\n\r\n    const onSubmit = (formData) => {\r\n        console.log(formData);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        props.setCurrentRoute(window.location.pathname);\r\n    },[]);\r\n\r\n    return(\r\n        <div className={classes.main}>\r\n            {(localStorage.usertoken || sessionStorage.usertoken) && <Redirect to=\"/\"/>}\r\n            <div className={classes.login}>\r\n                <h1>{t(\"forgotPassword.header\")}</h1>\r\n                {props.isFetching && <Preloader/>}\r\n                <ForgotPasswordReduxForm onSubmit={onSubmit}/>\r\n            </div>\r\n            <div className={classes.back}>\r\n                <div></div>\r\n                <div className={classes.green}></div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isFetching: state.common.isFetching,\r\n    isAuth: state.user.isAuth\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    setCurrentRoute\r\n})(ForgotPassword);","C:\\Users\\Nadai\\lxp-frontend\\src\\Utils\\validators.js",["506"],"export const required = (value) =>{\r\n    if(value) return undefined;\r\n    \r\n    return 'The field is required!';\r\n}\r\n\r\nexport const foo = console.log;\r\n\r\nexport const isEmail = (value) => {\r\n    let rep = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\r\n    if(rep.test(value)){\r\n        return undefined;\r\n    }\r\n    return 'Incorrect email!';   \r\n}\r\nexport const passValidationMatch = (value, allValues) => {\r\n    if(value !== allValues.newPassword) return `Passwords didn't match!`;\r\n    return undefined;\r\n}\r\n\r\nexport const emailValidationMatch = (value, allValues) => {\r\n    if(value !== allValues.newEmail) return `Emails didn't match!`;\r\n    return undefined;\r\n}","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Common\\FormControlls\\FormControlls.js",["507"],"import React, { useState } from 'react';\r\nimport classes from './FormControlls.module.css';\r\nimport { useTranslation } from 'react-i18next';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nexport const AuthInput = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return(\r\n        <div className={classes.formControll + \" \" + (hasError && classes.error)}>\r\n            <input {...input} {...props}/>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const TextAreaCustom = ({input, meta, ...props}) => {\r\n    const {t, i18n} = useTranslation();\r\n    const hasError = meta.touched && meta.error;\r\n    return(\r\n        <div className={(props.isBig ? classes.textareaBig : classes.textarea) + \" \" + (hasError && classes.error)}>\r\n            <textarea maxLength={props.maxLength} {...input} {...props} row={props.rows}/>\r\n            {hasError && <span>{meta.error}</span>}\r\n            <label>{props.maxLength ? (props.left + \" \" + t(\"addActivity.charactersLeft\")) : t(\"addProgram.labelTextArea\")}</label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Calendar = ({input, meta, ...props}) => {\r\n    const [startDate, setStartDate] = useState(new Date());\r\n\r\n    let handleDate = (date) => {\r\n        setStartDate(date);\r\n        input.onChange(date);\r\n    }\r\n\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return(\r\n        <div className={classes.calendar + \" \" + (hasError && classes.error)}>\r\n            <DatePicker selected={startDate} onChange={date => handleDate(date)}/>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Courses\\Courses.jsx",["508","509","510"],"import React, { useEffect, useState } from 'react';\r\nimport classes from './Courses.module.css';\r\nimport CourseItemView from './CourseItemView/CourseItemView';\r\nimport { useTranslation } from 'react-i18next';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledLabel = styled.label`\r\n    margin-left: ${({ direction }) => direction === \"rtl\" ? \"56px\" : \"0\"};\r\n    margin-right: ${({ direction }) => direction === \"ltr\" ? \"56px\" : \"0\"};\r\n`;\r\n\r\nconst Courses = (props) => {\r\n    const {t, i18n} = useTranslation();\r\n\r\n    let courses = props.courses.map(item => {\r\n        return <CourseItemView item={item} key={item.courseId}/>\r\n    })\r\n\r\n    return(\r\n        <div className={classes.main}>\r\n            <div className={classes.coursesHeader}>\r\n                <div className={classes.coursesHeaderContainer}>\r\n                    <h1>{t(\"courses.title\")}</h1>\r\n                    <div className={classes.filters}>\r\n                        <StyledLabel className={classes.filter} direction={props.direction}>\r\n                            <span className={classes.filterText}>{t(\"courses.filters.all\")}</span>\r\n                            <input type=\"checkbox\" onChange={()=>{props.setAll()}} checked={props.all}/>\r\n                            <span className={classes.checkmark}></span>\r\n                        </StyledLabel>\r\n                        <StyledLabel className={classes.filter} direction={props.direction}>\r\n                            <span className={classes.filterText}>{t(\"courses.filters.completed\")}</span>\r\n                            <input type=\"checkbox\" onChange={()=>{props.setCompleted(!props.completed)}} checked={props.completed}/>\r\n                            <span className={classes.checkmark}></span>\r\n                        </StyledLabel>\r\n                        <StyledLabel className={classes.filter} direction={props.direction}>\r\n                            <span className={classes.filterText}>{t(\"courses.filters.inProgress\")}</span>\r\n                            <input type=\"checkbox\" onChange={()=>{props.setInProgress(!props.inProgress)}} checked={props.inProgress}/>\r\n                            <span className={classes.checkmark}></span>\r\n                        </StyledLabel>\r\n                        <StyledLabel className={classes.filter} direction={props.direction}>\r\n                            <span className={classes.filterText}>{t(\"courses.filters.notStarted\")}</span>\r\n                            <input type=\"checkbox\" onChange={()=>{props.setNotStarted(!props.notStarted)}} checked={props.notStarted}/>\r\n                            <span className={classes.checkmark}></span>\r\n                        </StyledLabel>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={classes.itemsList}>\r\n                <div className={classes.containerItems}>\r\n                    {courses}\r\n                </div>  \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Courses;","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Home\\Home.jsx",[],"C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Navbar\\Navbar.jsx",["511","512","513"],"import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport classes from './Navbar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { programicon } from '../../Assets/Images/programicon.js';\r\nimport { myreporticon } from '../../Assets/Images/myreport.js';\r\nimport { activitiesicon } from '../../Assets/Images/activities.js';\r\nimport { coursesicon } from '../../Assets/Images/courses.js';\r\nimport { notificationicon } from '../../Assets/Images/notification.js';\r\nimport { homeicon } from '../../Assets/Images/homeicon.js';\r\nimport { learnersicon } from '../../Assets/Images/learners.js';\r\nimport { searchicon } from '../../Assets/Images/searchicon.js';\r\nimport Burger from './Burger/Burger';\r\nimport { useTranslation } from 'react-i18next';\r\nimport SearchModal from '../Common/SearchModal/SearchModal';\r\nimport ProfileMenu from './ProfileMenu/ProfileMenu';\r\nimport NotificationsModal from '../Notifications/NotificationsModal/NotificationsModal';\r\nimport {planeticon} from '../../Assets/Images/planet_icon'\r\nimport { useSelector } from 'react-redux';\r\nimport Submenu from './Submenu/Submenu';\r\nimport { ROLE_LEARNER, ROLE_MANAGER } from '../../Utils/constants';\r\n\r\nconst StyledLogoBlock = styled.div`\r\n    a span{\r\n        margin-left: ${({ direction }) => direction === \"ltr\" ? \"5px\" : \"0\"};\r\n        margin-right: ${({ direction }) => direction === \"rtl\" ? \"5px\" : \"0\"};\r\n    }\r\n`;\r\nconst StyledLinks = styled.div`\r\n    margin-left: ${({ direction }) => direction === \"ltr\" ? \"60px\" : \"0\"};\r\n    margin-right: ${({ direction }) => direction === \"rtl\" ? \"60px\" : \"0\"};\r\n`;\r\n\r\nconst StyledNotifications = styled.div`\r\n    margin-left: ${({ direction }) => direction === \"rtl\" ? \"15px\" : \"0\"};\r\n    margin-right: ${({ direction }) => direction === \"ltr\" ? \"15px\" : \"0\"};\r\n`;\r\n\r\nconst StyledBut = styled.button`\r\n    margin-left: ${({ direction }) => direction === \"rtl\" ? \"15px\" : \"0\"};\r\n    margin-right: ${({ direction }) => direction === \"ltr\" ? \"15px\" : \"0\"};\r\n`;\r\n\r\nconst Navbar = (props) => {\r\n    const {t, i18n} = useTranslation();\r\n    \r\n    const currentLanguage = useSelector((state)=> state.common.currentLanguage)\r\n\r\n    const language = () => {\r\n        if(currentLanguage === \"en\") {\r\n            props.setCurrentLanguage(\"ar\");\r\n            return \"ar\"\r\n        } else {\r\n            props.setCurrentLanguage(\"en\");\r\n            return \"en\"\r\n        }\r\n    }\r\n\r\n    const [isOpenProfileMenu, setIsOpenProfileMenu] = useState(false);\r\n\r\n    return(\r\n        <nav className={classes.main}>\r\n            <div className={classes.container}>\r\n                <div className={classes.leftSideNav}>\r\n                    <StyledLogoBlock className={classes.logoBlock} direction={props.direction}>\r\n                        <NavLink to=\"/home\">\r\n                            <div className={classes.logo}></div>\r\n                            <span>{t(\"navbar.logo\")}</span>\r\n                        </NavLink>\r\n                    </StyledLogoBlock>\r\n                    <StyledLinks className={classes.links} direction={props.direction}>\r\n                        <div className={classes.menuItem}>\r\n                            <NavLink to=\"/home\" activeClassName={classes.active}>\r\n                                {homeicon}\r\n                                {t(\"navbar.home\")}\r\n                            </NavLink>\r\n                        </div>\r\n                        <div className={classes.menuItem}>\r\n                            <NavLink to=\"/programs\" activeClassName={classes.active}>\r\n                                {programicon}\r\n                                {t(\"navbar.programs\")}\r\n                            </NavLink>\r\n                        </div>\r\n                        <div className={classes.menuItem}>\r\n                            {props.user.roleId === ROLE_LEARNER &&\r\n                            <NavLink to=\"/courses\" activeClassName={classes.active}>\r\n                                {coursesicon}\r\n                                {t(\"navbar.courses\")}\r\n                            </NavLink>}\r\n                            {props.user.roleId === ROLE_MANAGER && \r\n                            <NavLink to=\"/learners\" activeClassName={classes.active} className={classes.learnersLink}>\r\n                                {learnersicon}\r\n                                {t(\"navbar.learners\")}\r\n                            </NavLink>}\r\n                            \r\n                        </div>\r\n                        <div className={classes.menuItem}>\r\n                            <NavLink to=\"/activities\" activeClassName={classes.active}>\r\n                                {activitiesicon}\r\n                                {t(\"navbar.activities\")}\r\n                            </NavLink>\r\n                        </div>\r\n                        <div className={classes.menuItem}>\r\n                            <NavLink to=\"/report\" activeClassName={classes.active}>\r\n                                {myreporticon}\r\n                                {t(\"navbar.myreport\")}\r\n                            </NavLink>\r\n                        </div>\r\n                    </StyledLinks>\r\n                </div>\r\n                \r\n                \r\n                <div className={classes.rightSideNav}>\r\n                    <div className={classes.langBut}>\r\n                        <div className={classes.showLng}>\r\n                            {currentLanguage === \"en\" ? \"AR\" : \"EN\"}\r\n                        </div>\r\n                        <button onClick={()=>{props.changeLanguage(language())}}>\r\n                            {planeticon}\r\n                        </button>\r\n                    </div>\r\n                    <StyledBut className={classes.searchBut + \" \" + (props.isOpenSearchModal && classes.activeSearch)} direction={props.direction} onClick={()=>{props.setIsOpenSearchModal(!props.isOpenSearchModal)}}>\r\n                        {searchicon}\r\n                    </StyledBut>\r\n                    {props.isOpenSearchModal && <SearchModal setIsOpenSearchModal={props.setIsOpenSearchModal}/>}\r\n                    <StyledNotifications className={classes.notifications} direction={props.direction}>\r\n                        <button onClick={()=>{props.setIsOpenNotificationsModal(!props.isOpenNotificationsModal)}} className={classes.notBut + \" \" + (props.isOpenNotificationsModal && classes.activeModalNotifications)}>\r\n                            {notificationicon}\r\n                            {props.totalUnreadNotificationsCount > 0 &&\r\n                            <div className={classes.notificationsCount}>\r\n                                {props.totalUnreadNotificationsCount}\r\n                            </div>}\r\n                        </button>\r\n                    </StyledNotifications>\r\n                    {props.isOpenNotificationsModal && <NotificationsModal setIsOpenNotificationsModal={props.setIsOpenNotificationsModal}/>}\r\n                    <input type=\"checkbox\" hidden id=\"profileMenu\" className={classes.check} checked={isOpenProfileMenu}/>\r\n                    <label className={classes.userMenu} htmlFor=\"profileMenu\" onClick={()=>{setIsOpenProfileMenu(!isOpenProfileMenu)}}>\r\n                        {props.user.profilePhoto ? \r\n                        <img src={props.user.profilePhoto} className={classes.userPhoto}/> : \r\n                        <div className={classes.userDefault}></div>}\r\n                        <span>{props.user.name}</span>\r\n                        <div className={classes.profileMenuContainer}>\r\n                            {isOpenProfileMenu && <ProfileMenu setIsOpenProfileMenu={setIsOpenProfileMenu}/>}\r\n                        </div>\r\n                    </label>\r\n                    <div className={classes.burger}>\r\n                        <Burger changeLanguage={props.changeLanguage} language={language} currentLanguage={currentLanguage}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            \r\n\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Activites\\Activities.jsx",["514","515","516"],"import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport classes from './Activities.module.css';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ActivityItem from './ActivityItem/ActivityItem';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst StyledLabel = styled.label`\r\n    margin-left: ${({ direction }) => direction === \"rtl\" ? \"56px\" : \"0\"};\r\n    margin-right: ${({ direction }) => direction === \"ltr\" ? \"56px\" : \"0\"};\r\n`;\r\n\r\nconst Activities = (props) => {\r\n    const {t, i18n} = useTranslation();\r\n\r\n    props.activities.sort(function(a,b){\r\n        return new Date(b.end) - new Date(a.end);\r\n    });\r\n\r\n    let activities = props.activities.map(item => {\r\n        return <ActivityItem item={item} key={item.activityId} width={props.blockWidth}/>\r\n    });\r\n\r\n    return(\r\n        <div className={classes.main}>\r\n            <div className={classes.header}>\r\n                <div className={classes.headerContainer}>\r\n                    <div className={classes.headerHeader}>\r\n                        <h1>{t(\"activities.title\")}</h1>\r\n                        <NavLink to=\"/activities/add\">\r\n                            <div>\r\n                                <span>+</span>\r\n                            </div>\r\n                            {t(\"activities.addActivityBut\")}\r\n                        </NavLink>\r\n                    </div>\r\n                    <div className={classes.filters}>\r\n                        <StyledLabel className={classes.filter} direction={props.direction}>\r\n                            <span className={classes.filterText}>{t(\"activities.filters.all\")}</span>\r\n                            <input type=\"checkbox\" onChange={()=>{props.setAll()}} value={props.all} checked={props.all}/>\r\n                            <span className={classes.checkmark}></span>\r\n                        </StyledLabel>\r\n                        <StyledLabel className={classes.filter} direction={props.direction}>\r\n                            <span className={classes.filterText}>{t(\"activities.filters.completed\")}</span>\r\n                            <input type=\"checkbox\" onChange={()=>{props.setCompleted(!props.completed)}} checked={props.completed}/>\r\n                            <span className={classes.checkmark}></span>\r\n                        </StyledLabel>\r\n                        <StyledLabel className={classes.filter} direction={props.direction}>\r\n                            <span className={classes.filterText}>{t(\"activities.filters.inProgress\")}</span>\r\n                            <input type=\"checkbox\" onChange={()=>{props.setInProgress(!props.inProgress)}} checked={props.inProgress}/>\r\n                            <span className={classes.checkmark}></span>\r\n                        </StyledLabel>\r\n                        <StyledLabel className={classes.filter} direction={props.direction}>\r\n                            <span className={classes.filterText}>{t(\"activities.filters.notStarted\")}</span>\r\n                            <input type=\"checkbox\" onChange={()=>{props.setNotStarted(!props.notStarted)}} checked={props.notStarted}/>\r\n                            <span className={classes.checkmark}></span>\r\n                        </StyledLabel>\r\n                        <StyledLabel className={classes.filter} direction={props.direction}>\r\n                            <span className={classes.filterText}>{t(\"activities.filters.private\")}</span>\r\n                            <input type=\"checkbox\" onChange={()=>{props.setPrivateParam(!props.privateParam)}} checked={props.privateParam}/>\r\n                            <span className={classes.checkmark}></span>\r\n                        </StyledLabel>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={classes.itemsList}>\r\n                <div className={classes.containerItems}>\r\n                    {activities}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Activities;","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Reports\\Reports.jsx",[],"C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Common\\Preloader\\Preloader.jsx",["517"],"import React from 'react';\r\nimport preloader from '../../../Assets/Common/preloader.svg';\r\nimport classes from './Preloader.module.css';\r\n\r\nconst Preloader = (props) => {\r\n    return(\r\n        <div className={classes.main}>\r\n            <img src={preloader}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Preloader;","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Common\\ProgressBar\\ProgressBar.jsx",[],"C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Activity\\DeleteActivity\\DeleteActivity.jsx",["518","519"],"import React from 'react';\r\nimport classes from './DeleteActivity.module.css';\r\nimport Aos from 'aos';\r\nimport 'aos/dist/aos.css';\r\nimport { useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport shield from '../../../Assets/Images/shield.svg';\r\n\r\nconst DeleteActivity = (props) => {\r\n    const {t, i18n} = useTranslation();\r\n\r\n    useEffect(() => {\r\n        Aos.init({ duration: 1000 });\r\n    }, []);\r\n\r\n    return(\r\n        <div className={classes.backGray}>\r\n            <div className={classes.modal} data-aos=\"fade-down\">\r\n                <button className={classes.close} onClick={()=>props.setIsShowDeleteModal(false)}>×</button>\r\n                <img src={shield}/>\r\n                <h1>{t(\"deleteActivity.title\")}</h1>\r\n                <span>{t(\"deleteActivity.sub\")}</span>\r\n                <div className={classes.buttons}>\r\n                    <button className={classes.del}>{t(\"deleteActivity.delete\")}</button>\r\n                    <p>&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n                    <button className={classes.cancel} onClick={()=>props.setIsShowDeleteModal(false)}>{t(\"deleteActivity.cancel\")}</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DeleteActivity;","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Activity\\Chat\\Chat.jsx",["520","521","522","523"],"import React, { useRef, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport classes from './Chat.module.css';\r\nimport { useTranslation } from 'react-i18next';\r\nimport send from '../../../Assets/Images/send.svg';\r\nimport attach from '../../../Assets/Images/attach.svg';\r\nimport Message from './Message/Message';\r\n\r\nconst Chat = (props) => {\r\n    const {t, i18n} = useTranslation();\r\n    const fileInputRef = useRef(null);\r\n\r\n    const [file, setFile] = useState(null);\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const onTargetClick = () => {\r\n        fileInputRef.current.click();\r\n    }\r\n\r\n    const onFileInputChange = (event) => {\r\n        setFile(event.target.files[0]);\r\n    }\r\n\r\n    const [tmpMessages, setTmpMessages] = useState([\r\n        {\r\n            text: \"Hello\",\r\n            user: props.currentUser,\r\n            itsMe: true\r\n        },\r\n        {\r\n            text: \"Muerto.\",\r\n            user: props.currentUser,\r\n            itsMe: true\r\n        },\r\n        {\r\n            text: \"Muerto.\",\r\n            user: props.currentUser,\r\n            itsMe: false\r\n        }\r\n    ])\r\n\r\n\r\n    const sendMessage = (text) => {\r\n        const newTmpMessages = [...tmpMessages];\r\n        newTmpMessages.push({\r\n            text,\r\n            user: props.currentUser,\r\n            itsMe: true\r\n        });\r\n        setTmpMessages(newTmpMessages);\r\n        setMessage(\"\");\r\n    }\r\n\r\n    let messages = tmpMessages.map(msg => {\r\n        return <Message message={msg}/>\r\n    })\r\n\r\n    return(\r\n        <div className={classes.main}>\r\n            <div className={classes.messageList}>\r\n                {messages}\r\n            </div>\r\n            <div className={classes.inputBlock}>\r\n                <input placeholder={t(\"chat.messagePlaceholder\")} onChange={e => setMessage(e.target.value)} value={message}/>\r\n                \r\n                <div className={classes.buttons}>\r\n                    <button onClick={()=>{sendMessage(message)}}>\r\n                        <img src={send}/>\r\n                    </button>\r\n                    <button onClick={()=>{onTargetClick()}}>\r\n                        <img src={attach}/>\r\n                    </button>\r\n                </div>\r\n                <input type=\"file\" ref={fileInputRef} onChange={onFileInputChange} className={classes.hidden}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Chat);","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Activity\\ActivityFile\\ActivityFile.jsx",["524"],"import React from 'react';\r\nimport classes from './ActivityFile.module.css';\r\nimport pdficon from '../../../Assets/Images/pdficon.svg';\r\nimport styled from 'styled-components';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst StyledDiv = styled.div`\r\n    margin-left: ${({ direction }) => direction === \"ltr\" ? \"0\" : \"10px\"};\r\n    margin-right: ${({ direction }) => direction === \"rtl\" ? \"0\" : \"10px\"};\r\n`;\r\n\r\nconst StyledBut = styled.button`\r\n    left: ${({ direction }) => direction === \"ltr\" ? \"10px\" : \"-10px\"};\r\n`;\r\n\r\nconst ActivityFile = (props) => {\r\n    return(\r\n        <StyledDiv className={classes.main} direction={props.direction}>\r\n            <div className={classes.body}>\r\n                <StyledBut direction={props.direction} onClick={()=>{props.handleRemoveFile(props.index)}}>&#x2715;</StyledBut>\r\n                <img src={pdficon}/>\r\n            </div>\r\n            <span>{props.name}</span>\r\n        </StyledDiv>\r\n        \r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    direction: state.common.direction\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(ActivityFile);","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Profile\\Email\\ProfileEmail.jsx",["525","526"],"import React, { useEffect } from 'react';\r\nimport classes from './ProfileEmail.module.css';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { connect } from 'react-redux';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { AuthInput } from '../../Common/FormControlls/FormControlls';\r\nimport { emailValidationMatch, isEmail, required } from '../../../Utils/validators';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst ProfileEmailForm = (props) => {\r\n    const {t, i18n} = useTranslation();\r\n\r\n    useEffect(()=>{\r\n        props.initialize({\r\n            email: props.user.email\r\n        });\r\n    },[]);\r\n\r\n    return(\r\n        <form className={classes.form} onSubmit={props.handleSubmit}>\r\n            <div className={classes.field + \" \" + classes.fieldBorder}>\r\n                <label>{t(\"profile.profileEmail.current\")}</label>\r\n                <Field component={AuthInput} name=\"email\" validate={[required, isEmail]} disabled/>\r\n            </div>\r\n            <div className={classes.field}>\r\n                <label>{t(\"profile.profileEmail.new\")}</label>\r\n                <Field component={AuthInput} placeholder=\"mail@example.com\" name=\"newEmail\" validate={[required, isEmail]}/>\r\n            </div>\r\n            <div className={classes.field}>\r\n                <label>{t(\"profile.profileEmail.reenter\")}</label>\r\n                <Field component={AuthInput} placeholder=\"mail@example.com\" name=\"repeatEmail\" validate={[required, isEmail, emailValidationMatch]}/>\r\n            </div>\r\n            <div className={classes.fieldBut}>\r\n                <button>{t(\"profile.saveChanges\")}</button>\r\n                <NavLink to=\"/profile/info\">{t(\"profile.cancel\")}</NavLink>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet ProfileEmailReduxForm = reduxForm({form: \"profileEmail\"})(ProfileEmailForm);\r\n\r\nconst ProfileEmail = (props) => {\r\n    const onSubmit = (formData) => {\r\n        console.log(formData);\r\n    }\r\n\r\n    return(\r\n        <ProfileEmailReduxForm onSubmit={onSubmit} user={props.user}/>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    user: state.user.user\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(ProfileEmail);","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Profile\\Info\\ProfileInfo.jsx",["527","528","529","530"],"import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport classes from './ProfileInfo.module.css';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { AuthInput } from '../../Common/FormControlls/FormControlls';\r\nimport { required } from '../../../Utils/validators';\r\nimport default_user from '../../../Assets/Images/default_user.png';\r\nimport { NavLink } from 'react-router-dom';\r\nimport upload_icon from '../../../Assets/Images/upload-icon.svg';\r\n\r\nconst ProfileInfoForm = (props) => {\r\n    const {t, i18n} = useTranslation();\r\n\r\n    const [previewImage, setPreviewImage] = useState(null);\r\n\r\n    const handleImage = (e) => {\r\n        e.preventDefault()\r\n        setPreviewImage(window.URL.createObjectURL(e.target.files[0]));\r\n    }\r\n\r\n    const removeImage = (e) => {\r\n        e.preventDefault();\r\n        setPreviewImage(null);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        props.initialize({\r\n            name: props.user.name,\r\n            profilePhoto: props.user.profilePhoto\r\n        });\r\n    },[props.user]);\r\n\r\n    return(\r\n        <form className={classes.form} onSubmit={props.handleSubmit}>\r\n            <div className={classes.field}>\r\n                <label>{t(\"profile.profileInfo.fullname\")}</label>\r\n                <Field component={AuthInput} name=\"name\" validate={[required]}/>\r\n            </div>\r\n            <div className={classes.fieldImage}>\r\n                <label>{t(\"profile.profileInfo.photo\")}</label>\r\n                <label htmlFor=\"image\" className={classes.image}>\r\n                    <img src={previewImage ? previewImage : (props.user.profilePhoto ? props.user.profilePhoto : default_user)} className={classes.photo}/>\r\n                    <img src={upload_icon} className={classes.upload}/>\r\n                </label>\r\n                <Field component={\"input\"} type=\"file\" name=\"profilePhoto\" id=\"image\" hidden onChange={handleImage}/>\r\n                <button onClick={(e)=>{removeImage(e)}}>{t(\"profile.profileInfo.remove\")}</button>\r\n            </div>\r\n            <div className={classes.fieldBut}>\r\n                <button>{t(\"profile.saveChanges\")}</button>\r\n                <NavLink to=\"/profile/info\">{t(\"profile.cancel\")}</NavLink>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nlet ProfileInfoReduxForm = reduxForm({form: \"profileInfo\"})(ProfileInfoForm);\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n    const onSubmit = (formData) => {\r\n        console.log(formData);\r\n    }\r\n\r\n    return(\r\n        <ProfileInfoReduxForm onSubmit={onSubmit} user={props.user}/>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    user: state.user.user\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    \r\n})(ProfileInfo);","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Profile\\Password\\ProfilePassword.jsx",["531","532","533","534"],"import React, { useEffect, useState } from 'react';\r\nimport classes from './ProfilePassword.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { AuthInput } from '../../Common/FormControlls/FormControlls';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { passValidationMatch, required } from '../../../Utils/validators';\r\nimport { NavLink } from 'react-router-dom';\r\nimport hide from '../../../Assets/Images/hide.svg';\r\nimport show from '../../../Assets/Images/Show.svg';\r\n\r\nconst ProfilePasswordForm = (props) => {\r\n    const {t, i18n} = useTranslation();\r\n\r\n    useEffect(()=>{\r\n        props.initialize({\r\n            password: \"123\"\r\n        });\r\n    },[]);\r\n\r\n    const [passType, setPassType] = useState(\"password\");\r\n\r\n    const handleShowPass = () => {\r\n        if(passType === \"password\"){\r\n            setPassType(\"text\");\r\n            return;\r\n        }else{\r\n            setPassType(\"password\");\r\n        }\r\n    }\r\n\r\n    return(\r\n        <form className={classes.form} onSubmit={props.handleSubmit}>\r\n            <div className={classes.field + \" \" + classes.fieldBorder}>\r\n                <label>{t(\"profile.profilePass.current\")}</label>\r\n                <Field component={AuthInput} name=\"password\" validate={[required]} disabled type={passType}/>\r\n                <img src={passType === \"password\" ? hide : show} className={classes.icon + \" \" + (passType === \"text\" && classes.show)} onClick={()=>handleShowPass()}/>\r\n            </div>\r\n            <div className={classes.field}>\r\n                <label>{t(\"profile.profilePass.new\")}</label>\r\n                <Field component={AuthInput} name=\"newPassword\" validate={[required]} type={\"password\"}/>\r\n            </div>\r\n            <div className={classes.field}>\r\n                <label>{t(\"profile.profilePass.reenter\")}</label>\r\n                <Field component={AuthInput} name=\"repeatPassword\" validate={[required, passValidationMatch]} type={\"password\"}/>\r\n            </div>\r\n            <div className={classes.fieldBut}>\r\n                <button>{t(\"profile.saveChanges\")}</button>\r\n                <NavLink to=\"/profile/info\">{t(\"profile.cancel\")}</NavLink>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nlet ProfilePasswordReduxForm = reduxForm({form: 'profilePass'})(ProfilePasswordForm);\r\n\r\nconst ProfilePassword = (props) => {\r\n    const onSubmit = (formData) => {\r\n        console.log(formData);\r\n    }\r\n\r\n    return(\r\n        <ProfilePasswordReduxForm onSubmit={onSubmit}/>    \r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    \r\n});\r\n\r\nexport default connect(mapStateToProps, {})(ProfilePasswordReduxForm);\r\n\r\n","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Profile\\Notifications\\ProfileNotifications.jsx",["535"],"import React, { useState } from 'react';\r\nimport classes from './ProfileNotifications.module.css';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { connect } from 'react-redux';\r\n\r\nconst ProfileNotifications = (props) => {\r\n    const {t, i18n} = useTranslation();\r\n\r\n    const [enableEmail, setEnableEmail] = useState(false);\r\n    const [enableText, setEnableText] = useState(false);\r\n\r\n    let handleEmail = () => {\r\n        setEnableEmail(!enableEmail);\r\n    }\r\n    let handleText = () => {\r\n        setEnableText(!enableText);\r\n    }\r\n\r\n    return(\r\n        <div className={classes.main}>\r\n            <div className={classes.field}>\r\n                <label htmlFor=\"email\">{t(\"profile.notifications.email\")}</label>\r\n                <label className={classes.switch}>\r\n                    <input type=\"checkbox\" id=\"email\" onChange={handleEmail} value={enableEmail}/>\r\n                    <span className={classes.slider}></span>\r\n                </label>\r\n            </div>\r\n            <div className={classes.field}>\r\n                <label htmlFor=\"text\">{t(\"profile.notifications.text\")}</label>\r\n                <label className={classes.switch}>\r\n                    <input type=\"checkbox\" id=\"text\" onChange={handleText} value={enableText}/>\r\n                    <span className={classes.slider}></span>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(ProfileNotifications);","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Common\\Cutsom\\Select\\CustomSelect.jsx",["536"],"import React, { useEffect, useState } from 'react';\r\nimport classes from './CustomSelect.module.css';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledSelect = styled.div`\r\n    width: ${({ width }) => width + \"%\"};\r\n`;\r\n\r\nconst CustomSelect = ({input, meta, ...props}) => {\r\n    const [currentOption, setCurrentOption] = useState(props.disableDefValueOptionText ? props.disableDefValueOptionText : props.options[0]);\r\n    const [isOpenDropdown, setIsOpenDropdown] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        if(input){\r\n            input.value = \"\"\r\n        }\r\n       \r\n    },[]);\r\n\r\n    let handleSelect = (option) => {\r\n        setCurrentOption(option);\r\n        if(input){\r\n            input.onChange(option);\r\n        }\r\n        props.setFunction(option);\r\n        setIsOpenDropdown(false);\r\n    }\r\n\r\n    let options = props.options.map((option, index) => {\r\n        return <span key={index + \"opt\"} onClick={()=>{handleSelect(option)}} className={classes.option + \" \" + classes.detectClick} {...input}>{option}</span>\r\n    });\r\n\r\n    let hasError = null;\r\n\r\n    if(props.disableDefValueOption){\r\n        hasError = meta.touched && meta.error;\r\n    }\r\n\r\n    return(\r\n            <StyledSelect className={classes.main + \" \" + (hasError && classes.error) + \" \" + classes.detectClick} width={props.width}>\r\n                <input hidden type=\"checkout\" value={isOpenDropdown} className={classes.detectClick} defaultValue={isOpenDropdown}/>\r\n                {/* <input {...input} {...props} value={321}/> */}\r\n                <div className={classes.view + \" \" + classes.detectClick} onClick={()=>setIsOpenDropdown(!isOpenDropdown)}>\r\n                    <span className={classes.detectClick}>{currentOption}</span>\r\n                    <div className={classes.arrow + \" \" + (isOpenDropdown && classes.open) + \" \" + classes.detectClick}></div>\r\n                </div>\r\n                {isOpenDropdown && \r\n                <div className={classes.dropdown + \" \" + (isOpenDropdown && classes.openDropdown) + \" \" + classes.detectClick}>\r\n                    {props.disableDefValueOption && <span className={classes.option + \" \" + classes.disabled + \" \" + classes.detectClick}>{props.disableDefValueOptionText}</span>}\r\n                    {options}\r\n                </div>}\r\n                {props.disableDefValueOption && \r\n                    <>\r\n                        {hasError && <span>{meta.error}</span>}\r\n                    </>\r\n                }\r\n            </StyledSelect>  \r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    direction: state.common.direction\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(CustomSelect);","C:\\Users\\Nadai\\lxp-frontend\\src\\Assets\\Images\\programicon.js",[],"C:\\Users\\Nadai\\lxp-frontend\\src\\Assets\\Images\\myreport.js",[],"C:\\Users\\Nadai\\lxp-frontend\\src\\Assets\\Images\\notification.js",[],"C:\\Users\\Nadai\\lxp-frontend\\src\\Assets\\Images\\activities.js",[],"C:\\Users\\Nadai\\lxp-frontend\\src\\Assets\\Images\\homeicon.js",[],"C:\\Users\\Nadai\\lxp-frontend\\src\\Assets\\Images\\courses.js",[],"C:\\Users\\Nadai\\lxp-frontend\\src\\Assets\\Images\\searchicon.js",[],"C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Notifications\\Notifications.jsx",["537","538","539","540"],"import React from 'react';\r\nimport classes from './Notifications.module.css';\r\nimport { notificationicon } from '../../Assets/Images/notification';\r\nimport { useTranslation } from 'react-i18next';\r\nimport markasreadicon from '../../Assets/Images/asreadicon.svg';\r\nimport NotificationItem from './NotificationItem/NotificationItem';\r\n\r\nconst Notifications = (props) => {\r\n    const {t, i18n} = useTranslation();\r\n    \r\n    let newNotifications = [];\r\n    let notifications = [];\r\n\r\n    newNotifications = props.notifications.map(notify => {\r\n        if(!notify.isRead){\r\n            return <NotificationItem isRead={false} item={notify} key={notify.notificationId}/>\r\n        }\r\n    });\r\n\r\n    notifications = props.notifications.map(notify => {\r\n        if(notify.isRead){\r\n            return <NotificationItem isRead={true} item={notify} key={notify.notificationId}/>\r\n        }\r\n    })\r\n\r\n    return(\r\n        <div className={classes.main}>\r\n            <div className={classes.container}>\r\n                <div className={classes.header}>\r\n                    <div className={classes.headerSide}>\r\n                        {notificationicon}\r\n                        <h3>{t(\"notifications.title\")}</h3>\r\n                    </div>\r\n                    <div className={classes.headerSide}>\r\n                        <button>\r\n                            <img src={markasreadicon}/>\r\n                            <span>{t(\"notifications.markAllRead\")}</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.contentContainer}>\r\n                    <div className={classes.new}>\r\n                        {newNotifications}\r\n                    </div>\r\n                    <h3>{t(\"notifications.earlier\")}</h3>\r\n                    <div className={classes.itemsList}>\r\n                        {notifications}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Notifications;\r\n\r\n","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\SearchResult\\SearchResult.jsx",["541"],"import React from 'react';\r\nimport classes from './SearchResult.module.css';\r\nimport { useTranslation } from 'react-i18next';\r\nimport styled from 'styled-components';\r\nimport { coursesicon } from '../../Assets/Images/courses';\r\nimport { activitiesicon } from '../../Assets/Images/activities';\r\nimport { programicon } from '../../Assets/Images/programicon';\r\nimport { empty_state_icon } from '../../Assets/Images/empty_state_icon';\r\n\r\nconst StyledLabel = styled.label`\r\n    margin-left: ${({ direction }) => direction === \"rtl\" ? \"56px\" : \"0\"};\r\n    margin-right: ${({ direction }) => direction === \"ltr\" ? \"56px\" : \"0\"};\r\n`;\r\n\r\nconst SearchResult = (props) => {\r\n    const {t, i18n} = useTranslation();\r\n\r\n    let courses = [];\r\n    let programs = [];\r\n    let activities = [];\r\n\r\n    console.log(props.viewAll)\r\n\r\n    return(\r\n        <div className={classes.main}>\r\n            <div className={classes.header}>\r\n                <div className={classes.container}>\r\n                    <h1>{t(\"searchResult.title\")} <strong>{props.searchValue}</strong></h1>\r\n                    <div className={classes.filters}>\r\n                        <StyledLabel className={classes.filter} direction={props.direction}>\r\n                            <span className={classes.filterText}>{t(\"searchResult.all\")}</span>\r\n                            <input type=\"checkbox\" onChange={()=>{props.setViewAll(!props.viewAll)}} checked={props.viewAll} value={props.viewAll}/>\r\n                            <span className={classes.checkmark}></span>\r\n                        </StyledLabel>\r\n                        <StyledLabel className={classes.filter} direction={props.direction}>\r\n                            <span className={classes.filterText}>{t(\"searchResult.programs\")}</span>\r\n                            <input type=\"checkbox\" onChange={()=>{props.setViewPrograms(!props.viewPrograms)}} value={props.viewPrograms} checked={props.viewPrograms}/>\r\n                            <span className={classes.checkmark}></span>\r\n                        </StyledLabel>\r\n                        <StyledLabel className={classes.filter} direction={props.direction}>\r\n                            <span className={classes.filterText}>{t(\"searchResult.courses\")}</span>\r\n                            <input type=\"checkbox\" onChange={()=>{props.setViewCourses(!props.viewCourses)}} value={props.viewCourses} checked={props.viewCourses}/>\r\n                            <span className={classes.checkmark}></span>\r\n                        </StyledLabel>\r\n                        <StyledLabel className={classes.filter} direction={props.direction}>\r\n                            <span className={classes.filterText}>{t(\"searchResult.activities\")}</span>\r\n                            <input type=\"checkbox\" onChange={()=>{props.setViewActivities(!props.viewActivities)}} value={props.viewActivities} checked={props.viewActivities}/>\r\n                            <span className={classes.checkmark}></span>\r\n                        </StyledLabel>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={classes.content}>\r\n                <div className={classes.container}>\r\n                    {props.viewCourses &&\r\n                    <div className={classes.category}>\r\n                        <div className={classes.categoryHeader}>\r\n                            {coursesicon}\r\n                            <span>{t('searchResult.courses')}</span>\r\n                        </div>\r\n                        <div className={classes.itemsList}>\r\n                            {(courses.length > 0 && courses) ? courses : \r\n                                <div className={classes.empty}>\r\n                                    <div className={classes.emptyIcon}>\r\n                                        {empty_state_icon}\r\n                                    </div>\r\n                                    <span>{t(\"searchResult.coursesEmpty\")}</span>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>}\r\n                    {props.viewActivities &&\r\n                    <div className={classes.category}>\r\n                        <div className={classes.categoryHeader}>\r\n                            {activitiesicon}\r\n                            <span>{t('searchResult.activities')}</span>\r\n                        </div>\r\n                        <div className={classes.itemsList}>\r\n                            {(activities.length > 0 && activities) ? activities : \r\n                                <div className={classes.empty}>\r\n                                    <div className={classes.emptyIcon}>\r\n                                        {empty_state_icon}\r\n                                    </div>\r\n                                    <span>{t(\"searchResult.activitiesEmpty\")}</span>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>}\r\n                    {props.viewPrograms &&\r\n                    <div className={classes.category}>\r\n                        <div className={classes.categoryHeader}>\r\n                            {programicon}\r\n                            <span>{t('searchResult.programs')}</span>\r\n                        </div>\r\n                        <div className={classes.itemsList}>\r\n                            {(programs.length > 0 && programs) ? programs : \r\n                                <div className={classes.empty}>\r\n                                    <div className={classes.emptyIcon}>\r\n                                        {empty_state_icon}\r\n                                    </div>\r\n                                    <span>{t(\"searchResult.programsEmpty\")}</span>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchResult;","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Programs\\Programs.jsx",["542","543","544"],"import React, { useState } from 'react';\r\nimport classes from './Programs.module.css';\r\nimport { useTranslation } from 'react-i18next';\r\nimport styled from 'styled-components';\r\nimport { empty_state_icon } from '../../Assets/Images/empty_state_icon';\r\nimport { ROLE_LEARNER, ROLE_MANAGER } from '../../Utils/constants';\r\nimport { NavLink } from 'react-router-dom';\r\nimport ProgramItem from './ProgramItem/ProgramItem';\r\n\r\nconst StyledLabel = styled.label`\r\n    margin-left: ${({ direction }) => direction === \"rtl\" ? \"56px\" : \"0\"};\r\n    margin-right: ${({ direction }) => direction === \"ltr\" ? \"56px\" : \"0\"};\r\n`;\r\n\r\nconst Programs = (props) => {\r\n    const { t, i18n } = useTranslation();\r\n\r\n\r\n\r\n    let programs = [];\r\n    \r\n    programs = props.programs.map(prog => {\r\n        return <ProgramItem item={prog}/>\r\n    })\r\n\r\n    return (\r\n        <div className={classes.main}>\r\n            <div className={classes.header}>\r\n                <div className={classes.container}>\r\n                    {props.user.roleId === ROLE_LEARNER && <h1>{t(\"programs.title\")}</h1>}\r\n                    {props.user.roleId === ROLE_MANAGER &&\r\n                    <div className={classes.headerHeader}>\r\n                        <h1>{t(\"programs.title\")}</h1>\r\n                        <NavLink to=\"/programs/add\">\r\n                            <span>+</span>\r\n                            {t(\"programs.addProgram\")}\r\n                        </NavLink>\r\n                    </div>}\r\n                    <div className={classes.filters}>\r\n                        <StyledLabel className={classes.filter} direction={props.direction}>\r\n                            <span className={classes.filterText}>{t(\"courses.filters.all\")}</span>\r\n                            <input type=\"checkbox\" onChange={() => { props.setAll() }} checked={props.all} value={props.all} />\r\n                            <span className={classes.checkmark}></span>\r\n                        </StyledLabel>\r\n                        <StyledLabel className={classes.filter} direction={props.direction}>\r\n                            <span className={classes.filterText}>{t(\"courses.filters.completed\")}</span>\r\n                            <input type=\"checkbox\" onChange={() => { props.setCompleted(!props.completed) }} checked={props.completed} />\r\n                            <span className={classes.checkmark}></span>\r\n                        </StyledLabel>\r\n                        <StyledLabel className={classes.filter} direction={props.direction}>\r\n                            <span className={classes.filterText}>{t(\"courses.filters.inProgress\")}</span>\r\n                            <input type=\"checkbox\" onChange={() => { props.setInProgress(!props.inProgress) }} checked={props.inProgress} />\r\n                            <span className={classes.checkmark}></span>\r\n                        </StyledLabel>\r\n                        <StyledLabel className={classes.filter} direction={props.direction}>\r\n                            <span className={classes.filterText}>{t(\"courses.filters.notStarted\")}</span>\r\n                            <input type=\"checkbox\" onChange={() => { props.setNotStarted(!props.notStarted) }} checked={props.notStarted} />\r\n                            <span className={classes.checkmark}></span>\r\n                        </StyledLabel>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={classes.itemsList}>\r\n                <div className={classes.containerItems}>\r\n                    {(programs.length > 0 && programs != null && programs != undefined) ? programs :\r\n                        <div className={classes.empty}>\r\n                            <div className={classes.emptyIcon}>\r\n                                {empty_state_icon}\r\n                            </div>\r\n                            <span>{t(\"programs.emptyManager\")}</span>\r\n                            <NavLink to=\"/programs/add\">{t(\"programs.addProgram\")}</NavLink>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Programs;","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Lessons\\Lessons.jsx",["545"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport classes from './Lessons.module.css';\r\n\r\nconst Lessons = (props) => {\r\n    return(\r\n        <div className={classes.main}>\r\n            <div className={classes.header}>\r\n                <div className={classes.container}>\r\n                    \r\n                </div>\r\n            </div>\r\n            <div className={classes.container}>\r\n                <h3>lessons</h3>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Lessons;","C:\\Users\\Nadai\\lxp-frontend\\src\\Assets\\Images\\planet_icon.js",[],"C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Courses\\CourseItemView\\CourseItemView.jsx",["546","547","548"],"C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Home\\Courses\\Courses.jsx",["549","550","551"],"import React from 'react';\r\nimport classes from './Courses.module.css';\r\nimport { coursesicon } from '../../../Assets/Images/courses';\r\nimport { NavLink } from 'react-router-dom';\r\nimport CourseItem from './CourseItem/CourseItem';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { empty_state_icon } from '../../../Assets/Images/empty_state_icon';\r\n\r\nconst HomeCourses = (props) => {\r\n    const {t, i18n} = useTranslation();\r\n    let maxCoursesToView = 6;\r\n    let courses = [];\r\n    if(props.courses){\r\n        courses = props.courses.map((item, index) => {\r\n            if(index < maxCoursesToView){\r\n                return <CourseItem item={item} key={item.courseId}/>\r\n            }\r\n        });\r\n    }\r\n    \r\n    return(\r\n        <div className={classes.main}>\r\n            <div className={classes.coursesHeader}>\r\n                <div className={classes.coursesHeaderBlock}>\r\n                    {coursesicon}\r\n                    <span>{t('home.courses.title')}</span>\r\n                </div>\r\n                <NavLink to=\"/courses\">{t('home.courses.viewAll')}</NavLink>\r\n            </div>\r\n            <div className={classes.itemsList}>\r\n                {(courses.length > 0 && courses != null && courses != undefined) ? courses : \r\n                    <div className={classes.empty}>\r\n                        <div className={classes.emptyIcon}>\r\n                            {empty_state_icon}\r\n                        </div>\r\n                        <span>{t(\"home.courses.empty\")}</span>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomeCourses;","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Home\\Statistic\\Statistic.jsx",["552"],"import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport ProgressBar from '../../Common/ProgressBar/ProgressBar';\r\nimport classes from './Statistic.module.css';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { ROLE_LEARNER, ROLE_MANAGER } from '../../../Utils/constants';\r\nimport { learnersicon } from '../../../Assets/Images/learners.js';\r\nimport { libraryicon } from '../../../Assets/Images/library';\r\n\r\nconst Statistic = (props) => {\r\n    const {t, i18n} = useTranslation();\r\n\r\n\r\n    let widthProgressBar = 83;\r\n    let heightProgressBar = 16;\r\n    return(\r\n        <div className={classes.main}>\r\n            <div className={classes.block + \" \" + classes.withoutPadding}>\r\n                <div className={classes.infoBlock}>\r\n                    <p>{t(\"home.statistic.infoUser.welcome\")}</p>\r\n                    <h3>{props.user.name}</h3>\r\n                </div>\r\n                <div className={classes.infoBlock}>\r\n                    <label>{t(\"home.statistic.infoUser.learningHours\")}</label>\r\n                    <span><strong>34 {t(\"home.statistic.infoUser.hours\")}</strong> {t(\"home.statistic.infoUser.and\")} <strong>54 {t(\"home.statistic.infoUser.mins\")}</strong></span>\r\n                </div>\r\n                <hr className={classes.line}/>\r\n                <div className={classes.infoBlock}>\r\n                    <label>{t(\"home.statistic.infoUser.learningGoal\")}</label>\r\n                    <span><strong>34 {t(\"home.statistic.infoUser.hours\")}</strong></span>\r\n                </div>\r\n            </div>\r\n            {props.user.roleId === ROLE_LEARNER &&\r\n            <div className={classes.block + \" \" + classes.programs}>\r\n                <div className={classes.programsHeader}>\r\n                    <h4>{t(\"home.statistic.programs.programs\")}</h4>\r\n                    <NavLink to=\"/programs\">{t(\"home.statistic.programs.viewAll\")}</NavLink>\r\n                </div>\r\n                <div className={classes.progressBlock}>\r\n                    <label>Cybersecurity</label>\r\n                    <div className={classes.progressContainer}>\r\n                        <ProgressBar width={widthProgressBar} height={heightProgressBar} progress={78}/>\r\n                        <span>78%</span>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.progressBlock}>\r\n                    <label>Writing</label>\r\n                    <div className={classes.progressContainer}>\r\n                        <ProgressBar width={widthProgressBar} height={heightProgressBar} progress={42}/>\r\n                        <span>42%</span>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.progressBlock}>\r\n                    <label>Information Technologies</label>\r\n                    <div className={classes.progressContainer}>\r\n                        <ProgressBar width={widthProgressBar} height={heightProgressBar} progress={60}/>\r\n                        <span>60%</span>\r\n                    </div>\r\n                </div>\r\n            </div>}\r\n            {props.user.roleId === ROLE_LEARNER &&\r\n            <div className={classes.block + \" \" + classes.stats}>\r\n                <h4>{t(\"home.statistic.stats.stats\")}</h4>\r\n            </div>}\r\n            \r\n            <div className={classes.block + \" \" + classes.quickAccess}>\r\n                <h4>{t(\"home.statistic.quickAccess.title\")}</h4>\r\n                <div className={classes.links}>\r\n                    {props.user.roleId === ROLE_MANAGER &&\r\n                    <NavLink to=\"/resources\">\r\n                        {libraryicon}\r\n                        <span>{t(\"home.statistic.quickAccess.resources\")}</span>\r\n                    </NavLink>}\r\n                    <NavLink to=\"/learners\">\r\n                        {learnersicon}\r\n                        <span>{t(\"home.statistic.quickAccess.learners\")}</span>\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Statistic;","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Common\\SearchModal\\SearchModal.jsx",["553","554","555","556","557","558"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport CustomSelect from '../Cutsom/Select/CustomSelect';\r\nimport classes from './SearchModal.module.css';\r\nimport { searchicon } from '../../../Assets/Images/searchicon.js';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { setSearchValue } from '../../../Store/Reducers/common';\r\n\r\nconst StyledModal = styled.div`\r\n    transform: ${({ direction }) => direction === \"ltr\" ? 'translateY(100px) translateX(-647px)' : 'translateY(100px) translateX(647px)' }; \r\n    @media screen and (max-width: 1000px){\r\n        width: 620px;\r\n        transform: ${({ direction }) => direction === \"ltr\" ? 'translateY(100px) translateX(-543px)' : 'translateY(100px) translateX(543px)' }; \r\n    }\r\n    @media screen and (max-width: 822px){\r\n        width: 520px;\r\n        transform: ${({ direction }) => direction === \"ltr\" ? 'translateY(100px) translateX(-443px)' : 'translateY(100px) translateX(443px)' }; \r\n    }\r\n    @media screen and (max-width: 693px){\r\n        width: 420px;\r\n        transform: ${({ direction }) => direction === \"ltr\" ? 'translateY(160px) translateX(-343px)' : 'translateY(160px) translateX(343px)' }; \r\n    }\r\n`;\r\n\r\nconst StyledArrow = styled.div`\r\n    left: ${({ direction }) => direction === \"ltr\" ? \"-50px\" : \"50px\"};\r\n    \r\n    & div{\r\n        left: ${({ direction }) => direction === \"ltr\" ? \"-4.5px\" : \"3.5px\"};\r\n    }\r\n`;\r\n\r\nconst SearchModal = (props) => {\r\n    const [searchValue, setSearchValue] = useState('');\r\n\r\n    let filerOne = ['Search everything', 'option1', 'option2'];\r\n    let filerTwo = ['By anyone', 'option1', 'option2'];\r\n    let filerThree = ['In all segments', 'option1', 'option2'];\r\n\r\n    const linkRef = useRef(null);\r\n\r\n    const handleSearch = () => {\r\n        props.setSearchValue(searchValue);\r\n        props.setIsOpenSearchModal(false)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        linkRef.current.querySelector('svg').classList.add('detectClick')\r\n        window.addEventListener(\"mousedown\",(event) => {\r\n            if(event.target.classList.value.includes(\"detectClick\")){\r\n                return\r\n            }\r\n            props.setIsOpenSearchModal(false)\r\n        })\r\n    },[]);\r\n\r\n    const [filterOneValue, setFilterOneValue] = useState(filerOne[0]);\r\n    const [filterTwoValue, setFilterTwoValue] = useState(filerTwo[0]);\r\n    const [filterThreeValue, setFilterThreeValue] = useState(filerThree[0]);\r\n\r\n    return(\r\n        <StyledModal className={classes.main + \" \" + classes.detectClick} direction={props.direction} direction={props.direction}>\r\n            <StyledArrow className={classes.arrow + \" \" + classes.detectClick} direction={props.direction} direction={props.direction}>\r\n                <div class={classes.innerArrow + \" \" + classes.detectClick} direction={props.direction}></div>\r\n            </StyledArrow>\r\n            <div className={classes.body + \" \" + classes.detectClick} direction={props.direction}>\r\n                <div className={classes.searchField + \" \" + classes.detectClick} direction={props.direction}>\r\n                    <NavLink ref={linkRef} to={`/search?value=${searchValue}`} className={classes.detectClick} onClick={()=>{handleSearch()}}>\r\n                        {searchicon}\r\n                    </NavLink>\r\n                    <input placeholder=\"Search...\" name={\"value\"} className={classes.detectClick} onChange={(e)=>{setSearchValue(e.target.value)}}/>\r\n                </div>\r\n                <div className={classes.filters  + \" \" + classes.detectClick} direction={props.direction}>\r\n                    <CustomSelect options={filerOne} setFunction={setFilterOneValue} width={32} />\r\n                    <CustomSelect options={filerTwo} setFunction={setFilterTwoValue} width={32}/>\r\n                    <CustomSelect options={filerThree} setFunction={setFilterThreeValue} width={32}/>\r\n                </div>\r\n            </div>\r\n        </StyledModal>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    direction: state.common.direction,\r\n    searchValue: state.common.searchValue\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    setSearchValue\r\n})(SearchModal);","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Navbar\\Burger\\Burger.jsx",[],"C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Navbar\\ProfileMenu\\ProfileMenu.jsx",["559","560"],"import React, { useEffect, useReducer, useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport classes from './ProfileMenu.module.css';\r\nimport { logout } from '../../../Store/Reducers/user';\r\nimport { logout_icon } from '../../../Assets/Images/logout_icon';\r\nimport { profile_settings_icon } from '../../../Assets/Images/profile_settings_icon';\r\n\r\nconst StyledModal = styled.div`\r\n    direction: ${({ direction }) => direction};\r\n    transform: ${({ direction }) => direction === \"ltr\" ? 'translateX(-233px) translateY(25px)' : 'translateX(-73px) translateY(25px)'}; \r\n\r\n`;\r\nconst StyledArrow = styled.div`\r\n    left: ${({ direction }) => direction === \"ltr\" ? '-15px' : '25px'};\r\n    & div{\r\n        left: ${({ direction }) => direction === \"ltr\" ? '-4px' : '4px'};\r\n    }\r\n`;\r\n\r\nconst StyledMenu = styled.div`\r\n    span{\r\n        margin-left: ${({ direction }) => direction === \"ltr\" ? \"10px\" : \"0\"};\r\n        margin-right: ${({ direction }) => direction === \"rtl\" ? \"10px\" : \"0\"};\r\n    }\r\n`;\r\n\r\n\r\n\r\n\r\nconst ProfileMenu = (props) => {\r\n    const handleLogout = () => {\r\n        props.logout();\r\n        props.setIsOpenProfileMenu(false);\r\n    }\r\n    const linkRef = useRef(null);\r\n    const butRef = useRef(null);\r\n\r\n    useEffect(()=>{\r\n        linkRef.current.querySelector('svg').classList.add('detectClick')\r\n        butRef.current.querySelector('svg').classList.add('detectClick')\r\n        window.addEventListener(\"mousedown\", (event) => {\r\n            if(event.target.classList.value.includes(\"detectClick\")){\r\n                return;\r\n            }\r\n            props.setIsOpenProfileMenu(false);\r\n        })\r\n    },[]);\r\n\r\n    return(\r\n        <StyledModal className={classes.main  + \" \" + classes.detectClick} direction={props.direction}>\r\n            <StyledArrow className={classes.arrow  + \" \" + classes.detectClick} direction={props.direction}>\r\n                <div className={classes.innerArrow  + \" \" + classes.detectClick}></div>\r\n            </StyledArrow>\r\n            <StyledMenu className={classes.menu + \" \" + classes.detectClick} direction={props.direction}>\r\n                <div className={classes.menuItem + \" \" + classes.withBorder  + \" \" + classes.detectClick}>\r\n                    <NavLink ref={linkRef} to=\"/profile\" className={classes.detectClick} onClick={()=>{props.setIsOpenProfileMenu(false)}}>\r\n                        {profile_settings_icon}\r\n                        <span className={classes.detectClick}>Profile Settings</span>\r\n                    </NavLink>\r\n                </div>\r\n                <div className={classes.menuItem + \" \" + classes.detectClick}>\r\n                    <button ref={butRef} className={classes.detectClick} onClick={()=>{handleLogout()}}>\r\n                        {logout_icon}\r\n                        <span className={classes.detectClick}>Logout</span>\r\n                    </button>\r\n                </div>\r\n            </StyledMenu>\r\n        </StyledModal>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    direction: state.common.direction\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    logout\r\n})(ProfileMenu);","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Notifications\\NotificationsModal\\NotificationsModal.jsx",["561","562"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport classes from './NotificationsModal.module.css';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { NavLink } from 'react-router-dom';\r\nimport NotificationModalItem from './NotificationModalItem/NotificationModalItem';\r\n\r\n\r\nconst StyledModal = styled.div`\r\n    transform: ${({ direction, notifications }) => direction === \"ltr\" ? 'translateX(-138px)' : 'translateX(138px);' }; \r\n    @media screen and (max-width: 1020px){\r\n        transform: ${({ direction, notifications }) => direction === \"ltr\" ? 'translateX(-232px)' : 'translateX(232px);' }; \r\n    }\r\n    @media screen and (max-width: 507px){\r\n        transform: ${({ direction, notifications }) => direction === \"ltr\" ? 'translateX(-155px)' : 'translateX(155px);' }; \r\n    }\r\n    @media screen and (max-width: 375px){\r\n        transform: ${({ direction, notifications }) => direction === \"ltr\" ? 'translateX(-139px)' : 'translateX(139px);' }; \r\n    }\r\n`;\r\n\r\nconst StyledArrow = styled.div`\r\n    left: ${({ direction }) => direction === \"ltr\" ? \"-42px\" : \"42px\"};\r\n    \r\n    & div{\r\n        left: ${({ direction }) => direction === \"ltr\" ? \"-4.2px\" : \"3.5px\"};\r\n    }\r\n\r\n    @media screen and (max-width: 507px){\r\n        left: ${({ direction }) => direction === \"ltr\" ? \"-118px\" : \"118px\"};\r\n    }\r\n    @media screen and (max-width: 428px){\r\n        left: ${({ direction }) => direction === \"ltr\" ? \"-53px\" : \"53px\"};\r\n    }\r\n    @media screen and (max-width: 375px){\r\n        left: ${({ direction }) => direction === \"ltr\" ? \"-70px\" : \"70px\"};\r\n    }\r\n`;\r\n\r\n\r\nconst NotificationsModal = (props) => {\r\n    const {t, i18n} = useTranslation();\r\n\r\n    const [isScroll, setIsScroll] = useState(false);\r\n    const modalRef = useRef(null)\r\n\r\n    const windowRef = useRef(null);\r\n\r\n    function logit() {\r\n        setIsScroll(!isScroll);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(modalRef.current){\r\n            modalRef.current.addEventListener(\"scroll\", logit);\r\n        }\r\n        window.addEventListener(\"mousedown\",(event) => {\r\n            if(event.target.classList.value.includes(\"detectClick\")){\r\n                return\r\n            }\r\n            props.setIsOpenNotificationsModal(false)\r\n        })\r\n    }, [modalRef.current]);\r\n\r\n    let notifications = [];\r\n\r\n    if(props.notifications){\r\n        notifications = props.notifications.map(notification => {\r\n            \r\n            return <NotificationModalItem item={notification} key={notification.notificationId} isScroll={isScroll}/>\r\n        });\r\n    }\r\n    \r\n\r\n    return(\r\n        <StyledModal className={classes.main + \" \" + classes.detectClick} direction={props.direction} notifications={props.notifications} ref={windowRef}>\r\n            <StyledArrow className={classes.arrow  + \" \" + classes.detectClick} direction={props.direction}>\r\n                <div className={classes.innerArrow  + \" \" + classes.detectClick}></div>\r\n            </StyledArrow>\r\n            <div className={classes.body + \" \" + classes.detectClick}>\r\n                <div className={classes.header + \" \" + classes.detectClick}>\r\n                    <h3 className={classes.detectClick}>{t(\"notificationsModal.title\")}</h3>\r\n                    <NavLink to=\"/home/notifications\" className={classes.detectClick} onClick={()=>{props.setIsOpenNotificationsModal(false)}}>{t(\"notificationsModal.viewAll\")}</NavLink>\r\n                </div>\r\n                {(notifications.length > 0 && notifications) ? \r\n                    <div className={classes.notifications  + \" \" + classes.detectClick} ref={modalRef}>\r\n                        {notifications}\r\n                    </div> :\r\n                    <div className={classes.empty  + \" \" + classes.detectClick}>\r\n                        <span>{t(\"notificationsModal.empty\")}</span>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </StyledModal>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    direction: state.common.direction,\r\n    notifications: state.notifications.unreadNotifications\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n\r\n})(NotificationsModal);","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Activites\\ActivityItem\\ActivityItem.jsx",["563"],"C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Navbar\\Submenu\\Submenu.jsx",["564"],"import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './Submenu.module.css';\r\nimport { libraryicon } from '../../../Assets/Images/library';\r\nimport { activitiesicon } from '../../../Assets/Images/activities.js';\r\nimport { useTranslation } from 'react-i18next';\r\nimport styled from 'styled-components';\r\nimport { connect } from 'react-redux';\r\n\r\nconst StyledArrow = styled.div`\r\n    left: ${({ direction }) => direction === \"ltr\" ? '-81px' : '81px'};\r\n    & div{\r\n        left: ${({ direction }) => direction === \"ltr\" ? '-4px' : '4px'};\r\n    }\r\n`;\r\n\r\nconst StyledDropDown = styled.div`\r\ntransform: ${({ direction }) => direction === \"ltr\" ? 'translateX(3px)' : 'translateX(-3px)'}; \r\n`;\r\n\r\nconst Submenu = (props) => {\r\n    const {t, i18n} = useTranslation();\r\n    return(\r\n        <StyledDropDown className={classes.main} direction={props.direction}>\r\n            <StyledArrow className={classes.arrow  + \" \" + classes.detectClick} direction={props.direction}>\r\n                <div className={classes.innerArrow  + \" \" + classes.detectClick}></div>\r\n            </StyledArrow>\r\n            <div className={classes.body}>\r\n                <div className={classes.menuItem}>\r\n                    \r\n                    <NavLink to=\"/activities\" activeClassName={classes.active}>\r\n                        <div className={classes.icon}>\r\n                            {activitiesicon}\r\n                        </div>\r\n                        \r\n                        <span>{t(\"navbar.myActivities\")}</span>\r\n                    </NavLink>\r\n                </div>\r\n                <div className={classes.menuItem}>\r\n                    <NavLink to=\"/library\" activeClassName={classes.active}>\r\n                        <div className={classes.icon}>\r\n                            {libraryicon}\r\n                        </div>\r\n                        <span>{t(\"navbar.library\")}</span>\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n        </StyledDropDown>\r\n        \r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    direction: state.common.direction\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(Submenu);","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Reports\\UserInfo\\UserInfo.jsx",["565"],"import React from 'react';\r\nimport classes from './UserInfo.module.css';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst UserInfo = (props) => {\r\n    const { t, i18n } = useTranslation();\r\n\r\n    return (\r\n        <div className={classes.main}>\r\n            <div className={classes.block + \" \" + classes.withoutPadding}>\r\n                <div className={classes.infoBlock}>\r\n                    <p>{t(\"home.statistic.infoUser.welcome\")}</p>\r\n                    <h3>{props.user.name}</h3>\r\n                </div>\r\n                <div className={classes.infoBlock}>\r\n                    <label>{t(\"home.statistic.infoUser.learningHours\")}</label>\r\n                    <span><strong>34 {t(\"home.statistic.infoUser.hours\")}</strong> {t(\"home.statistic.infoUser.and\")} <strong>54 {t(\"home.statistic.infoUser.mins\")}</strong></span>\r\n                </div>\r\n                <hr className={classes.line} />\r\n                <div className={classes.infoBlock}>\r\n                    <label>{t(\"home.statistic.infoUser.learningGoal\")}</label>\r\n                    <span><strong>34 {t(\"home.statistic.infoUser.hours\")}</strong></span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserInfo","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Reports\\ReportDetails\\ReportDetails.jsx",["566","567"],"import React from 'react';\r\nimport { Link, useLocation, withRouter } from 'react-router-dom';\r\nimport classes from './ReportsDetails.module.css';\r\nimport { empty_state_icon } from '../../../Assets/Images/empty_state_icon';\r\nimport { searchicon } from '../../../Assets/Images/searchicon'\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst ReportsDetails = (props) => {\r\n    const { t, i18n } = useTranslation();\r\n    const location = props.match.params.insight;\r\n    const targetTitle = location.split('_').join(' ')\r\n    const number = () => {\r\n        if (location === 'enrolled') {\r\n            return props.props.courses ? props.props.courses.length : 0\r\n        } else if (location === 'in_progress') {\r\n            return props.props.courses ? props.props.courses.filter((cours) => cours.courseProgress > 0).length : 0\r\n        } else if (location === 'pending') {\r\n            return props.props.activities ? props.props.activities.length : 0\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.reportDetailsTitle}>\r\n                <h3>\r\n                    <Link to='/report'>\r\n                        {t(\"reports.reportsDetails.generalInsights\")}\r\n                    </Link>\r\n                    <span className={classes.detailsItemTitle}>{` ${targetTitle}`}</span>\r\n                    <span className={classes.numberItems}>{` (${number()})`}</span>\r\n                </h3>\r\n                <div className={classes.reportDetailsTitleInput}>\r\n                    <input type=\"text\" placeholder={t(\"reports.reportsDetails.search\")} />\r\n                    {searchicon}\r\n                </div>\r\n            </div>\r\n            {location === 'pending' && number() === 0 &&\r\n                <div className={classes.empty}>\r\n                    <div className={classes.emptyIcon}>\r\n                        {empty_state_icon}\r\n                    </div>\r\n                    <span>{t(\"reports.reportsDetails.pendingActivities\")}</span>\r\n                </div>\r\n            }\r\n            {location === 'in_progress' && number() === 0 &&\r\n                <div className={classes.empty}>\r\n                    <div className={classes.emptyIcon}>\r\n                        {empty_state_icon}\r\n                    </div>\r\n                    <span>{t(\"reports.reportsDetails.enrolledCourses\")}</span>\r\n                </div>\r\n            }\r\n            {location === 'enrolled' && number() === 0 &&\r\n                <div className={classes.empty}>\r\n                    <div className={classes.emptyIcon}>\r\n                        {empty_state_icon}\r\n                    </div>\r\n                    <span>{t(\"reports.reportsDetails.inProgressCourses\")}</span>\r\n                </div>\r\n            }\r\n        </div >\r\n    );\r\n}\r\n\r\nlet WithRouterContainer = withRouter(ReportsDetails);\r\n\r\nexport default WithRouterContainer;","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Reports\\ReportMain\\ReportMain.jsx",["568","569"],"import React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport classes from './ReportMain.module.css';\r\nimport { useTranslation } from 'react-i18next';\r\nimport Filter from '../Filter/Filter'\r\nimport { Chart } from \"react-google-charts\";\r\n\r\nexport default function ReportMain({ props }) {\r\n    const { t, i18n } = useTranslation();\r\n    const coursesInProgress = props.courses ? props.courses.filter((cours) => cours.courseProgress > 0).length : 0\r\n    const coursesIsCompleted = props.courses ? props.courses.filter((cours) => cours.isCompleted).length : 0\r\n    const coursesNotStarted = props.courses ? props.courses.filter((cours) => cours.courseProgress === 0).length : 0\r\n\r\n    const firstCourseDaysNumber = 1\r\n    const secondCourseDaysNumber = 4\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.tabsBlock}>\r\n                <h3>\r\n                    {t(\"reports.insights.title\")}\r\n                </h3>\r\n                <ul className={classes.tabs}>\r\n                    <li>\r\n                        <Link className={classes.textDecorationNone} to=\"/report/enrolled\">\r\n                            <p className={classes.tabTitle}> {t(\"reports.insights.enrolled\")}</p>\r\n                            <p className={classes.tabValue}>\r\n                                <span>{props.courses ? props.courses.length : 0}</span>\r\n                                {` ${t(\"reports.insights.courses\")}`}\r\n                            </p>\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link className={classes.textDecorationNone} to=\"/report/in_progress\">\r\n                            <p className={classes.tabTitle}>{t(\"reports.insights.inProgress\")}</p>\r\n                            <p className={classes.tabValue}>\r\n                                <span>{coursesInProgress}</span>\r\n                                {` ${t(\"reports.insights.courses\")}`}\r\n                            </p>\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link className={classes.textDecorationNone} to={`/report/pending`}>\r\n                            <p className={classes.tabTitle}>{t(\"reports.insights.pending\")}</p>\r\n                            <p className={classes.tabValue}>\r\n                                <span>{(props.activities && props.activities.length > 0) ? props.activities.length : 0}</span>\r\n                                {` ${t(\"reports.insights.activities\")}`}\r\n                            </p>\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div className={classes.graphics}>\r\n                <div className={classes.graphicsTitle}>\r\n                    <h3>{t(\"reports.overview.title\")}</h3>\r\n                    <Filter />\r\n                </div>\r\n                <div className={classes.overviewCharts}>\r\n                    <div className={classes.chart}>\r\n                        <Chart\r\n                            width={'100%'}\r\n                            height={'100%'}\r\n                            background={'#fff'}\r\n                            chartType=\"PieChart\"\r\n                            loader={<div>Loading Chart</div>}\r\n                            data={[\r\n                                ['Progress', 'How mutch'],\r\n                                ['Not started', coursesNotStarted],\r\n                                ['In progress', coursesInProgress],\r\n                                ['Completed', coursesIsCompleted],\r\n                            ]}\r\n                            options={{\r\n                                title: 'My Courses',\r\n                                legend: \"bottom\",\r\n                                chartArea: { width: '95%', height: '70%' },\r\n                                colors: ['#cce1f4', '#f4e6cc', '#a9d5c1'],\r\n                                pieSliceText: 'value',\r\n                                fontSize: 14,\r\n                                pieSliceTextStyle: { color: \"black\" },\r\n                                titleTextStyle: { fontSize: 16 }\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.chart}>\r\n                        <Chart\r\n                            chartType=\"ColumnChart\"\r\n                            width=\"100%\"\r\n                            height=\"100%\"\r\n                            data={[\r\n                                [\"Courses\", \"Days\", { role: \"style\" }],\r\n                                [\"Course 1\", firstCourseDaysNumber, '#f4e6cc'],\r\n                                [\"Course 2\", secondCourseDaysNumber, '#a9d5c1'],\r\n                            ]}\r\n                            options={{\r\n                                fontSize: 14,\r\n                                title: 'My Engagment',\r\n                                titleTextStyle: { fontSize: 16 },\r\n                                chartArea: { width: '80%', height: '70%' },\r\n                                bar: { groupWidth: \"85%\" },\r\n                                legend: { position: \"none\" },\r\n                                vAxes: {\r\n                                    0: { title: 'Days', titleTextStyle: { fontStyle: 'normal' } },\r\n                                }\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Activity\\Chat\\Message\\Message.jsx",["570"],"import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport classes from './Message.module.css';\r\n\r\nconst StyledMessage = styled.p`\r\n    background-color: ${({ itsMe }) => itsMe ? \"#b3dbc9\" : \"#c2c6dd\"};\r\n    direction: ltr;\r\n`;\r\n\r\nconst StyledArrow = styled.div`\r\n    border-top: ${({ itsMe }) => itsMe ? \"12px solid #b3dbc9\" : \"12px solid #c2c6dd\"};\r\n    transform: ${({ itsMe, direction }) => direction === \"ltr\" ? (itsMe ? \"rotate(-90deg)\" : \"rotate(90deg)\") : (itsMe ? \"rotate(90deg)\" : \"rotate(-90deg)\")};\r\n`;\r\n\r\nconst StyledMain = styled.div`\r\n    direction: ${({ itsMe, direction }) =>  direction === \"ltr\" ? (itsMe ? \"rtl\" : \"ltr\") : (itsMe ? \"ltr\" : \"rtl\")};\r\n    align-self: ${({ itsMe }) => itsMe ? \"flex-end\" : \"flex-start\"};\r\n`;\r\n\r\nconst StyledMessageBlock = styled.div`\r\n    margin-left: ${({ itsMe, direction }) => direction === \"ltr\" ? (!itsMe ? \"10px\" : \"0\") : (!itsMe ? \"0\" : \"10px\")};\r\n    margin-right: ${({ itsMe, direction }) => direction === \"ltr\" ? (itsMe ? \"10px\" : \"0\") : (itsMe ? \"0\" : \"10px\")};\r\n`;\r\n\r\nconst Message = (props) => {\r\n    const [userName, setUserName] = useState(\"\");\r\n    useEffect(()=>{\r\n        let firstLetter = props.message.user.name ? props.message.user.name[0] : \"\";\r\n        let secondLetter = props.message.user.surname ? props.message.user.surname[0] : \"\";\r\n        setUserName(firstLetter+secondLetter);\r\n    },[props.message.user]);\r\n\r\n    return(\r\n        <StyledMain className={classes.main} direction={props.direction} itsMe={props.message.itsMe}>\r\n            {props.message.user.profilePhoto ?\r\n            <img src={props.message.user.profilePhoto}/> : \r\n            <div className={classes.noPhoto}>\r\n                <span>{userName}</span>\r\n            </div>}\r\n            <StyledMessageBlock className={classes.message} direction={props.direction} itsMe={props.message.itsMe}>\r\n                <StyledArrow className={classes.arrow} direction={props.direction} itsMe={props.message.itsMe}/>\r\n                <StyledMessage className={classes.text} direction={props.direction} itsMe={props.message.itsMe}>{props.message.text}</StyledMessage>\r\n            </StyledMessageBlock>\r\n            \r\n        </StyledMain>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    direction: state.common.direction\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(Message);","C:\\Users\\Nadai\\lxp-frontend\\src\\Assets\\Images\\empty_state_icon.js",[],"C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Notifications\\NotificationItem\\NotificationItem.jsx",["571","572","573","574","575"],"import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport classes from './NotificationItem.module.css';\r\nimport { notificationicon } from '../../../Assets/Images/notification';\r\nimport parse from 'html-react-parser';\r\nimport { useTranslation } from 'react-i18next';\r\nimport showmoreicon from \"../../../Assets/Images/showmoreicon.svg\";\r\nimport NotificationModalItemMenu from '../NotificationsModal/NotificationModalItem/NotificationModalItemMenu/NotificationModalItemMenu';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst StyledItem = styled.div`\r\n    background-color: ${({ isRead }) => isRead ? \"white\" : \"rgba(172, 221, 213, 0.15)\"};\r\n`;\r\n\r\nconst StyledDiv = styled.div`\r\n    margin-left: ${({ direction }) => direction === \"ltr\" ? '0' : '16px'};\r\n    margin-right: ${({ direction }) => direction === \"rtl\" ? \"0\" : \"16px\"};\r\n`;\r\n\r\nconst NotificationItem = (props) => {\r\n    let sendTime = new Date(props.item.generated);\r\n    let now = new Date();\r\n\r\n    const [isOpenMenu, setIsOpenMenu] = useState(false);\r\n\r\n    const {t, i18n} = useTranslation();\r\n\r\n    useEffect(()=>{\r\n        if(props.isScroll){\r\n            setIsOpenMenu(false);\r\n        }\r\n    },[props.isScroll]);\r\n\r\n    function secondsToDhms(seconds) {\r\n        seconds = Number(seconds);\r\n        let d = Math.floor(seconds / (3600*24));\r\n        let h = Math.floor(seconds % (3600*24) / 3600);\r\n        let m = Math.floor(seconds % 3600 / 60);\r\n        let s = Math.floor(seconds % 60);\r\n        \r\n        let dDisplay = d > 0 ? d + (t(\"notificationItem.days\")) : \"\";\r\n        let hDisplay = h > 0 ? h + (t(\"notificationItem.hours\")) : \"\";\r\n        let mDisplay = m > 0 ? m + (t(\"notificationItem.minutes\")) : \"\";\r\n        let sDisplay = s > 0 ? s + (t(\"notificationItem.seconds\")) : \"\";\r\n\r\n        if(dDisplay != \"\"){\r\n            return dDisplay;\r\n        }else if(hDisplay != \"\"){\r\n            return hDisplay;\r\n        }else if(mDisplay != \"\"){\r\n            return mDisplay;\r\n        }else{\r\n            return sDisplay;\r\n        }\r\n    }\r\n\r\n    let agoTime = secondsToDhms((now.getTime() - sendTime.getTime()) / 1000);\r\n    \r\n    return(\r\n        <StyledItem className={classes.main} isRead={props.isRead}>\r\n            <StyledDiv className={classes.image} direction={props.direction}>\r\n                {notificationicon}\r\n            </StyledDiv>\r\n            <div className={classes.info}>\r\n                <p>{parse(props.item.text)}</p>\r\n                <NavLink to={`/home/notifications/${props.item.notificationId}`}>{t(\"notificationItem.link\")}</NavLink>\r\n                <span>{agoTime} {t(\"notificationItem.ago\")}</span>\r\n            </div>\r\n            <div className={classes.menu} onClick={()=>{setIsOpenMenu(!isOpenMenu)}}>\r\n                <img src={showmoreicon}/>\r\n                {isOpenMenu && <NotificationModalItemMenu/>}\r\n            </div>\r\n        </StyledItem>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    direction: state.common.direction\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(NotificationItem);","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Notifications\\NotificationsModal\\NotificationModalItem\\NotificationModalItemMenu\\NotificationModalItemMenu.jsx",["576","577","578"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport classes from './NotificationModalItemMenu.module.css';\r\nimport markasreadicon from '../../../../../Assets/Images/asreadicon.svg';\r\nimport deleteicon from '../../../../../Assets/Images/deleteicon.svg';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst StyledModal = styled.div`\r\n    transform: ${({ direction }) => direction === \"ltr\" ? 'translateY(0px) translateX(-166px)' : 'translateY(0px) translateX(166px);' }; \r\n`;\r\n\r\nconst StyledArrow = styled.div`\r\n    left: ${({ direction }) => direction === \"ltr\" ? \"-6px\" : \"6px\"};\r\n    \r\n    & div{\r\n        left: ${({ direction }) => direction === \"ltr\" ? \"-4.5px\" : \"3.5px\"};\r\n    }\r\n`;\r\n\r\nconst StyledSpan = styled.span`\r\n    margin-left: ${({ direction }) => direction === \"ltr\" ? \"12px\" : \"0\"};\r\n    margin-right: ${({ direction }) => direction === \"rtl\" ? \"12px\" : \"0\"};\r\n`;\r\n\r\n\r\nconst NotificationModalItemMenu = (props) => {\r\n    const {t, i18n} = useTranslation();\r\n\r\n    return(\r\n        <StyledModal className={classes.main   + \" \" + classes.detectClick} direction={props.direction}>\r\n            <StyledArrow className={classes.arrow   + \" \" + classes.detectClick} direction={props.direction}>\r\n                <div className={classes.innerArrow   + \" \" + classes.detectClick}></div>\r\n            </StyledArrow>\r\n            <div className={classes.body   + \" \" + classes.detectClick}>\r\n                <button className={classes.detectClick}>\r\n                    <div className={classes.image   + \" \" + classes.detectClick}>\r\n                        <img src={markasreadicon} className={classes.detectClick}/>\r\n                    </div>\r\n                    <StyledSpan direction={props.direction} className={classes.detectClick}>{t(\"notificationsModal.menu.asRead\")}</StyledSpan>\r\n                </button>\r\n                <button className={classes.detectClick}>\r\n                    <div className={classes.image  + \" \" + classes.detectClick}>\r\n                        <img src={deleteicon} className={classes.detectClick}/>\r\n                    </div>\r\n                    <StyledSpan direction={props.direction} className={classes.detectClick}>{t(\"notificationsModal.menu.delete\")}</StyledSpan>\r\n                </button>\r\n            </div>\r\n        </StyledModal>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    direction: state.common.direction\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n\r\n})(NotificationModalItemMenu);\r\n\r\n","C:\\Users\\Nadai\\lxp-frontend\\src\\Assets\\Images\\library.js",[],"C:\\Users\\Nadai\\lxp-frontend\\src\\Assets\\Images\\clock.js",[],"C:\\Users\\Nadai\\lxp-frontend\\src\\Assets\\Images\\logout_icon.js",[],"C:\\Users\\Nadai\\lxp-frontend\\src\\Assets\\Images\\profile_settings_icon.js",[],"C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Reports\\Filter\\Filter.jsx",["579","580"],"import React, { useEffect, useState } from 'react';\r\nimport classes from './Filter.module.css';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst StyledSelect = styled.div`\r\n\r\n`;\r\n\r\nconst Filter = (props) => {\r\n    const { t, i18n } = useTranslation();\r\n\r\n    const [isOpenDropdown, setIsOpenDropdown] = useState(false);\r\n    const [isCourses, setIsCourses] = useState(false)\r\n    const [isActivities, setIsActivities] = useState(false)\r\n\r\n    return (\r\n        <StyledSelect className={classes.main} width={props.width}>\r\n            <input hidden type=\"checkout\" defaultValue={isOpenDropdown} checked={isOpenDropdown} />\r\n            <div className={classes.view} onClick={() => setIsOpenDropdown(!isOpenDropdown)}>\r\n                <span> {t(\"filterReports.filter\")} </span>\r\n                <div className={classes.arrow + \" \" + (isOpenDropdown && classes.open)}></div>\r\n            </div>\r\n            {isOpenDropdown &&\r\n                <div className={classes.dropdown + \" \" + (isOpenDropdown && classes.openDropdown)}>\r\n                    <span className={`${classes.option} ${classes.margin0}`}>\r\n                        {t(\"filterReports.filteredBy\")}\r\n                    </span>\r\n                    <div onClick={() => setIsCourses(!isCourses)} className={`${classes.margin0} ${classes.filter}`}>\r\n                        <span className={classes.filterText}>{t(\"filterReports.courses\")}</span>\r\n                        <input type=\"checkbox\" checked={isCourses} value={isCourses}  defaultChecked={isCourses} defaultValue={isCourses}/>\r\n                        <span className={classes.checkmark}></span>\r\n                    </div>\r\n                    <div onClick={() => setIsActivities(!isActivities)} className={`${classes.margin0} ${classes.filter}`}>\r\n                        <span className={classes.filterText}>{t(\"filterReports.activities\")}</span>\r\n                        <input type=\"checkbox\" checked={isActivities} value={isActivities}  defaultChecked={isActivities} defaultValue={isActivities}/>\r\n                        <span className={classes.checkmark}></span>\r\n                    </div>\r\n                </div>}\r\n        </StyledSelect>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    direction: state.common.direction\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(Filter);","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Notifications\\NotificationsModal\\NotificationModalItem\\NotificationModalItem.jsx",["581","582","583","584","585","586"],"import React, { Fragment, useEffect, useRef, useState } from 'react';\r\nimport classes from './NotificationModalItem.module.css';\r\nimport { notificationicon } from '../../../../Assets/Images/notification.js';\r\nimport showmoreicon from \"../../../../Assets/Images/showmoreicon.svg\";\r\nimport parse from 'html-react-parser';\r\nimport { useTranslation } from 'react-i18next';\r\nimport NotificationModalItemMenu from './NotificationModalItemMenu/NotificationModalItemMenu';\r\n\r\nconst NotificationModalItem = (props) => {\r\n    let sendTime = new Date(props.item.generated);\r\n    let now = new Date();\r\n\r\n    const [isOpenMenu, setIsOpenMenu] = useState(false);\r\n\r\n    const {t, i18n} = useTranslation();\r\n    \r\n    const divRef = useRef(null);\r\n    const pRef = useRef(null);\r\n\r\n    useEffect(()=>{\r\n        divRef.current.querySelector('svg').classList.add('detectClick')\r\n        pRef.current.querySelector('strong').classList.add('detectClick')\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        if(props.isScroll){\r\n            setIsOpenMenu(false);\r\n        }\r\n    },[props.isScroll]);\r\n\r\n    function secondsToDhms(seconds) {\r\n        seconds = Number(seconds);\r\n        let d = Math.floor(seconds / (3600*24));\r\n        let h = Math.floor(seconds % (3600*24) / 3600);\r\n        let m = Math.floor(seconds % 3600 / 60);\r\n        let s = Math.floor(seconds % 60);\r\n        \r\n        let dDisplay = d > 0 ? d + (t(\"notificationItem.days\")) : \"\";\r\n        let hDisplay = h > 0 ? h + (t(\"notificationItem.hours\")) : \"\";\r\n        let mDisplay = m > 0 ? m + (t(\"notificationItem.minutes\")) : \"\";\r\n        let sDisplay = s > 0 ? s + (t(\"notificationItem.seconds\")) : \"\";\r\n\r\n        if(dDisplay != \"\"){\r\n            return dDisplay;\r\n        }else if(hDisplay != \"\"){\r\n            return hDisplay;\r\n        }else if(mDisplay != \"\"){\r\n            return mDisplay;\r\n        }else{\r\n            return sDisplay;\r\n        }\r\n    }\r\n\r\n    let agoTime = secondsToDhms((now.getTime() - sendTime.getTime()) / 1000);\r\n\r\n    return(\r\n        <div className={classes.main  + \" \" + classes.detectClick}>\r\n            <div ref={divRef} className={classes.image  + \" \" + classes.detectClick}>\r\n                {notificationicon}\r\n            </div>\r\n            <div className={classes.info  + \" \" + classes.detectClick}>\r\n                <p ref={pRef} className={classes.detectClick}>{parse(props.item.text)}</p>\r\n                <span className={classes.detectClick}>{agoTime} {t(\"notificationItem.ago\")}</span>\r\n            </div>\r\n            <div className={classes.menu   + \" \" + classes.detectClick} onClick={()=>{setIsOpenMenu(!isOpenMenu)}}>\r\n                <img src={showmoreicon} className={classes.detectClick}/>\r\n                {isOpenMenu && <NotificationModalItemMenu/>}\r\n            </div>\r\n        </div>    \r\n    );\r\n}\r\n\r\nexport default NotificationModalItem;","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Navbar\\Burger\\BurgerMenu.jsx",["587","588"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from '../Navbar.module.css';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {planeticon} from '../../../Assets/Images/planet_icon'\r\n\r\nconst Menu = styled.div`\r\n    width: 100%;\r\n    height: 100vh;\r\n    transform: ${({ open }) => open ? 'translateX(0)' : 'translateX(100%)'};\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    background-color: #59bcabe3;\r\n    transition-duration: 0.4s;\r\n    z-index: 100;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    a{\r\n        font-size: 35px;\r\n    }\r\n    a.active{\r\n        color: white;\r\n    }\r\n\r\n`;\r\n\r\n\r\nconst BurgerMenu = ({open, setOpen, changeLanguage, language, currentLanguage}) => {\r\n    const {t, i18n} = useTranslation();\r\n    return(\r\n        <Menu open={open}>\r\n            <nav className={\"nav\"}>\r\n                <div className={classes.menuItem}>\r\n                    <NavLink to=\"/home\" activeClassName={\"active\"} onClick={()=>{setOpen(false)}}>{t(\"navbar.home\")}</NavLink>\r\n                </div>\r\n                <div className={classes.menuItem}>\r\n                    <NavLink to=\"/programs\" activeClassName={\"active\"} onClick={()=>{setOpen(false)}}>{t(\"navbar.programs\")}</NavLink>\r\n                </div>\r\n                <div className={classes.menuItem}>\r\n                    <NavLink to=\"/courses\" activeClassName={\"active\"} onClick={()=>{setOpen(false)}}>{t(\"navbar.courses\")}</NavLink>\r\n                </div>\r\n                <div className={classes.menuItem}>\r\n                    <NavLink to=\"/activities\" activeClassName={\"active\"} onClick={()=>{setOpen(false)}}>{t(\"navbar.activities\")}</NavLink>\r\n                </div>\r\n                <div className={classes.menuItem}>\r\n                    <NavLink to=\"/library\" activeClassName={\"active\"} onClick={()=>{setOpen(false)}}>{t(\"navbar.library\")}</NavLink>\r\n                </div>\r\n                <div className={classes.menuItem}>\r\n                    <NavLink to=\"/report\" activeClassName={\"active\"} onClick={()=>{setOpen(false)}}>{t(\"navbar.myreport\")}</NavLink>\r\n                </div>\r\n                <div className={classes.langBurgerMenu}>\r\n                    <button onClick={()=>{changeLanguage(language())}}>\r\n                            <span className={currentLanguage === \"en\" ? classes.langBurgerMenuActive : \"\"}>\r\n                                EN\r\n                            </span>\r\n                            <span className={currentLanguage === \"ar\" ? classes.langBurgerMenuActive : \"\"}>\r\n                                AR\r\n                            </span>\r\n                    </button>\r\n                </div>\r\n            </nav>\r\n        </Menu>\r\n    )\r\n    \r\n}\r\n\r\nexport default BurgerMenu;","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Home\\Courses\\CourseItem\\CourseItem.jsx",["589","590","591"],"import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './CourseItem.module.css';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n\r\nconst CourseItem = (props) => {\r\n    const {t, i18n} = useTranslation();\r\n\r\n    return(\r\n        <div className={classes.main}>\r\n            <NavLink to={`/courses/${props.item.courseId}`}>\r\n                {(props.item.image != \"null\") ? <img src={props.item.image}/> : <div className={classes.defaultImg}></div>}\r\n                \r\n                <div className={classes.itemInfo}>\r\n                    <label>{props.item.description}</label>\r\n                    <h2>{props.item.name}</h2>\r\n                    <div className={classes.itemFoot}>\r\n                        <span className={classes.status + \" \" + \r\n                            ((props.item.inProgress && classes.inProgress) ||\r\n                            (!props.item.inProgress && classes.completed))}>\r\n                                {((props.item.inProgress && t('courseMini.inProgress')) ||\r\n                                (!props.item.inProgress && t('courseMini.progressComplete')))}</span>\r\n                        <span className={classes.time}>{props.item.startingDate ? props.item.startingDate : t('courseMini.overdue')}</span>\r\n                    </div>\r\n                </div>\r\n                \r\n            </NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CourseItem;","C:\\Users\\Nadai\\lxp-frontend\\src\\Store\\Reducers\\activities.js",[],"C:\\Users\\Nadai\\lxp-frontend\\src\\Store\\Reducers\\common.js",[],"C:\\Users\\Nadai\\lxp-frontend\\src\\Store\\Reducers\\user.js",[],"C:\\Users\\Nadai\\lxp-frontend\\src\\Store\\Reducers\\notifications.js",[],"C:\\Users\\Nadai\\lxp-frontend\\src\\Store\\Reducers\\courses.js",[],"C:\\Users\\Nadai\\lxp-frontend\\src\\Store\\Reducers\\programs.js",[],"C:\\Users\\Nadai\\lxp-frontend\\src\\Services\\api.js",[],"C:\\Users\\Nadai\\lxp-frontend\\src\\Store\\reduxStore.js",[],"C:\\Users\\Nadai\\lxp-frontend\\src\\Assets\\Images\\learners.js",[],"C:\\Users\\Nadai\\lxp-frontend\\src\\Utils\\constants.js",[],"C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Home\\Programs\\HomePrograms.jsx",["592","593","594"],"import React from 'react';\r\nimport classes from './HomePrograms.module.css';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { programicon } from '../../../Assets/Images/programicon';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { empty_state_icon } from '../../../Assets/Images/empty_state_icon';\r\nimport { learnersicon } from '../../../Assets/Images/learners';\r\n\r\nconst HomePrograms = (props) => {\r\n    const {t, i18n} = useTranslation();\r\n    let maxProgramsToView = 2;\r\n    let programs = [];\r\n\r\n\r\n    return(\r\n        <div className={classes.main}>\r\n            <div className={classes.header}>\r\n                <div className={classes.headerBlock}>\r\n                    {programicon}\r\n                    <span>{t(\"home.programs.title\")}</span>\r\n                </div>\r\n                {programs.length > 0 && <NavLink to=\"/programs\">{t(\"home.programs.viewAll\")}</NavLink>}\r\n            </div>\r\n            {(programs.length > 0 && programs != null && programs != undefined) ?\r\n            <div className={classes.content}>\r\n                <div className={classes.itemsList}>\r\n                    {programs}\r\n                </div> \r\n                <div className={classes.header}>\r\n                    <div className={classes.headerBlock}>\r\n                        {learnersicon}\r\n                        <span>{t(\"home.learners.title\")}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            : \r\n            <div className={classes.empty}>\r\n                <div className={classes.emptyIcon}>\r\n                    {empty_state_icon}\r\n                </div>\r\n                <span>{t(\"home.programs.empty\")}</span>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePrograms;","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Programs\\AddProgram\\AddProgram.jsx",["595","596","597","598","599"],"import React, { useEffect, useLayoutEffect, useRef, useState } from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport classes from './AddProgram.module.css';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { connect } from 'react-redux';\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport { AuthInput, TextAreaCustom } from '../../Common/FormControlls/FormControlls';\r\nimport { required } from '../../../Utils/validators';\r\nimport CustomSelect from '../../Common/Cutsom/Select/CustomSelect';\r\nimport { FileDrop } from 'react-file-drop';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport uploadicon from '../../../Assets/Images/upload.svg';\r\nimport ImageFileProgram from '../ImageFileProgram/ImageFileProgram';\r\nimport { ROLE_MANAGER } from '../../../Utils/constants';\r\n\r\nconst AddProgramForm = (props) => {\r\n    const {t, i18n} = useTranslation();\r\n    let departamentOptions = ['dep1', 'dep2', 'dep3'];\r\n\r\n    let maxLength = 300;\r\n    const [charactersLeft, setCharactersLeft] = useState(maxLength);\r\n\r\n    let handleTextArea = (e) => {\r\n        setCharactersLeft(maxLength - e.target.value.length);\r\n    }\r\n\r\n    let disableDefSupervisorOption = true;\r\n    let disableDefSupervisorOptionText = t(\"addProgram.defSelectDepartament\");\r\n\r\n    const [size, setSize] = useState([window.outerWidth, window.innerHeight]);\r\n    const [selectWidth, setSelectWidth] = useState(66);\r\n\r\n    const fileInputRef = useRef(null);\r\n\r\n    useLayoutEffect(()=>{\r\n        function updateSize(){\r\n            setSize([window.outerWidth, window.innerHeight]);\r\n        }\r\n        window.addEventListener('resize', updateSize);\r\n        updateSize();\r\n        return () => window.removeEventListener('resize', updateSize);\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        if(size[0] > 568){\r\n            setSelectWidth(66);\r\n        }else{\r\n            setSelectWidth(100);\r\n        }\r\n    },[size]);\r\n\r\n\r\n    const onFileInputChange = (event) => {\r\n        const newFiles = []\r\n        const newFilesToPush = [...event.target.files];\r\n        newFilesToPush.forEach(item => {\r\n            newFiles.push(item);\r\n        })\r\n        props.setFiles(newFiles);\r\n    }\r\n\r\n    const onTargetClick = () => {\r\n        fileInputRef.current.click();\r\n    }\r\n    const onDropHandler = (files, event) => {\r\n        const newFilesToPush = [...files];\r\n        const newFiles = [];\r\n        newFilesToPush.forEach(item => {\r\n            newFiles.push(item);\r\n        })\r\n        props.setFiles(newFiles);\r\n    }\r\n\r\n    const handleRemoveFile = (index) => {\r\n        props.setFiles([]);\r\n    }\r\n    let viewFiles = []\r\n\r\n    viewFiles = props.files.map((f, index) => {\r\n        return <ImageFileProgram image={f} index={index} handleRemoveFile={handleRemoveFile}/>\r\n    });\r\n\r\n\r\n    return(\r\n        <form onSubmit={props.handleSubmit} className={classes.form}>\r\n            <div className={classes.field + \" \" + classes.inputField}>\r\n                <label className={classes.fieldLabel}>{t(\"addProgram.name\")}</label>\r\n                <Field component={AuthInput} placeholder={t(\"addProgram.namePlaceholder\")} name=\"name\"\r\n                    validate={[required]}/>\r\n            </div>\r\n            <div className={classes.field}>\r\n                <label className={classes.fieldLabel}>{t(\"addActivity.supervisor\")}</label>\r\n                <p></p>\r\n                <Field component={CustomSelect} options={departamentOptions} setFunction={props.setDepartament} width={selectWidth} \r\n                        validate={[required]} name=\"departament\" disableDefValueOption={disableDefSupervisorOption} disableDefValueOptionText={disableDefSupervisorOptionText}/>\r\n            </div>\r\n            <div className={classes.field + \" \" + classes.inputField}>\r\n                <label className={classes.fieldLabel}>{t(\"addActivity.description\")}</label>\r\n                <Field component={TextAreaCustom} name=\"description\"\r\n                    rows={2} onChange={handleTextArea} isBig={true}/>\r\n            </div>\r\n            <div className={classes.field + \" \" + classes.inputField}>\r\n                <label className={classes.fieldLabel}>{t(\"addActivity.description\")}</label>\r\n                <Field component={TextAreaCustom} name=\"description\"\r\n                       maxLength={maxLength} left={charactersLeft} rows={5} onChange={handleTextArea} isBig={true}/>\r\n            </div>\r\n            <div className={classes.field}>\r\n                <label className={classes.fieldLabel}>{t(\"addProgram.uploadTitle\")}</label>\r\n                {props.files.length > 0 ?\r\n                    <div className={classes.files}>\r\n                        {viewFiles}\r\n                    </div> : \r\n                    <div className={classes.dragNdrop}>\r\n                        <input onChange={onFileInputChange}\r\n                        ref={fileInputRef}\r\n                        type=\"file\"\r\n                        className={classes.hidden}/>\r\n                        <FileDrop onDrop={(files, event) => onDropHandler(files, event)} onTargetClick={onTargetClick} className={classes.drop} draggingOverFrameClassName={classes.onDrag} targetClassName={classes.dropInner}>\r\n                            <div className={classes.uploadBut}>\r\n                                <img src={uploadicon}/>\r\n                                <p>{t(\"addProgram.upload\")}</p>\r\n                            </div>\r\n                            <p className={classes.dragText}>{t(\"addProgram.drag\")}</p>\r\n                        </FileDrop>\r\n                    </div>\r\n                }\r\n            </div>\r\n            <div className={classes.fieldBut}>\r\n                <button>{t(\"addProgram.addBut\")}</button>\r\n                <NavLink to=\"/activities\">{t(\"addProgram.cancel\")}</NavLink>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddProgramReduxForm = reduxForm({form: 'addProgram'})(AddProgramForm);\r\n\r\nconst AddProgram = (props) => {\r\n    const {t, i18n} = useTranslation();\r\n    const [departament, setDepartament] = useState(\"\");\r\n    const [files, setFiles] = useState([]);\r\n\r\n    const onSubmit = (formData) => {\r\n        console.log(formData);\r\n    }\r\n\r\n    return(\r\n        \r\n        <div className={classes.main}>\r\n            {props.user.roleId != ROLE_MANAGER && <Redirect to=\"/\"/>}\r\n            {props.isFetching && <Preloader/>}\r\n            <div className={classes.header}>\r\n                <div className={classes.headerContainer}>\r\n                    <h1>{t(\"addProgram.title\")}</h1>\r\n                </div>\r\n            </div>\r\n            <div className={classes.formContainer}>\r\n                <AddProgramReduxForm onSubmit={onSubmit} setFiles={setFiles} files={files} setDepartament={setDepartament} direction={props.direction}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isFetching: state.common.isFetching,\r\n    direction: state.common.direction,\r\n    user: state.user.user\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n\r\n})(AddProgram);","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Programs\\ImageFileProgram\\ImageFileProgram.jsx",["600"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport classes from './ImageFileProgram.module.css';\r\n\r\nconst StyledBut = styled.button`\r\n    left: ${({ direction }) => direction === \"ltr\" ? \"10px\" : \"-10px\"};\r\n`;\r\n\r\nconst ImageFileProgram = (props) => {\r\n    return(\r\n        <div className={classes.main}>\r\n            <StyledBut direction={props.direction} onClick={()=>{props.handleRemoveFile(props.index)}}>&#x2715;</StyledBut>\r\n            <img src={window.URL.createObjectURL(props.image)}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    direction: state.common.direction\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(ImageFileProgram);","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Programs\\ProgramItem\\ProgramItem.jsx",["601","602","603"],"C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Activites\\Resources\\ResourcesContainer.jsx",[],"C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Activites\\Resources\\Rerources.jsx",["604","605","606"],"import React, { useState } from 'react';\r\nimport classes from './Resources.module.css';\r\nimport { useTranslation } from 'react-i18next';\r\nimport styled from 'styled-components';\r\nimport { empty_state_icon } from '../../../Assets/Images/empty_state_icon';\r\n\r\nconst StyledLabel = styled.label`\r\n    margin-left: ${({ direction }) => direction === \"rtl\" ? \"56px\" : \"0\"};\r\n    margin-right: ${({ direction }) => direction === \"ltr\" ? \"56px\" : \"0\"};\r\n`;\r\n\r\nconst Resource = (props) => {\r\n    const { t, i18n } = useTranslation();\r\n\r\n\r\n\r\n    let libraryItemsList = [];\r\n\r\n    // libraryItemsList = props.libraryItemsList.map(item => {\r\n\r\n    // });\r\n\r\n    return (\r\n        <div className={classes.main}>\r\n            <div className={classes.header}>\r\n                <div className={classes.container}>\r\n                    <h1>{t(\"activities.resources.title\")}</h1>\r\n                    <div className={classes.filters}>\r\n                        <StyledLabel className={classes.filter} direction={props.direction}>\r\n                            <span className={classes.filterText}>{t(\"courses.filters.all\")}</span>\r\n                            <input type=\"checkbox\" onChange={() => { props.setAll() }} checked={props.all} value={props.all} />\r\n                            <span className={classes.checkmark}></span>\r\n                        </StyledLabel>\r\n                        <StyledLabel className={classes.filter} direction={props.direction}>\r\n                            <span className={classes.filterText}>{t(\"activities.resources.images\")}</span>\r\n                            <input type=\"checkbox\" onChange={() => { props.setIsImage(!props.isImage) }} checked={props.isImage} />\r\n                            <span className={classes.checkmark}></span>\r\n                        </StyledLabel>\r\n                        <StyledLabel className={classes.filter} direction={props.direction}>\r\n                            <span className={classes.filterText}>{t(\"activities.resources.hyperlinks\")}</span>\r\n                            <input type=\"checkbox\" onChange={() => { props.setIsHyperlink(!props.isHyperlink) }} checked={props.isHyperlink} />\r\n                            <span className={classes.checkmark}></span>\r\n                        </StyledLabel>\r\n                        <StyledLabel className={classes.filter} direction={props.direction}>\r\n                            <span className={classes.filterText}>{t(\"activities.resources.files\")}</span>\r\n                            <input type=\"checkbox\" onChange={() => { props.setIsFiles(!props.isFiles) }} checked={props.isFiles} />\r\n                            <span className={classes.checkmark}></span>\r\n                        </StyledLabel>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={classes.itemsList}>\r\n                <div className={classes.containerItems}>\r\n                    {(libraryItemsList.length > 0 && libraryItemsList != null && libraryItemsList != undefined) ? libraryItemsList :\r\n                        <div className={classes.empty}>\r\n                            <div className={classes.emptyIcon}>\r\n                                {empty_state_icon}\r\n                            </div>\r\n                            <span>{t(\"activities.resources.noResources\")}</span>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Resource;","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Home\\Activities\\LearnerHomeActivities\\HomeActivities.jsx",["607","608","609"],"import React from 'react';\r\nimport classes from './HomeActivities.module.css';\r\nimport { activitiesicon } from '../../../../Assets/Images/activities';\r\nimport { NavLink } from 'react-router-dom';\r\nimport ActivityItem from '../../../Activites/ActivityItem/ActivityItem';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { empty_state_icon } from '../../../../Assets/Images/empty_state_icon';\r\n\r\nconst HomeActivities = (props) => {\r\n    const {t, i18n} = useTranslation();\r\n    let maxActivitiesToView = 10;\r\n    let blockWidth = 100;\r\n\r\n    let activities = [];\r\n\r\n    props.activities.sort(function(a,b){\r\n        return new Date(b.end) - new Date(a.end);\r\n    });\r\n\r\n    activities = props.activities.map((item, index) => {\r\n        if(index < maxActivitiesToView){\r\n            return <ActivityItem item={item} key={item.activityId} width={blockWidth}/>\r\n        }\r\n    });\r\n    return(\r\n        <div className={classes.main}>\r\n            <div className={classes.activitiesHeader}>\r\n                <div className={classes.activitiesHeaderBlock}>\r\n                    {activitiesicon}\r\n                    <span>{t(\"home.activities.title\")}</span>\r\n                </div>\r\n                <NavLink to=\"/activities\">{t(\"home.activities.viewAll\")}</NavLink>\r\n            </div>\r\n            <div className={classes.itemsList}>\r\n                {(activities.length > 0 && activities != null && activities != undefined) ? activities : \r\n                    <div className={classes.empty}>\r\n                        <div className={classes.emptyIcon}>\r\n                            {empty_state_icon}\r\n                        </div>\r\n                        <span>{t(\"home.activities.empty\")}</span>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomeActivities;","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Home\\Activities\\ManagerHomeActivities\\ManagerHomeActivities.jsx",["610","611","612","613","614","615"],"import React, { useState } from 'react';\r\nimport classes from './ManagerHomeActivities.module.css';\r\nimport { activitiesicon } from '../../../../Assets/Images/activities';\r\nimport { NavLink } from 'react-router-dom';\r\nimport ActivityItem from '../../../Activites/ActivityItem/ActivityItem';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { empty_state_icon } from '../../../../Assets/Images/empty_state_icon';\r\nimport { ACTIVITY_SOURCE_ASSIGNED, ACTIVITY_SOURCE_LOGGED } from '../../../../Utils/constants';\r\n\r\nconst ManagerHomeActivities = (props) => {\r\n    const {t, i18n} = useTranslation();\r\n    let maxActivitiesToView = 10;\r\n    let blockWidth = 100;\r\n\r\n    let activities = [];\r\n\r\n    let assigned = [];\r\n    let logged = [];\r\n\r\n    const [currentTab, setCurrentTab] = useState(ACTIVITY_SOURCE_ASSIGNED);\r\n\r\n    const handleTabs = (tab) => {\r\n        setCurrentTab(tab);\r\n    }\r\n\r\n    props.activities.sort(function(a,b){\r\n        return new Date(b.end) - new Date(a.end);\r\n    });\r\n\r\n    assigned = props.activities.map((item, index) => {\r\n        if(index < maxActivitiesToView){\r\n            if(item.source === ACTIVITY_SOURCE_ASSIGNED){\r\n                return <ActivityItem item={item} key={item.activityId} width={blockWidth}/>\r\n            }\r\n        }\r\n    });\r\n\r\n    logged = props.activities.map((item, index) => {\r\n        if(index < maxActivitiesToView){\r\n            if(item.source === ACTIVITY_SOURCE_LOGGED){\r\n                return <ActivityItem item={item} key={item.activityId} width={blockWidth}/>\r\n            }\r\n        }\r\n    });\r\n\r\n    \r\n\r\n\r\n    return(\r\n        <div className={classes.main}>\r\n            <div className={classes.activitiesHeader}>\r\n                <div className={classes.activitiesHeaderBlock}>\r\n                    {activitiesicon}\r\n                    <span>{t(\"home.activities.title\")}</span>\r\n                </div>\r\n                <NavLink to=\"/activities\">{t(\"home.activities.viewAll\")}</NavLink>\r\n            </div>\r\n            <div className={classes.tabs}>\r\n                <div className={classes.tabsContainer}>\r\n                    <button onClick={()=>{handleTabs(ACTIVITY_SOURCE_ASSIGNED)}} className={classes.tab + \" \" + (currentTab === ACTIVITY_SOURCE_ASSIGNED && classes.activeTab)}>{t(\"home.activities.tabs.assigned\")}</button>\r\n                    <button onClick={()=>{handleTabs(ACTIVITY_SOURCE_LOGGED)}} className={classes.tab + \" \" + (currentTab === ACTIVITY_SOURCE_LOGGED && classes.activeTab)}>{t(\"home.activities.tabs.logged\")}</button>\r\n                </div>\r\n            </div>\r\n            <div className={classes.itemsList}>\r\n                {currentTab === ACTIVITY_SOURCE_ASSIGNED && \r\n                    ((assigned.length > 0 && assigned && assigned != undefined) ? assigned :\r\n                    <div className={classes.empty}>\r\n                        <div className={classes.emptyIcon}>\r\n                            {empty_state_icon}\r\n                        </div>\r\n                        <span>{t(\"home.activities.empty\")}</span>\r\n                    </div>)\r\n                }\r\n                {currentTab === ACTIVITY_SOURCE_LOGGED && \r\n                    ((logged.length > 0 && logged && logged != undefined) ? logged :\r\n                    <div className={classes.empty}>\r\n                        <div className={classes.emptyIcon}>\r\n                            {empty_state_icon}\r\n                        </div>\r\n                        <span>{t(\"home.activities.empty\")}</span>\r\n                    </div>)\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ManagerHomeActivities;","C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Programs\\ProgramDetails\\ProgramAttendees\\ProgramAttendeesContainer.jsx",["616","617","618"],"C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Programs\\ProgramDetails\\ProgramAttendees\\ProgramAttendees.jsx",["619"],"C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Programs\\ProgramDetails\\ProgramView\\ProgramViewContainer.jsx",["620"],"C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Programs\\ProgramDetails\\ProgramView\\ProgramView.jsx",["621","622","623"],"C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Courses\\AddCourse\\AddCourse.jsx",["624","625","626","627","628"],"C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Courses\\AddCourse\\ImageFileCourse\\ImageFileCourse.jsx",["629"],"C:\\Users\\Nadai\\lxp-frontend\\src\\Pages\\Courses\\AddCourse\\LessonFileCourse\\LessonFileCourse.jsx",["630","631"],{"ruleId":"632","replacedBy":"633"},{"ruleId":"634","replacedBy":"635"},{"ruleId":"636","severity":1,"message":"637","line":36,"column":11,"nodeType":"638","messageId":"639","endLine":36,"endColumn":12},{"ruleId":"640","severity":1,"message":"641","line":12,"column":7,"nodeType":"642","endLine":12,"endColumn":9,"suggestions":"643"},{"ruleId":"636","severity":1,"message":"644","line":3,"column":8,"nodeType":"638","messageId":"639","endLine":3,"endColumn":19},{"ruleId":"636","severity":1,"message":"645","line":25,"column":7,"nodeType":"638","messageId":"639","endLine":25,"endColumn":25},{"ruleId":"636","severity":1,"message":"646","line":31,"column":15,"nodeType":"638","messageId":"639","endLine":31,"endColumn":19},{"ruleId":"636","severity":1,"message":"647","line":32,"column":9,"nodeType":"638","messageId":"639","endLine":32,"endColumn":25},{"ruleId":"636","severity":1,"message":"648","line":33,"column":9,"nodeType":"638","messageId":"639","endLine":33,"endColumn":26},{"ruleId":"640","severity":1,"message":"641","line":40,"column":7,"nodeType":"642","endLine":40,"endColumn":9,"suggestions":"649"},{"ruleId":"640","severity":1,"message":"650","line":58,"column":7,"nodeType":"642","endLine":58,"endColumn":23,"suggestions":"651"},{"ruleId":"636","severity":1,"message":"652","line":1,"column":28,"nodeType":"638","messageId":"639","endLine":1,"endColumn":36},{"ruleId":"640","severity":1,"message":"641","line":13,"column":7,"nodeType":"642","endLine":13,"endColumn":30,"suggestions":"653"},{"ruleId":"640","severity":1,"message":"641","line":17,"column":7,"nodeType":"642","endLine":17,"endColumn":33,"suggestions":"654"},{"ruleId":"640","severity":1,"message":"641","line":13,"column":7,"nodeType":"642","endLine":13,"endColumn":42,"suggestions":"655"},{"ruleId":"656","severity":1,"message":"657","line":21,"column":30,"nodeType":"658","messageId":"659","endLine":21,"endColumn":32},{"ruleId":"656","severity":1,"message":"657","line":21,"column":64,"nodeType":"658","messageId":"659","endLine":21,"endColumn":66},{"ruleId":"636","severity":1,"message":"660","line":1,"column":17,"nodeType":"638","messageId":"639","endLine":1,"endColumn":28},{"ruleId":"636","severity":1,"message":"661","line":7,"column":20,"nodeType":"638","messageId":"639","endLine":7,"endColumn":23},{"ruleId":"636","severity":1,"message":"646","line":22,"column":15,"nodeType":"638","messageId":"639","endLine":22,"endColumn":19},{"ruleId":"636","severity":1,"message":"662","line":30,"column":9,"nodeType":"638","messageId":"639","endLine":30,"endColumn":35},{"ruleId":"636","severity":1,"message":"663","line":31,"column":9,"nodeType":"638","messageId":"639","endLine":31,"endColumn":39},{"ruleId":"636","severity":1,"message":"664","line":59,"column":9,"nodeType":"638","messageId":"639","endLine":59,"endColumn":27},{"ruleId":"665","severity":1,"message":"666","line":166,"column":29,"nodeType":"667","endLine":166,"endColumn":52},{"ruleId":"636","severity":1,"message":"646","line":190,"column":15,"nodeType":"638","messageId":"639","endLine":190,"endColumn":19},{"ruleId":"636","severity":1,"message":"668","line":191,"column":12,"nodeType":"638","messageId":"639","endLine":191,"endColumn":16},{"ruleId":"636","severity":1,"message":"669","line":192,"column":12,"nodeType":"638","messageId":"639","endLine":192,"endColumn":22},{"ruleId":"640","severity":1,"message":"641","line":13,"column":7,"nodeType":"642","endLine":13,"endColumn":30,"suggestions":"670"},{"ruleId":"636","severity":1,"message":"652","line":1,"column":28,"nodeType":"638","messageId":"639","endLine":1,"endColumn":36},{"ruleId":"640","severity":1,"message":"641","line":14,"column":7,"nodeType":"642","endLine":14,"endColumn":30,"suggestions":"671"},{"ruleId":"640","severity":1,"message":"641","line":18,"column":7,"nodeType":"642","endLine":18,"endColumn":33,"suggestions":"672"},{"ruleId":"636","severity":1,"message":"646","line":12,"column":15,"nodeType":"638","messageId":"639","endLine":12,"endColumn":19},{"ruleId":"636","severity":1,"message":"646","line":23,"column":15,"nodeType":"638","messageId":"639","endLine":23,"endColumn":19},{"ruleId":"636","severity":1,"message":"662","line":31,"column":9,"nodeType":"638","messageId":"639","endLine":31,"endColumn":35},{"ruleId":"636","severity":1,"message":"663","line":32,"column":9,"nodeType":"638","messageId":"639","endLine":32,"endColumn":39},{"ruleId":"636","severity":1,"message":"664","line":61,"column":9,"nodeType":"638","messageId":"639","endLine":61,"endColumn":27},{"ruleId":"665","severity":1,"message":"666","line":170,"column":29,"nodeType":"667","endLine":170,"endColumn":52},{"ruleId":"636","severity":1,"message":"646","line":199,"column":15,"nodeType":"638","messageId":"639","endLine":199,"endColumn":19},{"ruleId":"636","severity":1,"message":"668","line":200,"column":12,"nodeType":"638","messageId":"639","endLine":200,"endColumn":16},{"ruleId":"636","severity":1,"message":"669","line":202,"column":12,"nodeType":"638","messageId":"639","endLine":202,"endColumn":22},{"ruleId":"640","severity":1,"message":"641","line":209,"column":7,"nodeType":"642","endLine":209,"endColumn":9,"suggestions":"673"},{"ruleId":"640","severity":1,"message":"641","line":13,"column":7,"nodeType":"642","endLine":13,"endColumn":19,"suggestions":"674"},{"ruleId":"636","severity":1,"message":"675","line":8,"column":12,"nodeType":"638","messageId":"639","endLine":8,"endColumn":23},{"ruleId":"636","severity":1,"message":"676","line":8,"column":25,"nodeType":"638","messageId":"639","endLine":8,"endColumn":39},{"ruleId":"640","severity":1,"message":"641","line":43,"column":7,"nodeType":"642","endLine":43,"endColumn":9,"suggestions":"677"},{"ruleId":"640","severity":1,"message":"641","line":10,"column":7,"nodeType":"642","endLine":10,"endColumn":42,"suggestions":"678"},{"ruleId":"636","severity":1,"message":"652","line":1,"column":28,"nodeType":"638","messageId":"639","endLine":1,"endColumn":36},{"ruleId":"636","severity":1,"message":"679","line":6,"column":8,"nodeType":"638","messageId":"639","endLine":6,"endColumn":13},{"ruleId":"640","severity":1,"message":"680","line":21,"column":7,"nodeType":"642","endLine":21,"endColumn":19,"suggestions":"681"},{"ruleId":"640","severity":1,"message":"682","line":25,"column":7,"nodeType":"642","endLine":25,"endColumn":33,"suggestions":"683"},{"ruleId":"636","severity":1,"message":"646","line":14,"column":15,"nodeType":"638","messageId":"639","endLine":14,"endColumn":19},{"ruleId":"636","severity":1,"message":"646","line":44,"column":15,"nodeType":"638","messageId":"639","endLine":44,"endColumn":19},{"ruleId":"640","severity":1,"message":"641","line":48,"column":7,"nodeType":"642","endLine":48,"endColumn":9,"suggestions":"684"},{"ruleId":"636","severity":1,"message":"646","line":13,"column":15,"nodeType":"638","messageId":"639","endLine":13,"endColumn":19},{"ruleId":"636","severity":1,"message":"646","line":41,"column":15,"nodeType":"638","messageId":"639","endLine":41,"endColumn":19},{"ruleId":"640","severity":1,"message":"641","line":49,"column":7,"nodeType":"642","endLine":49,"endColumn":9,"suggestions":"685"},{"ruleId":"686","severity":1,"message":"687","line":10,"column":21,"nodeType":"688","messageId":"689","endLine":10,"endColumn":22,"suggestions":"690"},{"ruleId":"636","severity":1,"message":"646","line":18,"column":15,"nodeType":"638","messageId":"639","endLine":18,"endColumn":19},{"ruleId":"636","severity":1,"message":"691","line":1,"column":17,"nodeType":"638","messageId":"639","endLine":1,"endColumn":26},{"ruleId":"636","severity":1,"message":"652","line":1,"column":28,"nodeType":"638","messageId":"639","endLine":1,"endColumn":36},{"ruleId":"636","severity":1,"message":"646","line":13,"column":15,"nodeType":"638","messageId":"639","endLine":13,"endColumn":19},{"ruleId":"636","severity":1,"message":"692","line":20,"column":8,"nodeType":"638","messageId":"639","endLine":20,"endColumn":15},{"ruleId":"636","severity":1,"message":"646","line":45,"column":15,"nodeType":"638","messageId":"639","endLine":45,"endColumn":19},{"ruleId":"665","severity":1,"message":"666","line":139,"column":25,"nodeType":"667","endLine":139,"endColumn":91},{"ruleId":"636","severity":1,"message":"691","line":1,"column":17,"nodeType":"638","messageId":"639","endLine":1,"endColumn":26},{"ruleId":"636","severity":1,"message":"652","line":1,"column":28,"nodeType":"638","messageId":"639","endLine":1,"endColumn":36},{"ruleId":"636","severity":1,"message":"646","line":14,"column":15,"nodeType":"638","messageId":"639","endLine":14,"endColumn":19},{"ruleId":"665","severity":1,"message":"666","line":8,"column":13,"nodeType":"667","endLine":8,"endColumn":35},{"ruleId":"636","severity":1,"message":"646","line":10,"column":15,"nodeType":"638","messageId":"639","endLine":10,"endColumn":19},{"ruleId":"665","severity":1,"message":"666","line":20,"column":17,"nodeType":"667","endLine":20,"endColumn":36},{"ruleId":"636","severity":1,"message":"646","line":10,"column":15,"nodeType":"638","messageId":"639","endLine":10,"endColumn":19},{"ruleId":"636","severity":1,"message":"693","line":13,"column":12,"nodeType":"638","messageId":"639","endLine":13,"endColumn":16},{"ruleId":"665","severity":1,"message":"666","line":68,"column":25,"nodeType":"667","endLine":68,"endColumn":42},{"ruleId":"665","severity":1,"message":"666","line":71,"column":25,"nodeType":"667","endLine":71,"endColumn":44},{"ruleId":"665","severity":1,"message":"666","line":22,"column":17,"nodeType":"667","endLine":22,"endColumn":37},{"ruleId":"636","severity":1,"message":"646","line":11,"column":15,"nodeType":"638","messageId":"639","endLine":11,"endColumn":19},{"ruleId":"640","severity":1,"message":"641","line":17,"column":7,"nodeType":"642","endLine":17,"endColumn":9,"suggestions":"694"},{"ruleId":"636","severity":1,"message":"646","line":13,"column":15,"nodeType":"638","messageId":"639","endLine":13,"endColumn":19},{"ruleId":"640","severity":1,"message":"641","line":32,"column":7,"nodeType":"642","endLine":32,"endColumn":19,"suggestions":"695"},{"ruleId":"665","severity":1,"message":"666","line":43,"column":21,"nodeType":"667","endLine":43,"endColumn":156},{"ruleId":"665","severity":1,"message":"666","line":44,"column":21,"nodeType":"667","endLine":44,"endColumn":72},{"ruleId":"636","severity":1,"message":"646","line":13,"column":15,"nodeType":"638","messageId":"639","endLine":13,"endColumn":19},{"ruleId":"640","severity":1,"message":"641","line":19,"column":7,"nodeType":"642","endLine":19,"endColumn":9,"suggestions":"696"},{"ruleId":"665","severity":1,"message":"666","line":37,"column":17,"nodeType":"667","endLine":37,"endColumn":169},{"ruleId":"636","severity":1,"message":"697","line":57,"column":7,"nodeType":"638","messageId":"639","endLine":57,"endColumn":22},{"ruleId":"636","severity":1,"message":"646","line":7,"column":15,"nodeType":"638","messageId":"639","endLine":7,"endColumn":19},{"ruleId":"640","severity":1,"message":"698","line":19,"column":7,"nodeType":"642","endLine":19,"endColumn":9,"suggestions":"699"},{"ruleId":"636","severity":1,"message":"646","line":9,"column":15,"nodeType":"638","messageId":"639","endLine":9,"endColumn":19},{"ruleId":"700","severity":1,"message":"701","line":14,"column":55,"nodeType":"702","messageId":"703","endLine":14,"endColumn":57},{"ruleId":"700","severity":1,"message":"701","line":20,"column":52,"nodeType":"702","messageId":"703","endLine":20,"endColumn":54},{"ruleId":"665","severity":1,"message":"666","line":36,"column":29,"nodeType":"667","endLine":36,"endColumn":56},{"ruleId":"636","severity":1,"message":"646","line":16,"column":15,"nodeType":"638","messageId":"639","endLine":16,"endColumn":19},{"ruleId":"636","severity":1,"message":"652","line":1,"column":17,"nodeType":"638","messageId":"639","endLine":1,"endColumn":25},{"ruleId":"636","severity":1,"message":"646","line":16,"column":16,"nodeType":"638","messageId":"639","endLine":16,"endColumn":20},{"ruleId":"656","severity":1,"message":"657","line":65,"column":75,"nodeType":"658","messageId":"659","endLine":65,"endColumn":77},{"ruleId":"636","severity":1,"message":"704","line":2,"column":10,"nodeType":"638","messageId":"639","endLine":2,"endColumn":17},{"ruleId":"636","severity":1,"message":"646","line":7,"column":15,"nodeType":"638","messageId":"639","endLine":7,"endColumn":19},{"ruleId":"656","severity":1,"message":"657","line":11,"column":36,"nodeType":"658","messageId":"659","endLine":11,"endColumn":38},{"ruleId":"665","severity":1,"message":"666","line":11,"column":49,"nodeType":"667","endLine":11,"endColumn":78},{"ruleId":"636","severity":1,"message":"646","line":10,"column":15,"nodeType":"638","messageId":"639","endLine":10,"endColumn":19},{"ruleId":"700","severity":1,"message":"701","line":14,"column":51,"nodeType":"702","messageId":"703","endLine":14,"endColumn":53},{"ruleId":"656","severity":1,"message":"657","line":31,"column":68,"nodeType":"658","messageId":"659","endLine":31,"endColumn":70},{"ruleId":"636","severity":1,"message":"646","line":11,"column":15,"nodeType":"638","messageId":"639","endLine":11,"endColumn":19},{"ruleId":"640","severity":1,"message":"641","line":56,"column":7,"nodeType":"642","endLine":56,"endColumn":9,"suggestions":"705"},{"ruleId":"636","severity":1,"message":"706","line":58,"column":12,"nodeType":"638","messageId":"639","endLine":58,"endColumn":26},{"ruleId":"636","severity":1,"message":"707","line":59,"column":12,"nodeType":"638","messageId":"639","endLine":59,"endColumn":26},{"ruleId":"636","severity":1,"message":"708","line":60,"column":12,"nodeType":"638","messageId":"639","endLine":60,"endColumn":28},{"ruleId":"709","severity":1,"message":"710","line":63,"column":103,"nodeType":"711","endLine":63,"endColumn":130},{"ruleId":"709","severity":1,"message":"710","line":64,"column":108,"nodeType":"711","endLine":64,"endColumn":135},{"ruleId":"636","severity":1,"message":"712","line":1,"column":28,"nodeType":"638","messageId":"639","endLine":1,"endColumn":38},{"ruleId":"640","severity":1,"message":"641","line":49,"column":7,"nodeType":"642","endLine":49,"endColumn":9,"suggestions":"713"},{"ruleId":"636","severity":1,"message":"646","line":43,"column":15,"nodeType":"638","messageId":"639","endLine":43,"endColumn":19},{"ruleId":"640","severity":1,"message":"714","line":64,"column":8,"nodeType":"642","endLine":64,"endColumn":26,"suggestions":"715"},{"ruleId":"636","severity":1,"message":"646","line":46,"column":15,"nodeType":"638","messageId":"639","endLine":46,"endColumn":19},{"ruleId":"636","severity":1,"message":"646","line":22,"column":15,"nodeType":"638","messageId":"639","endLine":22,"endColumn":19},{"ruleId":"636","severity":1,"message":"646","line":6,"column":16,"nodeType":"638","messageId":"639","endLine":6,"endColumn":20},{"ruleId":"636","severity":1,"message":"716","line":2,"column":16,"nodeType":"638","messageId":"639","endLine":2,"endColumn":27},{"ruleId":"636","severity":1,"message":"646","line":9,"column":16,"nodeType":"638","messageId":"639","endLine":9,"endColumn":20},{"ruleId":"636","severity":1,"message":"717","line":2,"column":16,"nodeType":"638","messageId":"639","endLine":2,"endColumn":23},{"ruleId":"636","severity":1,"message":"646","line":9,"column":16,"nodeType":"638","messageId":"639","endLine":9,"endColumn":20},{"ruleId":"665","severity":1,"message":"666","line":37,"column":13,"nodeType":"667","endLine":37,"endColumn":57},{"ruleId":"636","severity":1,"message":"646","line":27,"column":15,"nodeType":"638","messageId":"639","endLine":27,"endColumn":19},{"ruleId":"656","severity":1,"message":"657","line":47,"column":21,"nodeType":"658","messageId":"659","endLine":47,"endColumn":23},{"ruleId":"656","severity":1,"message":"657","line":49,"column":27,"nodeType":"658","messageId":"659","endLine":49,"endColumn":29},{"ruleId":"656","severity":1,"message":"657","line":51,"column":27,"nodeType":"658","messageId":"659","endLine":51,"endColumn":29},{"ruleId":"665","severity":1,"message":"666","line":71,"column":17,"nodeType":"667","endLine":71,"endColumn":42},{"ruleId":"636","severity":1,"message":"646","line":28,"column":15,"nodeType":"638","messageId":"639","endLine":28,"endColumn":19},{"ruleId":"665","severity":1,"message":"666","line":38,"column":25,"nodeType":"667","endLine":38,"endColumn":84},{"ruleId":"665","severity":1,"message":"666","line":44,"column":25,"nodeType":"667","endLine":44,"endColumn":80},{"ruleId":"636","severity":1,"message":"691","line":1,"column":17,"nodeType":"638","messageId":"639","endLine":1,"endColumn":26},{"ruleId":"636","severity":1,"message":"646","line":12,"column":16,"nodeType":"638","messageId":"639","endLine":12,"endColumn":20},{"ruleId":"636","severity":1,"message":"718","line":1,"column":17,"nodeType":"638","messageId":"639","endLine":1,"endColumn":25},{"ruleId":"636","severity":1,"message":"646","line":15,"column":15,"nodeType":"638","messageId":"639","endLine":15,"endColumn":19},{"ruleId":"656","severity":1,"message":"657","line":43,"column":21,"nodeType":"658","messageId":"659","endLine":43,"endColumn":23},{"ruleId":"656","severity":1,"message":"657","line":45,"column":27,"nodeType":"658","messageId":"659","endLine":45,"endColumn":29},{"ruleId":"656","severity":1,"message":"657","line":47,"column":27,"nodeType":"658","messageId":"659","endLine":47,"endColumn":29},{"ruleId":"665","severity":1,"message":"666","line":66,"column":17,"nodeType":"667","endLine":66,"endColumn":74},{"ruleId":"636","severity":1,"message":"719","line":6,"column":9,"nodeType":"638","messageId":"639","endLine":6,"endColumn":19},{"ruleId":"636","severity":1,"message":"646","line":33,"column":15,"nodeType":"638","messageId":"639","endLine":33,"endColumn":19},{"ruleId":"636","severity":1,"message":"646","line":8,"column":15,"nodeType":"638","messageId":"639","endLine":8,"endColumn":19},{"ruleId":"656","severity":1,"message":"657","line":13,"column":36,"nodeType":"658","messageId":"659","endLine":13,"endColumn":38},{"ruleId":"665","severity":1,"message":"666","line":13,"column":49,"nodeType":"667","endLine":13,"endColumn":78},{"ruleId":"636","severity":1,"message":"646","line":10,"column":15,"nodeType":"638","messageId":"639","endLine":10,"endColumn":19},{"ruleId":"636","severity":1,"message":"720","line":11,"column":9,"nodeType":"638","messageId":"639","endLine":11,"endColumn":26},{"ruleId":"656","severity":1,"message":"657","line":24,"column":67,"nodeType":"658","messageId":"659","endLine":24,"endColumn":69},{"ruleId":"636","severity":1,"message":"646","line":17,"column":15,"nodeType":"638","messageId":"639","endLine":17,"endColumn":19},{"ruleId":"665","severity":1,"message":"666","line":120,"column":33,"nodeType":"667","endLine":120,"endColumn":56},{"ruleId":"636","severity":1,"message":"646","line":139,"column":15,"nodeType":"638","messageId":"639","endLine":139,"endColumn":19},{"ruleId":"636","severity":1,"message":"721","line":140,"column":12,"nodeType":"638","messageId":"639","endLine":140,"endColumn":23},{"ruleId":"656","severity":1,"message":"657","line":150,"column":32,"nodeType":"658","messageId":"659","endLine":150,"endColumn":34},{"ruleId":"665","severity":1,"message":"666","line":14,"column":13,"nodeType":"667","endLine":14,"endColumn":65},{"ruleId":"636","severity":1,"message":"646","line":27,"column":15,"nodeType":"638","messageId":"639","endLine":27,"endColumn":19},{"ruleId":"656","severity":1,"message":"657","line":37,"column":36,"nodeType":"658","messageId":"659","endLine":37,"endColumn":38},{"ruleId":"665","severity":1,"message":"666","line":37,"column":49,"nodeType":"667","endLine":37,"endColumn":78},{"ruleId":"636","severity":1,"message":"652","line":1,"column":17,"nodeType":"638","messageId":"639","endLine":1,"endColumn":25},{"ruleId":"636","severity":1,"message":"646","line":13,"column":16,"nodeType":"638","messageId":"639","endLine":13,"endColumn":20},{"ruleId":"656","severity":1,"message":"657","line":54,"column":99,"nodeType":"658","messageId":"659","endLine":54,"endColumn":101},{"ruleId":"636","severity":1,"message":"646","line":10,"column":15,"nodeType":"638","messageId":"639","endLine":10,"endColumn":19},{"ruleId":"700","severity":1,"message":"701","line":20,"column":53,"nodeType":"702","messageId":"703","endLine":20,"endColumn":55},{"ruleId":"656","severity":1,"message":"657","line":35,"column":77,"nodeType":"658","messageId":"659","endLine":35,"endColumn":79},{"ruleId":"636","severity":1,"message":"646","line":11,"column":15,"nodeType":"638","messageId":"639","endLine":11,"endColumn":19},{"ruleId":"636","severity":1,"message":"722","line":15,"column":9,"nodeType":"638","messageId":"639","endLine":15,"endColumn":19},{"ruleId":"700","severity":1,"message":"701","line":30,"column":51,"nodeType":"702","messageId":"703","endLine":30,"endColumn":53},{"ruleId":"700","severity":1,"message":"701","line":38,"column":49,"nodeType":"702","messageId":"703","endLine":38,"endColumn":51},{"ruleId":"656","severity":1,"message":"657","line":66,"column":67,"nodeType":"658","messageId":"659","endLine":66,"endColumn":69},{"ruleId":"656","severity":1,"message":"657","line":75,"column":61,"nodeType":"658","messageId":"659","endLine":75,"endColumn":63},{"ruleId":"636","severity":1,"message":"723","line":5,"column":10,"nodeType":"638","messageId":"639","endLine":5,"endColumn":22},{"ruleId":"640","severity":1,"message":"641","line":48,"column":7,"nodeType":"642","endLine":48,"endColumn":9,"suggestions":"724"},{"ruleId":"656","severity":1,"message":"657","line":54,"column":32,"nodeType":"658","messageId":"659","endLine":54,"endColumn":34},{"ruleId":"636","severity":1,"message":"646","line":14,"column":16,"nodeType":"638","messageId":"639","endLine":14,"endColumn":20},{"ruleId":"640","severity":1,"message":"641","line":16,"column":7,"nodeType":"642","endLine":16,"endColumn":9,"suggestions":"725"},{"ruleId":"636","severity":1,"message":"691","line":1,"column":17,"nodeType":"638","messageId":"639","endLine":1,"endColumn":26},{"ruleId":"636","severity":1,"message":"652","line":1,"column":28,"nodeType":"638","messageId":"639","endLine":1,"endColumn":36},{"ruleId":"636","severity":1,"message":"646","line":18,"column":15,"nodeType":"638","messageId":"639","endLine":18,"endColumn":19},{"ruleId":"636","severity":1,"message":"646","line":17,"column":15,"nodeType":"638","messageId":"639","endLine":17,"endColumn":19},{"ruleId":"665","severity":1,"message":"666","line":119,"column":33,"nodeType":"667","endLine":119,"endColumn":56},{"ruleId":"665","severity":1,"message":"666","line":136,"column":29,"nodeType":"667","endLine":136,"endColumn":52},{"ruleId":"636","severity":1,"message":"646","line":158,"column":15,"nodeType":"638","messageId":"639","endLine":158,"endColumn":19},{"ruleId":"656","severity":1,"message":"657","line":169,"column":32,"nodeType":"658","messageId":"659","endLine":169,"endColumn":34},{"ruleId":"665","severity":1,"message":"666","line":14,"column":13,"nodeType":"667","endLine":14,"endColumn":65},{"ruleId":"636","severity":1,"message":"691","line":1,"column":17,"nodeType":"638","messageId":"639","endLine":1,"endColumn":26},{"ruleId":"636","severity":1,"message":"726","line":13,"column":22,"nodeType":"638","messageId":"639","endLine":13,"endColumn":33},"no-native-reassign",["727"],"no-negated-in-lhs",["728"],"no-unused-vars","'t' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["729"],"'ProgressBar' is defined but never used.","'StyledProgressSpan' is assigned a value but never used.","'i18n' is assigned a value but never used.","'widthProgressBar' is assigned a value but never used.","'heightProgressBar' is assigned a value but never used.",["730"],"React Hook useEffect has a missing dependency: 't'. Either include it or remove the dependency array.",["731"],"'useState' is defined but never used.",["732"],["733"],["734"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useCallback' is defined but never used.","'foo' is defined but never used.","'disableDefSupervisorOption' is assigned a value but never used.","'disableDefSupervisorOptionText' is assigned a value but never used.","'supervisorsOptions' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'type' is assigned a value but never used.","'supervisor' is assigned a value but never used.",["735"],["736"],["737"],["738"],["739"],"'searchValue' is assigned a value but never used.","'setSearchValue' is assigned a value but never used.",["740"],["741"],"'Login' is defined but never used.","React Hook useEffect has missing dependencies: 'getProfile', 'getUnreadNotifications', 'getUserProfile', 'isStartData', 'limit', and 'user.organizationId'. Either include them or remove the dependency array. If 'getUnreadNotifications' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["742"],"React Hook useEffect has a missing dependency: 'setCurrentRoute'. Either include it or remove the dependency array. Outer scope values like 'window.location.pathname' aren't valid dependencies because mutating them doesn't re-render the component.",["743"],["744"],["745"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["746","747"],"'useEffect' is defined but never used.","'Submenu' is defined but never used.","'file' is assigned a value but never used.",["748"],["749"],["750"],"'ProfilePassword' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'input'. Either include it or remove the dependency array.",["751"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'connect' is defined but never used.",["752"],"'filterOneValue' is assigned a value but never used.","'filterTwoValue' is assigned a value but never used.","'filterThreeValue' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useReducer' is defined but never used.",["753"],"React Hook useEffect has missing dependencies: 'logit' and 'props'. Either include them or remove the dependency array. Mutable values like 'modalRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["754"],"'useLocation' is defined but never used.","'NavLink' is defined but never used.","'Fragment' is defined but never used.","'planeticon' is defined but never used.","'maxProgramsToView' is assigned a value but never used.","'departament' is assigned a value but never used.","'activities' is assigned a value but never used.","'ROLE_LEARNER' is defined but never used.",["755"],["756"],"'setProgress' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"757","fix":"758"},{"desc":"757","fix":"759"},{"desc":"760","fix":"761"},{"desc":"762","fix":"763"},{"desc":"764","fix":"765"},{"desc":"766","fix":"767"},{"desc":"762","fix":"768"},{"desc":"762","fix":"769"},{"desc":"764","fix":"770"},{"desc":"757","fix":"771"},{"desc":"772","fix":"773"},{"desc":"757","fix":"774"},{"desc":"775","fix":"776"},{"desc":"777","fix":"778"},{"desc":"779","fix":"780"},{"desc":"757","fix":"781"},{"desc":"757","fix":"782"},{"messageId":"783","fix":"784","desc":"785"},{"messageId":"786","fix":"787","desc":"788"},{"desc":"757","fix":"789"},{"desc":"772","fix":"790"},{"desc":"757","fix":"791"},{"desc":"792","fix":"793"},{"desc":"757","fix":"794"},{"desc":"757","fix":"795"},{"desc":"796","fix":"797"},{"desc":"757","fix":"798"},{"desc":"757","fix":"799"},"Update the dependencies array to be: [props]",{"range":"800","text":"801"},{"range":"802","text":"801"},"Update the dependencies array to be: [props.activity, t]",{"range":"803","text":"804"},"Update the dependencies array to be: [props, props.user.employeeId]",{"range":"805","text":"806"},"Update the dependencies array to be: [props, props.user.joinedCourses]",{"range":"807","text":"808"},"Update the dependencies array to be: [props, props.currentPage, props.pageSize]",{"range":"809","text":"810"},{"range":"811","text":"806"},{"range":"812","text":"806"},{"range":"813","text":"808"},{"range":"814","text":"801"},"Update the dependencies array to be: [props, props.user]",{"range":"815","text":"816"},{"range":"817","text":"801"},"Update the dependencies array to be: [props.pageSize, props.currentPage, props]",{"range":"818","text":"819"},"Update the dependencies array to be: [employeeId, getProfile, getUnreadNotifications, getUserProfile, isStartData, limit, user.organizationId]",{"range":"820","text":"821"},"Update the dependencies array to be: [setCurrentRoute]",{"range":"822","text":"823"},{"range":"824","text":"801"},{"range":"825","text":"801"},"removeEscape",{"range":"826","text":"827"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"828","text":"829"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"830","text":"801"},{"range":"831","text":"816"},{"range":"832","text":"801"},"Update the dependencies array to be: [input]",{"range":"833","text":"834"},{"range":"835","text":"801"},{"range":"836","text":"801"},"Update the dependencies array to be: [logit, props]",{"range":"837","text":"838"},{"range":"839","text":"801"},{"range":"840","text":"801"},[443,445],"[props]",[1676,1678],[2274,2290],"[props.activity, t]",[536,559],"[props, props.user.employeeId]",[651,677],"[props, props.user.joinedCourses]",[562,597],"[props, props.currentPage, props.pageSize]",[520,543],[547,570],[662,688],[9107,9109],[457,469],"[props, props.user]",[1386,1388],[399,434],"[props.pageSize, props.currentPage, props]",[1011,1023],"[employeeId, getProfile, getUnreadNotifications, getUserProfile, isStartData, limit, user.organizationId]",[1108,1134],"[setCurrentRoute]",[2247,2249],[2200,2202],[211,212],"",[211,211],"\\",[621,623],[1095,1107],[725,727],[630,632],"[input]",[2264,2266],[1727,1729],[2324,2342],"[logit, props]",[1586,1588],[610,612]]