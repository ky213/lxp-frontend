[{"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/index.js":"1","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/reportWebVitals.js":"2","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Redux/reduxStore.js":"3","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Utils/i18n.js":"4","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/App.js":"5","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Common/Preloader/Preloader.jsx":"6","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Redux/userReducer.js":"7","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Redux/commonReducer.js":"8","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Redux/notificationsReducer.js":"9","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Redux/coursesReducer.js":"10","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Redux/programsReducer.js":"11","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Redux/activitiesReducer.js":"12","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Courses/CoursesContainer.jsx":"13","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Common/LoadDataRouter/LoadDataRouter.jsx":"14","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Home/HomeContainer.jsx":"15","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Reports/ReportsContainer.jsx":"16","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Navbar/NavbarContainer.jsx":"17","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Activites/ActivitiesContainer.jsx":"18","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Notifications/NotificationsContainer.jsx":"19","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Profile/Profile.jsx":"20","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Lessons/LessonsContainer.jsx":"21","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Programs/ProgramsContainer.jsx":"22","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/SearchResult/SearchResultContainer.jsx":"23","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Activites/Library/LibraryContainer.jsx":"24","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Auth/Login/Login.jsx":"25","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Auth/Forgot/ForgotPassword.jsx":"26","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Activity/AddActivity/AddActivity.jsx":"27","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Activity/Activity.jsx":"28","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Activity/EditActivity/EditActivity.jsx":"29","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Api/api.js":"30","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Utils/validators.js":"31","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Common/FormControlls/FormControlls.js":"32","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Home/Home.jsx":"33","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Courses/Courses.jsx":"34","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Reports/Reports.jsx":"35","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Activites/Activities.jsx":"36","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Lessons/Lessons.jsx":"37","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Notifications/Notifications.jsx":"38","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/SearchResult/SearchResult.jsx":"39","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Programs/Programs.jsx":"40","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Activites/Library/Library.jsx":"41","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Navbar/Navbar.jsx":"42","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Profile/Info/ProfileInfo.jsx":"43","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Profile/Notifications/ProfileNotifications.jsx":"44","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Profile/Email/ProfileEmail.jsx":"45","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Profile/Password/ProfilePassword.jsx":"46","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Common/ProgressBar/ProgressBar.jsx":"47","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Activity/DeleteActivity/DeleteActivity.jsx":"48","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Activity/ActivityFile/ActivityFile.jsx":"49","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Common/Cutsom/Select/CustomSelect.jsx":"50","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Activity/Chat/Chat.jsx":"51","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/empty_state_icon.js":"52","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/courses.js":"53","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/activities.js":"54","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/programicon.js":"55","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/homeicon.js":"56","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/searchicon.js":"57","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/notification.js":"58","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/myreport.js":"59","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Home/Statistic/Statistic.jsx":"60","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Reports/ReportDetails/ReportDetails.jsx":"61","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Courses/CourseItemView/CourseItemView.jsx":"62","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Activites/ActivityItem/ActivityItem.jsx":"63","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Notifications/NotificationItem/NotificationItem.jsx":"64","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Navbar/Submenu/Submenu.jsx":"65","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/planet_icon.js":"66","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Activity/Chat/Message/Message.jsx":"67","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Notifications/NotificationsModal/NotificationsModal.jsx":"68","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Navbar/ProfileMenu/ProfileMenu.jsx":"69","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Navbar/Burger/Burger.jsx":"70","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Common/SearchModal/SearchModal.jsx":"71","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Reports/ReportMain/ReportMain.jsx":"72","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Reports/UserInfo/UserInfo.jsx":"73","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Home/Courses/Courses.jsx":"74","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Home/Activities/HomeActivities.jsx":"75","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/clock.js":"76","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/library.js":"77","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Notifications/NotificationsModal/NotificationModalItem/NotificationModalItemMenu/NotificationModalItemMenu.jsx":"78","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Notifications/NotificationsModal/NotificationModalItem/NotificationModalItem.jsx":"79","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/profile_settings_icon.js":"80","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/logout_icon.js":"81","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Reports/Filter/Filter.jsx":"82","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Navbar/Burger/BurgerMenu.jsx":"83","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Home/Courses/CourseItem/CourseItem.jsx":"84"},{"size":731,"mtime":1610570989154,"results":"85","hashOfConfig":"86"},{"size":362,"mtime":1610524818388,"results":"87","hashOfConfig":"86"},{"size":1028,"mtime":1610608671893,"results":"88","hashOfConfig":"86"},{"size":532,"mtime":1610524829408,"results":"89","hashOfConfig":"86"},{"size":4071,"mtime":1610570986252,"results":"90","hashOfConfig":"86"},{"size":303,"mtime":1610524818382,"results":"91","hashOfConfig":"86"},{"size":2893,"mtime":1610524829408,"results":"92","hashOfConfig":"86"},{"size":1720,"mtime":1610524829407,"results":"93","hashOfConfig":"86"},{"size":3272,"mtime":1610524829408,"results":"94","hashOfConfig":"86"},{"size":1295,"mtime":1610524829407,"results":"95","hashOfConfig":"86"},{"size":1341,"mtime":1610524829408,"results":"96","hashOfConfig":"86"},{"size":1608,"mtime":1610560010727,"results":"97","hashOfConfig":"86"},{"size":1954,"mtime":1610524829388,"results":"98","hashOfConfig":"86"},{"size":1684,"mtime":1610524829386,"results":"99","hashOfConfig":"86"},{"size":1554,"mtime":1610524829391,"results":"100","hashOfConfig":"86"},{"size":1519,"mtime":1610524829405,"results":"101","hashOfConfig":"86"},{"size":2006,"mtime":1610524829396,"results":"102","hashOfConfig":"86"},{"size":3078,"mtime":1610524829380,"results":"103","hashOfConfig":"86"},{"size":909,"mtime":1610524829398,"results":"104","hashOfConfig":"86"},{"size":2439,"mtime":1610570066081,"results":"105","hashOfConfig":"86"},{"size":352,"mtime":1610524829394,"results":"106","hashOfConfig":"86"},{"size":1999,"mtime":1610524829403,"results":"107","hashOfConfig":"86"},{"size":2213,"mtime":1610524829407,"results":"108","hashOfConfig":"86"},{"size":1994,"mtime":1610524829381,"results":"109","hashOfConfig":"86"},{"size":3111,"mtime":1610524829385,"results":"110","hashOfConfig":"86"},{"size":2901,"mtime":1610524829384,"results":"111","hashOfConfig":"86"},{"size":9467,"mtime":1610560010724,"results":"112","hashOfConfig":"86"},{"size":8278,"mtime":1610560010722,"results":"113","hashOfConfig":"86"},{"size":9941,"mtime":1610560010725,"results":"114","hashOfConfig":"86"},{"size":2117,"mtime":1610524829374,"results":"115","hashOfConfig":"86"},{"size":634,"mtime":1610524829409,"results":"116","hashOfConfig":"86"},{"size":1552,"mtime":1610524829385,"results":"117","hashOfConfig":"86"},{"size":1870,"mtime":1610607204464,"results":"118","hashOfConfig":"86"},{"size":2935,"mtime":1610524829388,"results":"119","hashOfConfig":"86"},{"size":854,"mtime":1610524829405,"results":"120","hashOfConfig":"86"},{"size":3930,"mtime":1610524829380,"results":"121","hashOfConfig":"86"},{"size":512,"mtime":1610524829393,"results":"122","hashOfConfig":"86"},{"size":1963,"mtime":1610524829398,"results":"123","hashOfConfig":"86"},{"size":5909,"mtime":1610524829406,"results":"124","hashOfConfig":"86"},{"size":3315,"mtime":1610524829403,"results":"125","hashOfConfig":"86"},{"size":3389,"mtime":1610524829381,"results":"126","hashOfConfig":"86"},{"size":7834,"mtime":1610608554817,"results":"127","hashOfConfig":"86"},{"size":2679,"mtime":1610524829401,"results":"128","hashOfConfig":"86"},{"size":1473,"mtime":1610524829401,"results":"129","hashOfConfig":"86"},{"size":2117,"mtime":1610524829401,"results":"130","hashOfConfig":"86"},{"size":2601,"mtime":1610524829402,"results":"131","hashOfConfig":"86"},{"size":774,"mtime":1610524829386,"results":"132","hashOfConfig":"86"},{"size":1222,"mtime":1610524829383,"results":"133","hashOfConfig":"86"},{"size":1069,"mtime":1610560010723,"results":"134","hashOfConfig":"86"},{"size":2631,"mtime":1610524829385,"results":"135","hashOfConfig":"86"},{"size":2391,"mtime":1610560010724,"results":"136","hashOfConfig":"86"},{"size":1071,"mtime":1610524829377,"results":"137","hashOfConfig":"86"},{"size":1441,"mtime":1610524818381,"results":"138","hashOfConfig":"86"},{"size":1856,"mtime":1610524829375,"results":"139","hashOfConfig":"86"},{"size":1534,"mtime":1610524818382,"results":"140","hashOfConfig":"86"},{"size":1250,"mtime":1610524818381,"results":"141","hashOfConfig":"86"},{"size":728,"mtime":1610524829379,"results":"142","hashOfConfig":"86"},{"size":1007,"mtime":1610524818381,"results":"143","hashOfConfig":"86"},{"size":657,"mtime":1610524818381,"results":"144","hashOfConfig":"86"},{"size":2950,"mtime":1610524829391,"results":"145","hashOfConfig":"86"},{"size":2794,"mtime":1610524829404,"results":"146","hashOfConfig":"86"},{"size":1386,"mtime":1610524829388,"results":"147","hashOfConfig":"86"},{"size":3123,"mtime":1610524829381,"results":"148","hashOfConfig":"86"},{"size":3023,"mtime":1610524829397,"results":"149","hashOfConfig":"86"},{"size":2126,"mtime":1610524829397,"results":"150","hashOfConfig":"86"},{"size":645,"mtime":1610524829378,"results":"151","hashOfConfig":"86"},{"size":2356,"mtime":1610560010725,"results":"152","hashOfConfig":"86"},{"size":4093,"mtime":1610524829400,"results":"153","hashOfConfig":"86"},{"size":3122,"mtime":1610524829396,"results":"154","hashOfConfig":"86"},{"size":1716,"mtime":1610524829394,"results":"155","hashOfConfig":"86"},{"size":4122,"mtime":1610560001884,"results":"156","hashOfConfig":"86"},{"size":5398,"mtime":1610524829405,"results":"157","hashOfConfig":"86"},{"size":1204,"mtime":1610524829406,"results":"158","hashOfConfig":"86"},{"size":1590,"mtime":1610524829390,"results":"159","hashOfConfig":"86"},{"size":1775,"mtime":1610524829389,"results":"160","hashOfConfig":"86"},{"size":646,"mtime":1610524829376,"results":"161","hashOfConfig":"86"},{"size":962,"mtime":1610560010720,"results":"162","hashOfConfig":"86"},{"size":2471,"mtime":1610524829399,"results":"163","hashOfConfig":"86"},{"size":2772,"mtime":1610524829399,"results":"164","hashOfConfig":"86"},{"size":1206,"mtime":1610524829378,"results":"165","hashOfConfig":"86"},{"size":1568,"mtime":1610524829378,"results":"166","hashOfConfig":"86"},{"size":2365,"mtime":1610524829404,"results":"167","hashOfConfig":"86"},{"size":2751,"mtime":1610524829395,"results":"168","hashOfConfig":"86"},{"size":1401,"mtime":1610569175157,"results":"169","hashOfConfig":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},"1t8b5gd",{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"172"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"172"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"172"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"172"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"172"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"172"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"172"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"172"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"172"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"172"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"172"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"172"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"172"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"172"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"172"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"172"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"172"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"172"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"172"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"172"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"172"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"172"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"172"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"172"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"172"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"172"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"172"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"282","messages":"283","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"172"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"172"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"172"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"172"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"172"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"172"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"172"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"172"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"172"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"172"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"172"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"172"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"172"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"172"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"172"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"172"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"172"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"172"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"172"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"172"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"172"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"172"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"172"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"172"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"172"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"172"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"172"},"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/index.js",[],["393","394"],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/reportWebVitals.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Redux/reduxStore.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Utils/i18n.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/App.js",["395"],"import React from \"react\";\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Activity from \"./Components/Activity/Activity\";\nimport LoadDataRouter from \"./Components/Common/LoadDataRouter/LoadDataRouter\";\nimport CoursesContainer from \"./Components/Courses/CoursesContainer\";\nimport HomeContainer from \"./Components/Home/HomeContainer\";\nimport NavbarContainer from \"./Components/Navbar/NavbarContainer\";\nimport styled from \"styled-components\";\nimport { useTranslation } from \"react-i18next\";\nimport { connect } from \"react-redux\";\nimport { setDirection, setCurrentLanguage } from \"./Redux/commonReducer\";\nimport ActivitiesContainer from \"./Components/Activites/ActivitiesContainer\";\nimport Login from \"./Components/Auth/Login/Login\";\nimport AddActivity from \"./Components/Activity/AddActivity/AddActivity\";\nimport ForgotPassword from \"./Components/Auth/Forgot/ForgotPassword\";\nimport ReportsContainer from \"./Components/Reports/ReportsContainer\";\nimport Profile from \"./Components/Profile/Profile\";\nimport EditActivity from \"./Components/Activity/EditActivity/EditActivity\";\nimport LessonsContainer from \"./Components/Lessons/LessonsContainer\";\nimport ProgramsContainer from \"./Components/Programs/ProgramsContainer\";\nimport SearchResultContainer from \"./Components/SearchResult/SearchResultContainer\";\nimport NotificationsContainer from \"./Components/Notifications/NotificationsContainer\";\nimport LibraryContainer from \"./Components/Activites/Library/LibraryContainer\";\n\nconst StyledContentContainer = styled.div`\n  width: 100%;\n  direction: ${({ direction }) => direction};\n`;\n\nconst App = (props) => {\n  const { t, i18n } = useTranslation();\n\n  const changeLanguage = (language) => {\n    switch (language) {\n      case \"en\": {\n        props.setDirection(\"ltr\");\n        break;\n      }\n      case \"ar\": {\n        props.setDirection(\"rtl\");\n        break;\n      }\n      default: {\n        props.setDirection(\"ltr\");\n        break;\n      }\n    }\n    i18n.changeLanguage(language);\n  };\n\n  return (\n    <BrowserRouter>\n      <StyledContentContainer direction={props.direction}>\n        <NavbarContainer changeLanguage={changeLanguage} />\n        <Switch>\n          <Route exact path=\"/\">\n            <Redirect to=\"/home\" />\n          </Route>\n          <Route exact path=\"/home\" render={() => <LoadDataRouter Component={HomeContainer} />}/>\n          <Route exact path=\"/courses\" render={() => <LoadDataRouter Component={CoursesContainer} />}/>\n          <Route path=\"/courses/:courseId\" render={() => <LoadDataRouter Component={LessonsContainer} />}/>\n          <Route path=\"/activities/view/:activityId\" render={() => <LoadDataRouter Component={Activity} />}/>\n          <Route exact path=\"/activities\" render={() => <LoadDataRouter Component={ActivitiesContainer} />}/>\n          <Route path=\"/activities/add\" render={() => <LoadDataRouter Component={AddActivity} />}/>\n          <Route path=\"/activities/edit/:activityId\" render={() => <LoadDataRouter Component={EditActivity} />}/>\n          <Route path=\"/programs\" render={() => <LoadDataRouter Component={ProgramsContainer} />}/>\n          <Route path=\"/profile\" render={() => <LoadDataRouter Component={Profile} />}/>\n          <Route path=\"/login\" render={() => <Login />} />\n          <Route path=\"/forgot_password\" render={() => <ForgotPassword />} />\n          <Route path=\"/report\" render={() => <LoadDataRouter Component={ReportsContainer} />}/>\n          <Route path=\"/search\" render={() => <LoadDataRouter Component={SearchResultContainer} />}/>\n          <Route path=\"/home/notifications\" render={() => <LoadDataRouter Component={NotificationsContainer} />}/>\n          <Route path=\"/library\" render={() => <LoadDataRouter Component={LibraryContainer} />}/>\n        </Switch>\n      </StyledContentContainer>\n    </BrowserRouter>\n  );\n};\n\nlet mapStateToProps = (state) => ({\n  direction: state.common.direction,\n  currentLanguage: state.common.currentLanguage,\n});\n\nexport default connect(mapStateToProps, {\n  setDirection,\n  setCurrentLanguage,\n})(App);\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Common/Preloader/Preloader.jsx",["396"],"import React from 'react';\nimport preloader from '../../../Assets/Common/preloader.svg';\nimport classes from './Preloader.module.css';\n\nconst Preloader = (props) => {\n    return(\n        <div className={classes.main}>\n            <img src={preloader}/>\n        </div>\n    );\n}\n\nexport default Preloader;","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Redux/userReducer.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Redux/commonReducer.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Redux/notificationsReducer.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Redux/coursesReducer.js",["397","398"],"import { coursesApi } from '../Api/api';\nimport img1 from '../Assets/Images/Mocks/img1.jpg';\nimport img2 from '../Assets/Images/Mocks/img2.jpg';\nimport { setIsFetching } from './commonReducer';\n\nconst SET_COURSES_DATA = 'SET_COURSES_DATA';\nconst SET_JOINED_COURSES = 'SET_JOINED_COURSES';\n\nlet initialState = {\n    courses: [],\n    page: 1,\n    take: 20,\n    joinedCourses: []\n}\n\nconst coursesReducer = (state = initialState, action) => {\n    switch(action.type){\n        case SET_COURSES_DATA: {\n            return { ...state, courses: action.courses }\n        }\n        case SET_JOINED_COURSES: {\n            return { ...state, joinedCourses: action.joinedCourses }\n        }\n        default:\n            return state;\n    }\n}\n\nexport const setCoursesData = (courses) => ({\n    type: SET_COURSES_DATA, courses\n});\nexport const setJoinedCourses = (joinedCourses) => ({\n    type: SET_JOINED_COURSES, joinedCourses\n});\n\nexport const getCourses = (organizationId, page, take) => async (dispatch) => {\n    dispatch(setIsFetching(true));\n    try{\n        let respnose = await coursesApi.getCourses(organizationId, page, take);\n        dispatch([setCoursesData(respnose.courses), setIsFetching(false)]);\n    }catch(err){\n        dispatch(setIsFetching(false));\n    }\n}\n\nexport default coursesReducer;","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Redux/programsReducer.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Redux/activitiesReducer.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Courses/CoursesContainer.jsx",["399"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Courses from './Courses';\nimport { getCourses } from '../../Redux/coursesReducer';\nimport Preloader from '../Common/Preloader/Preloader';\n\nconst CoursesContainer = (props) => {\n    useEffect(()=>{\n        if(props.page && props.take){\n            props.getCourses(props.user.organizationId, props.page, props.take);\n        }\n    },[]);\n\n    const [all, setAll] = useState(true);\n    const [completed, setCompleted] = useState(true);\n    const [inProgress, setInProgress] = useState(true);\n    const [notStarted, setNotStarted] = useState(true);\n\n    const handleAll = () => {\n        let newAll = !all;\n        setAll(!all);\n        if(newAll){\n            setCompleted(true);\n            setInProgress(true);\n            setNotStarted(true);\n            return;\n        }else{\n            setCompleted(false);\n            setInProgress(false);\n            setNotStarted(false);\n        }\n    } \n\n    useEffect(()=>{\n        if(completed && inProgress && notStarted){\n            setAll(true);\n        }else{\n            setAll(false)\n        }\n    },[completed, inProgress, notStarted]);\n\n    return(\n        <>\n            {props.isFetching ? <Preloader/> :\n            <Courses courses={props.courses} direction={props.direction}\n                    all={all} setAll={handleAll}\n                    completed={completed} setCompleted={setCompleted}\n                    inProgress={inProgress} setInProgress={setInProgress}\n                    notStarted={notStarted} setNotStarted={setNotStarted}/>}\n        </>\n        \n    );\n}\n\nlet mapStateToProps = (state) => ({\n    courses: state.courses.courses,\n    user: state.user.user,\n    isFetching: state.common.isFetching,\n    page: state.courses.page,\n    take: state.courses.take,\n    direction: state.common.direction\n});\n\nexport default connect(mapStateToProps, {\n    getCourses\n})(CoursesContainer);","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Common/LoadDataRouter/LoadDataRouter.jsx",["400","401","402","403"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { setCurrentRoute } from '../../../Redux/commonReducer';\nimport { getUserProfile, getProfile } from '../../../Redux/userReducer';\nimport Login from '../../Auth/Login/Login';\nimport { getUnreadNotifications } from '../../../Redux/notificationsReducer';\n\nconst LoadDataRouter = ({Component, isAuth, setCurrentRoute,\n                        currentRoute, getUserProfile, getProfile, isStartData,\n                        getUnreadNotifications, user, limit, employeeId}) => {\n    useEffect(()=>{\n        if((localStorage.usertoken || sessionStorage.usertoken) && !isStartData){\n            if(employeeId){\n                getUserProfile(employeeId);\n            }else{\n                getProfile(localStorage.usertoken || sessionStorage.usertoken);\n            }\n            getUnreadNotifications(limit, user.organizationId);\n        }   \n    },[employeeId]);\n\n    useEffect(()=>{\n        setCurrentRoute(window.location.pathname);\n    },[window.location.pathname]);\n    \n    return(\n        <>\n            {(localStorage.usertoken || sessionStorage.usertoken) ? <Component/> : <Redirect to=\"/login\"/>}\n        </>\n        \n    )\n    \n}\n\nlet mapStateToProps = (state) => ({\n    isAuth: state.user.isAuth,\n    currentRoute: state.common.currentRoute,\n    isStartData: state.user.isStartData,\n    user: state.user.user,\n    limit: state.notifications.limit,\n    employeeId: state.user.employeeId\n});\n\nexport default connect(mapStateToProps, {\n    setCurrentRoute,\n    getUserProfile,\n    getProfile,\n    getUnreadNotifications\n})(LoadDataRouter);","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Home/HomeContainer.jsx",["404","405","406"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Preloader from '../Common/Preloader/Preloader';\nimport Home from './Home';\nimport { getCourses, setJoinedCourses } from '../../Redux/coursesReducer';\nimport { getActivities } from '../../Redux/activitiesReducer';\n\nconst HomeContainer = (props) => {\n    useEffect(()=>{\n        if(props.user.employeeId){\n            props.getActivities(props.user.employeeId, props.user.userId, props.user.organizationId);\n        }\n    },[props.user.employeeId]);\n\n    useEffect(()=>{\n        props.setJoinedCourses(props.user.joinedCourses);\n    },[props.user.joinedCourses]);\n    \n    return(\n        <>\n            {props.isFetching && <Preloader/>}\n            {props.isAuth && <Home user={props.user}\n                                    courses={props.courses}\n                                    activities={props.activities}\n                                    direction={props.direction}\n                                    programs={props.programs}/>}\n        </>\n        \n    );\n}\n\nlet mapStateToProps = (state) => ({\n    isFetching: state.common.isFetching,\n    user: state.user.user,\n    isAuth: state.user.isAuth,\n    courses: state.courses.joinedCourses,\n    activities: state.activities.activities,\n    page: state.courses.page,\n    take: state.courses.take,\n    direction: state.common.direction,\n    programs: state.programs.programs\n});\n\nexport default connect(mapStateToProps, {\n    getCourses,\n    getActivities,\n    setJoinedCourses\n})(HomeContainer);","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Reports/ReportsContainer.jsx",["407","408","409"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Preloader from '../Common/Preloader/Preloader';\nimport Reports from './Reports';\nimport { getActivities } from '../../Redux/activitiesReducer';\nimport { setJoinedCourses } from '../../Redux/coursesReducer';\n\nconst ReportsContainer = (props) => {\n    useEffect(()=>{\n        if(props.user.employeeId){\n            props.getActivities(props.user.employeeId, props.user.userId, props.user.organizationId);\n            \n        }\n    },[props.user.employeeId]);\n\n    useEffect(()=>{\n        props.setJoinedCourses(props.user.joinedCourses);\n    },[props.user.joinedCourses]);\n\n\n    return(\n        <>\n            {props.isFetching ? <Preloader/> : <>\n            {   <Reports user={props.user}\n                            courses={props.courses}\n                            activities={props.activities}\n                            direction={props.direction}\n                            programs={props.programs}/>} </>}\n        </>\n        \n    );\n}\n\nlet mapStateToProps = (state) => ({\n    isFetching: state.common.isFetching,\n    user: state.user.user,\n    isAuth: state.user.isAuth,\n    courses: state.courses.joinedCourses,\n    activities: state.activities.currentActivity,\n    page: state.courses.page,\n    take: state.courses.take,\n    direction: state.common.direction,\n    programs: state.programs.programs\n});\n\nexport default connect(mapStateToProps, {\n    getActivities,\n    setJoinedCourses\n})(ReportsContainer);","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Navbar/NavbarContainer.jsx",["410","411","412"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Navbar from './Navbar';\nimport { getNotifications } from '../../Redux/notificationsReducer';\nimport { setCurrentLanguage } from '../../Redux/commonReducer';\n\nconst NavbarContainer = (props) => {\n    const [isOpenSearchModal, setIsOpenSearchModal] = useState(false);\n    const [isOpenNotificationsModal, setIsOpenNotificationsModal] = useState(false);\n    \n    useEffect(()=>{\n        props.getNotifications(props.currentPage, props.pageSize)\n    },[props.currentPage, props.pageSize]);\n\n    useEffect(()=>{\n        \n    },[props.currentRoute]);\n\n    return(\n        <>\n        {(props.currentRoute != \"/login\" && props.currentRoute != \"/forgot_password\") &&\n        <Navbar user={props.user} \n                changeLanguage={props.changeLanguage}\n                direction={props.direction}\n                setIsOpenSearchModal={setIsOpenSearchModal}\n                isOpenSearchModal={isOpenSearchModal}\n                totalUnreadNotificationsCount={props.totalUnreadNotificationsCount}\n                unreadNotifications={props.unreadNotifications}\n                setIsOpenNotificationsModal={setIsOpenNotificationsModal}\n                isOpenNotificationsModal={isOpenNotificationsModal}\n                setCurrentLanguage={props.setCurrentLanguage} \n                currentRoute={props.currentRoute}\n                />}\n        </>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n    user: state.user.user,\n    direction: state.common.direction,\n    currentRoute: state.common.currentRoute,\n    unreadNotifications: state.notifications.unreadNotifications,\n    totalUnreadNotificationsCount: state.notifications.totalUnreadNotificationsCount,\n    currentPage: state.notifications.currentPage,\n    pageSize: state.notifications.pageSize,\n    notifications: state.notifications.notifications\n});\n\nexport default connect(mapStateToProps, {\n    getNotifications,\n    setCurrentLanguage\n})(NavbarContainer);","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Activites/ActivitiesContainer.jsx",["413"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Activities from './Activities';\nimport { getActivities } from '../../Redux/activitiesReducer';\nimport Preloader from '../Common/Preloader/Preloader';\nimport { useLayoutEffect } from 'react';\n\nconst ActivitiesContainer = (props) => {\n    useEffect(()=>{\n        if(props.user.employeeId){\n            props.getActivities(props.user.employeeId, props.user.userId, props.user.organizationId);\n        }  \n    },[props.user.employeeId]);\n\n    const [all, setAll] = useState(true);\n    const [completed, setCompleted] = useState(true);\n    const [inProgress, setInProgress] = useState(true);\n    const [notStarted, setNotStarted] = useState(true);\n    const [privateParam, setPrivateParam] = useState(true);\n\n    const handleAll = () => {\n        let newAll = !all;\n        setAll(!all);\n        if(newAll){\n            setCompleted(true);\n            setInProgress(true);\n            setNotStarted(true);\n            setPrivateParam(true);\n            return;\n        }else{\n            setCompleted(false);\n            setInProgress(false);\n            setNotStarted(false);\n            setPrivateParam(false);\n        }\n    } \n\n    useEffect(()=>{\n        if(completed && inProgress && notStarted && privateParam){\n            setAll(true);\n        }else{\n            setAll(false)\n        }\n    },[completed, inProgress, notStarted, privateParam]);\n\n\n    const [size, setSize] = useState([window.outerWidth, window.innerHeight]);\n    const [blockWidth, setBlockWidth] = useState(49);\n\n    useLayoutEffect(()=>{\n        function updateSize(){\n            setSize([window.outerWidth, window.innerHeight]);\n        }\n        window.addEventListener('resize', updateSize);\n        updateSize();\n        return () => window.removeEventListener('resize', updateSize);\n    },[]);\n\n    useEffect(()=>{\n        if(size[0] > 700){\n            setBlockWidth(49);\n        }else{\n            setBlockWidth(100);\n        }\n    },[size]);\n\n\n    return(\n        <>\n            {props.isFetching ? <Preloader/> :\n            <>\n                {props.isAuth && \n                    <Activities activities={props.activities}\n                                direction={props.direction}\n                                blockWidth={blockWidth}\n                                all={all} setAll={handleAll}\n                                completed={completed} setCompleted={setCompleted}\n                                inProgress={inProgress} setInProgress={setInProgress}\n                                notStarted={notStarted} setNotStarted={setNotStarted}\n                                privateParam={privateParam} setPrivateParam={setPrivateParam}/>}\n            </>}\n        </>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n    isFetching: state.common.isFetching,\n    user: state.user.user,\n    activities: state.activities.activities,\n    isAuth: state.user.isAuth,\n    direction: state.common.direction\n});\n\nexport default connect(mapStateToProps, {\n    getActivities\n})(ActivitiesContainer);","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Notifications/NotificationsContainer.jsx",["414"],"import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Preloader from '../Common/Preloader/Preloader';\nimport Notifications from './Notifications';\nimport { getNotifications } from '../../Redux/notificationsReducer';\n\nconst NotificationsContainer = (props) => {\n    useEffect(()=>{\n        props.getNotifications(props.currentPage, props.pageSize);\n    },[props.pageSize, props.currentPage]);\n\n    return(\n        <>\n            {props.isFetching ? <Preloader/> :\n            <Notifications notifications={props.notifications}/>}\n        </>\n    )\n}\n\nlet mapStateToProps = (state) => ({\n    isFetching: state.common.isFetching,\n    notifications: state.notifications.notifications,\n    currentPage: state.notifications.currentPage,\n    pageSize: state.notifications.pageSize,\n    \n});\n\nexport default connect(mapStateToProps, {\n    getNotifications\n})(NotificationsContainer);","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Profile/Profile.jsx",["415"],"import React from 'react';\nimport { connect } from 'react-redux';\nimport classes from './Profile.module.css';\nimport { useTranslation } from 'react-i18next';\nimport { NavLink, Redirect, Route } from 'react-router-dom';\nimport ProfileInfo from './Info/ProfileInfo';\nimport ProfileEmail from './Email/ProfileEmail';\nimport ProfilePassword from './Password/ProfilePassword';\nimport ProfileNotifications from './Notifications/ProfileNotifications';\n\nconst Profile = (props) => {\n    const {t, i18n} = useTranslation();\n    return(\n        <div className={classes.main}>\n            <div className={classes.container}>\n                <h1>{t(\"profile.title\")}</h1>\n                <div className={classes.body}>\n                    <div className={classes.menu}>\n                        <div className={classes.menuItem}>\n                            <NavLink to=\"/profile/info\" activeClassName={classes.active}>{t(\"profile.tabs.info\")}</NavLink>\n                        </div>\n                        <div className={classes.menuItem}>\n                            <NavLink to=\"/profile/email\" activeClassName={classes.active}>{t(\"profile.tabs.email\")}</NavLink>\n                        </div>\n                        <div className={classes.menuItem}>\n                            <NavLink to=\"/profile/password\" activeClassName={classes.active}>{t(\"profile.tabs.password\")}</NavLink>\n                        </div>\n                        <div className={classes.menuItem}>\n                            <NavLink to=\"/profile/notifications\" activeClassName={classes.active}>{t(\"profile.tabs.notifications\")}</NavLink>\n                        </div>\n                    </div>\n                    <div className={classes.content}>\n                        <Route exact path=\"/profile\">\n                            <Redirect to=\"/profile/info\"/>\n                        </Route>\n                        <Route path=\"/profile/info\" render={()=><ProfileInfo/>}/>\n                        <Route path=\"/profile/email\" render={()=><ProfileEmail/>}/>\n                        <Route path=\"/profile/password\" render={()=><ProfilePassword/>}/>\n                        <Route path=\"/profile/notifications\" render={()=><ProfileNotifications/>}/>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n    user: state.user.user\n});\n\nexport default connect(mapStateToProps, {})(Profile);","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Lessons/LessonsContainer.jsx",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Programs/ProgramsContainer.jsx",["416"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Programs from './Programs';\nimport { getPrograms } from '../../Redux/programsReducer';\nimport Preloader from '../Common/Preloader/Preloader';\n\n\nconst ProgramsContainer = (props) => {\n    useEffect(()=>{\n        if(props.user.organizationId){\n            props.getPrograms(props.user.organizationId, props.pageId, props.perPage);\n        }\n    },[]);\n\n    const [all, setAll] = useState(true);\n    const [completed, setCompleted] = useState(true);\n    const [inProgress, setInProgress] = useState(true);\n    const [notStarted, setNotStarted] = useState(true);\n\n    const handleAll = () => {\n        let newAll = !all;\n        setAll(!all);\n        if(newAll){\n            setCompleted(true);\n            setInProgress(true);\n            setNotStarted(true);\n            return;\n        }else{\n            setCompleted(false);\n            setInProgress(false);\n            setNotStarted(false);\n        }\n    } \n\n    useEffect(()=>{\n        if(completed && inProgress && notStarted){\n            setAll(true);\n        }else{\n            setAll(false)\n        }\n    },[completed, inProgress, notStarted]);\n\n    return(\n        <>\n            {props.isFetching ? <Preloader/> :\n            <Programs programs={props.programs} \n                    direction={props.direction}\n                    all={all} setAll={handleAll}\n                    completed={completed} setCompleted={setCompleted}\n                    inProgress={inProgress} setInProgress={setInProgress}\n                    notStarted={notStarted} setNotStarted={setNotStarted}/>}\n        </>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n    user: state.user.user,\n    programs: state.programs.programs,\n    isFetching: state.common.isFetching,\n    direction: state.common.direction,\n    pageId: state.programs.pageId,\n    perPage: state.programs.perPage\n});\n\nexport default connect(mapStateToProps, {\n    getPrograms\n})(ProgramsContainer);","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/SearchResult/SearchResultContainer.jsx",["417","418","419"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Preloader from '../Common/Preloader/Preloader';\nimport SearchResult from './SearchResult';\nimport { setSearchValue } from '../../Redux/commonReducer'\n\nconst SearchResultContainer = (props) => {\n    const [searchValue, setSearchValue] = useState(\"\");\n\n    const [viewAll, setViewAll] = useState(true);\n    const [viewPrograms, setViewPrograms] = useState(true);\n    const [viewCourses, setViewCourses] = useState(true);\n    const [viewActivities, setViewActivities] = useState(true);\n\n    const handleViewAll = () => {\n        let newViewAll = !viewAll;\n        setViewAll(!viewAll);\n        if(newViewAll){\n            setViewPrograms(true);\n            setViewCourses(true);\n            setViewActivities(true);\n            return;\n        }else{\n            setViewPrograms(false);\n            setViewCourses(false);\n            setViewActivities(false);\n        }\n    }\n\n    useEffect(()=>{\n        if(viewActivities && viewCourses && viewPrograms){\n            setViewAll(true);\n        }else{\n            setViewAll(false)\n        }\n    },[viewPrograms, viewCourses, viewActivities]);\n\n\n\n    useEffect(()=>{\n        const urlParams = new URLSearchParams(window.location.search);\n        props.setSearchValue(urlParams.get(\"value\"));\n    },[]);\n\n    useEffect(()=>{\n        console.log(\"search\")\n    },[props.searchValue]);\n\n    return(\n        <>\n            {props.isFetching ? <Preloader/> :\n            <SearchResult searchValue={props.searchValue}\n                        viewAll={viewAll} setViewAll={handleViewAll}\n                        viewCourses={viewCourses} setViewCourses={setViewCourses}\n                        viewPrograms={viewPrograms} setViewPrograms={setViewPrograms}\n                        viewActivities={viewActivities} setViewActivities={setViewActivities}\n                        direction={props.direction}/>}\n        </>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n    isFetching: state.common.isFetching,\n    searchValue: state.common.searchValue,\n    direction: state.common.direction\n});\n\nexport default connect(mapStateToProps, {\n    setSearchValue\n})(SearchResultContainer);","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Activites/Library/LibraryContainer.jsx",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Auth/Login/Login.jsx",["420","421","422"],"import React, { useEffect, useState } from 'react';\nimport classes from '../Auth.module.css';\nimport { reduxForm, Field } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport Preloader from '../../Common/Preloader/Preloader';\nimport { AuthInput } from '../../Common/FormControlls/FormControlls';\nimport { useTranslation } from 'react-i18next';\nimport { login } from '../../../Redux/userReducer';\nimport { setCurrentRoute } from '../../../Redux/commonReducer';\nimport { isEmail, required } from '../../../Utils/validators';\n\nconst LoginForm = (props) => {\n    const {t, i18n} = useTranslation();\n    return(\n        <form className={classes.form} onSubmit={props.handleSubmit}>\n            <h3>{t(\"login.title\")}</h3>\n            <div className={classes.field}>\n                <label>{t(\"login.username\")}</label>\n                <Field component={AuthInput} placeholder={t(\"login.usernamePlaceholder\")} name=\"email\"\n                        validate={[required, isEmail]}/>\n            </div>\n            <div className={classes.field}>\n                <label>{t(\"login.password\")}</label>\n                <Field component={AuthInput} placeholder={t(\"login.passwordPlaceholder\")} name=\"password\" type=\"password\"\n                        validate={[required]}/>\n            </div>\n            <label className={classes.checkbox}>\n                <span className={classes.checkText}>{t(\"login.rememberMe\")}</span>\n                <input type=\"checkbox\"  onChange={()=>{props.setIsRememberMe(!props.isRememberMe)}} value={props.isRememberMe}/>\n                <span className={classes.checkmark}></span>\n            </label>\n            <NavLink to=\"/forgot_password\">{t(\"login.forgotPassword\")}</NavLink>\n            {props.error && <div className={classes.error}>{props.error}</div>}\n            <button>{t(\"login.login\")}</button>\n        </form>\n    );\n}\n\nconst LoginReduxForm = reduxForm({form:'login'})(LoginForm);\n\nconst Login = (props) => {\n    const [isRememberMe, setIsRememberMe] = useState(false);\n    const {t, i18n} = useTranslation();\n\n    useEffect(()=>{\n        props.setCurrentRoute(window.location.pathname);\n    },[]);\n\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, isRememberMe);\n    }\n    return(\n        <div className={classes.main}>\n            {(localStorage.usertoken || sessionStorage.usertoken) && <Redirect to=\"/\"/>}\n            <div className={classes.login}>\n                <h1>{t(\"login.header\")}</h1>\n                {props.isFetching && <Preloader/>}\n                <LoginReduxForm onSubmit={onSubmit} isRememberMe={isRememberMe} setIsRememberMe={setIsRememberMe}/>\n            </div>\n            <div className={classes.back}>\n                <div></div>\n                <div className={classes.green}></div>\n            </div>\n            \n        </div>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n    isFetching: state.common.isFetching,\n    isAuth: state.user.isAuth\n});\n\nexport default connect(mapStateToProps, {\n    login,\n    setCurrentRoute\n})(Login);\n\n\n\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Auth/Forgot/ForgotPassword.jsx",["423","424","425"],"import React, { useEffect } from 'react';\nimport classes from '../Auth.module.css';\nimport { useTranslation } from 'react-i18next';\nimport { Field, reduxForm } from 'redux-form';\nimport { AuthInput } from '../../Common/FormControlls/FormControlls';\nimport { required, passValidationMatch } from '../../../Utils/validators';\nimport Preloader from '../../Common/Preloader/Preloader';\nimport { connect } from 'react-redux';\nimport { setCurrentRoute } from '../../../Redux/commonReducer';\nimport { Redirect } from 'react-router-dom';\n\nconst ForgotPasswordForm = (props) => {\n    const {t, i18n} = useTranslation();\n    return(\n        <form className={classes.form} onSubmit={props.handleSubmit}>\n            <h3>{t(\"forgotPassword.title\")}</h3>\n            <div className={classes.field}>\n                <label>{t(\"forgotPassword.oldPassword\")}</label>\n                <Field component={AuthInput} placeholder={t(\"forgotPassword.oldPassword\")} name=\"oldPassword\" type=\"password\"\n                    validate={[required]}/>\n            </div>\n            <div className={classes.field}>\n                <label>{t(\"forgotPassword.newPassword\")}</label>\n                <Field component={AuthInput} placeholder={t(\"forgotPassword.newPassword\")} name=\"newPassword\" type=\"password\"\n                    validate={[required]}/>\n            </div>\n            <div className={classes.field}>\n                <label>{t(\"forgotPassword.repeatPassword\")}</label>\n                <Field component={AuthInput} placeholder={t(\"forgotPassword.repeatPassword\")} name=\"repeatPassword\" type=\"password\"\n                    validate={[required, passValidationMatch]}/>\n            </div>\n            {props.error && <div className={classes.error}>{props.error}</div>}\n            <button>{t(\"forgotPassword.submit\")}</button>\n        </form>\n    )\n}\n\nconst ForgotPasswordReduxForm = reduxForm({form: 'forgotPass'})(ForgotPasswordForm);\n\nconst ForgotPassword = (props) => {\n    const {t, i18n} = useTranslation();\n\n    const onSubmit = (formData) => {\n        console.log(formData);\n    }\n\n    useEffect(()=>{\n        props.setCurrentRoute(window.location.pathname);\n    },[]);\n\n    return(\n        <div className={classes.main}>\n            {(localStorage.usertoken || sessionStorage.usertoken) && <Redirect to=\"/\"/>}\n            <div className={classes.login}>\n                <h1>{t(\"forgotPassword.header\")}</h1>\n                {props.isFetching && <Preloader/>}\n                <ForgotPasswordReduxForm onSubmit={onSubmit}/>\n            </div>\n            <div className={classes.back}>\n                <div></div>\n                <div className={classes.green}></div>\n            </div>\n            \n        </div>\n    )\n}\n\nlet mapStateToProps = (state) => ({\n    isFetching: state.common.isFetching,\n    isAuth: state.user.isAuth\n});\n\nexport default connect(mapStateToProps, {\n    setCurrentRoute\n})(ForgotPassword);","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Activity/AddActivity/AddActivity.jsx",["426","427","428","429","430","431","432","433","434","435"],"import React, { useCallback, useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport classes from './AddActivity.module.css';\nimport { useTranslation } from 'react-i18next';\nimport { AuthInput, Calendar, TextAreaCustom } from '../../Common/FormControlls/FormControlls';\nimport { required, foo } from '../../../Utils/validators';\nimport CustomSelect from '../../Common/Cutsom/Select/CustomSelect';\nimport { NavLink } from 'react-router-dom';\nimport Preloader from '../../Common/Preloader/Preloader';\nimport styled from 'styled-components';\nimport uploadicon from '../../../Assets/Images/upload.svg';\nimport { FileDrop } from 'react-file-drop';\nimport ActivityFile from '../ActivityFile/ActivityFile';\n\nconst StyledLabel = styled.label`\n    margin-left: ${({ direction }) => direction === \"ltr\" && \"30px\"};\n    margin-right: ${({ direction }) => direction === \"rtl\" && \"30px\"};\n`;\n\nconst AddActivityForm = (props) => {\n    const {t, i18n} = useTranslation();\n    let maxLength = 300;\n\n    const [charactersLeft, setCharactersLeft] = useState(maxLength);\n\n    let disableDefValueOption = true;\n    let disableDefValueOptionText = t(\"addActivity.typeDef\");\n\n    let disableDefSupervisorOption = true;\n    let disableDefSupervisorOptionText = t(\"addActivity.supervisorDef\");\n\n    const [size, setSize] = useState([window.outerWidth, window.innerHeight]);\n    const [selectWidth, setSelectWidth] = useState(66);\n\n    useLayoutEffect(()=>{\n        function updateSize(){\n            setSize([window.outerWidth, window.innerHeight]);\n        }\n        window.addEventListener('resize', updateSize);\n        updateSize();\n        return () => window.removeEventListener('resize', updateSize);\n    },[]);\n\n    useEffect(()=>{\n        if(size[0] > 568){\n            setSelectWidth(66);\n        }else{\n            setSelectWidth(100);\n        }\n    },[size]);\n\n    let handleTextArea = (e) => {\n        setCharactersLeft(maxLength - e.target.value.length);\n    }\n\n    let types = [\"type1\", \"type2\", \"type3\"];\n\n    let supervisorsOptions = ['sup1', 'sup2', 'sup3'];\n\n    const fileInputRef = useRef(null);\n\n\n\n    const onFileInputChange = (event) => {\n        const newFiles = [...props.files];\n        const newFilesToPush = [...event.target.files];\n        newFilesToPush.forEach(item => {\n            newFiles.push(item);\n        })\n        props.setFiles(newFiles);\n    }\n\n    const onTargetClick = () => {\n        fileInputRef.current.click();\n    }\n    const onDropHandler = (files, event) => {\n        const newFilesToPush = [...files];\n        const newFiles = [...props.files];\n        newFilesToPush.forEach(item => {\n            newFiles.push(item);\n        })\n        props.setFiles(newFiles);\n    }\n\n    const handleRemoveFile = (index) => {\n        const newFiles = [...props.files];\n        newFiles.forEach((item, i) => {\n            if(index === i){\n                newFiles.splice(index, 1);\n            }\n        });\n        props.setFiles(newFiles);\n    }\n    let viewFiles = []\n\n    viewFiles = props.files.map((f, index) => {\n        return <ActivityFile name={f.name} index={index} handleRemoveFile={handleRemoveFile}/>\n    })\n\n    return(\n        <form onSubmit={props.handleSubmit} className={classes.form}>\n            <div className={classes.field + \" \" + classes.inputField}>\n                <label className={classes.fieldLabel}>{t(\"addActivity.name\")}</label>\n                <Field component={AuthInput} placeholder={t(\"addActivity.namePlaceholder\")} name=\"name\"\n                    validate={[required]}/>\n            </div>\n            <div className={classes.field + \" \" + classes.inputField}>\n                <label className={classes.fieldLabel}>{t(\"addActivity.link\")}</label>\n                <Field component={AuthInput} name=\"link\"/>\n            </div>\n            {/* <div className={classes.field}>\n                <label className={classes.fieldLabel}>{t(\"addActivity.supervisor\")}</label>\n                <p></p>\n                <Field component={CustomSelect} options={supervisorsOptions} setFunction={props.setSupervisor} width={selectWidth} \n                        validate={[required]} name=\"supervisor\" disableDefValueOption={disableDefSupervisorOption} disableDefValueOptionText={disableDefSupervisorOptionText}/>\n            </div> */}\n            <div className={classes.field + \" \" + classes.inputField}>\n                <label className={classes.fieldLabel}>{t(\"addActivity.points\")}</label>\n                <Field component={AuthInput} name=\"points\"\n                    validate={[required]}/>\n            </div>\n            <div className={classes.field + \" \" + classes.inputField}>\n                <label className={classes.fieldLabel}>{t(\"addActivity.description\")}</label>\n                <Field component={TextAreaCustom} name=\"description\"\n                       maxLength={maxLength} left={charactersLeft} rows={1} onChange={handleTextArea}/>\n            </div>\n            <div className={classes.field}>\n                <label className={classes.fieldLabel}>{t(\"addActivity.date\")}</label>\n                <div className={classes.dates}>\n                    <Field component={Calendar} name=\"start\"/>\n                    <StyledLabel direction={props.direction}>{t(\"addActivity.to\")}</StyledLabel>\n                    <Field component={Calendar} name=\"end\"/>\n                </div>\n            </div>\n            <div className={classes.field}>\n                <label className={classes.fieldLabel + \" \" + classes.select}>{t(\"addActivity.type\")}</label>\n                <p></p>\n                <Field component={CustomSelect} options={types} setFunction={props.setType} width={selectWidth} \n                        validate={[required]} name=\"type\" disableDefValueOption={disableDefValueOption} disableDefValueOptionText={disableDefValueOptionText}/>\n            </div>\n            <div className={classes.field}>\n                <label className={classes.fieldLabel}>{t(\"addActivity.visibility\")}</label>\n                <div className={classes.radios}>\n                    <div className={classes.visibilityBlock}>\n                        <input type=\"radio\" name=\"visibility\" id=\"public\" onChange={e=>{props.setVisibility(e.target.value)}} value=\"public\"/>\n                        <label htmlFor={\"public\"}>Public</label>\n                        <div className={classes.check}></div>\n                    </div>\n                    <div className={classes.visibilityBlock}>\n                        <input type=\"radio\" name=\"visibility\" id=\"private\" checked onChange={e=>{props.setVisibility(e.target.value)}} value=\"private\"/>\n                        <label htmlFor={\"private\"}>Private</label>\n                        <div className={classes.check}></div>\n                    </div>\n                </div>\n            </div>\n            <div className={classes.field}>\n                <label className={classes.fieldLabel}>{t(\"addActivity.upload\")}</label>\n                <div className={classes.dragNdrop}>\n                    <input onChange={onFileInputChange}\n                    ref={fileInputRef}\n                    type=\"file\"\n                    className={classes.hidden} multiple/>\n                    <FileDrop onDrop={(files, event) => onDropHandler(files, event)} onTargetClick={onTargetClick} className={classes.drop} draggingOverFrameClassName={classes.onDrag} targetClassName={classes.dropInner}>\n                        <div className={classes.uploadBut}>\n                            <img src={uploadicon}/>\n                            <p>{t(\"addActivity.upload\")}</p>\n                        </div>\n                        <p className={classes.dragText}>{t(\"addActivity.drag\")}</p>\n                    </FileDrop>\n                </div>\n                {props.files.length > 0 && \n                    <div className={classes.files}>\n                        {viewFiles}\n                    </div>\n                }\n            </div>\n            <div className={classes.fieldBut}>\n                <button>{t(\"addActivity.addActivity\")}</button>\n                <NavLink to=\"/activities\">{t(\"addActivity.cancel\")}</NavLink>\n            </div>\n        </form>\n    );\n}\n\nconst AddActivityReduxForm = reduxForm({form: 'addActivity'})(AddActivityForm);\n\n\nconst AddActivity = (props) => {\n    const {t, i18n} = useTranslation();\n    const [type, setType] = useState(\"\");\n    const [supervisor, setSupervisor] = useState(\"\");\n    const [visibility, setVisibility] = useState(\"private\");\n\n    const [files, setFiles] = useState([]);\n\n    let onSubmit = (formData) => {\n        console.log(formData);\n\n    }\n    return(\n        <div className={classes.main}>\n            {props.isFetching && <Preloader/>}\n            <div className={classes.header}>\n                <div className={classes.headerContainer}>\n                    <h1>{t(\"addActivity.title\")}</h1>\n                </div>\n            </div>\n            <div className={classes.formContainer}>\n                <AddActivityReduxForm onSubmit={onSubmit} files={files} setFiles={setFiles} setType={setType} visibility={visibility} setVisibility={setVisibility} setSupervisor={setSupervisor} direction={props.direction}/>\n            </div>\n        </div>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n    isFetching: state.common.isFetching,\n    direction: state.common.direction\n})\n\nexport default connect(mapStateToProps, {\n\n})(AddActivity);\n\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Activity/Activity.jsx",["436","437","438","439","440","441","442"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport ProgressBar from '../Common/ProgressBar/ProgressBar';\nimport classes from './Activity.module.css';\nimport { setCurrentActivity } from '../../Redux/activitiesReducer';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport Preloader from '../Common/Preloader/Preloader';\nimport { setIsFetching } from '../../Redux/commonReducer';\nimport { getActivity } from '../../Redux/activitiesReducer';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\nimport DeleteActivity from './DeleteActivity/DeleteActivity';\nimport Chat from './Chat/Chat';\n\nconst StyledMarkButton = styled.button`\n    margin-left: ${({ direction }) => direction === \"ltr\" ? \"8px\" : \"0\"};\n    margin-right: ${({ direction }) => direction === \"rtl\" ? \"8px\" : \"0\"};\n`;\n\nconst StyledLeftSide = styled.div`\n    margin-left: ${({ direction }) => direction === \"rtl\" ? \"30px\" : \"0\"};\n    margin-right: ${({ direction }) => direction === \"ltr\" ? \"30px\" : \"0\"};\n`;\n\nconst StyledProgressSpan = styled.span`\n    margin-left: ${({ direction }) => direction === \"ltr\" ? \"13px\" : \"0\"};\n    margin-right: ${({ direction }) => direction === \"rtl\" ? \"13px\" : \"0\"};\n`;\n\nconst Activity = (props) => {\n    const {t, i18n} = useTranslation();\n    let widthProgressBar = 83;\n    let heightProgressBar = 16;\n\n    const [isShowDeleteModal, setIsShowDeleteModal] = useState(false);\n    \n    useEffect(()=>{\n            let activityId = props.match.params.activityId;\n            props.getActivity(activityId, props.user.selectedOrganizationId);\n    },[]);\n\n    const [daysLag, setDaysLag] = useState(0);\n    useEffect(()=>{\n        if(props.activity){\n            const endTime = new Date(props.activity.end);\n            const now = new Date();\n\n            var newDaysLag = Math.ceil(Math.abs(endTime.getTime() - now.getTime()) / (1000 * 3600 * 24));\n            \n            if(endTime >= now){\n                newDaysLag = newDaysLag + t(\"activityMini.daysLeft\");\n            }else{\n                newDaysLag = newDaysLag + t(\"activityMini.daysAgo\");\n            }\n            setDaysLag(newDaysLag);\n        }\n        \n    },[props.activity]);\n    \n\n    return(\n        <div className={classes.main}>\n            {!props.activity ? <Preloader/> :\n            <div className={classes.container}>\n                {isShowDeleteModal && <DeleteActivity setIsShowDeleteModal={setIsShowDeleteModal}/>}\n                <StyledLeftSide className={classes.leftSide} direction={props.direction}>\n                    <div className={classes.block + \" \" + classes.withoutPadding}>\n                        <div className={classes.infoBlock}>\n                            <p>{t(\"home.statistic.infoUser.welcome\")}</p>\n                            <h3>{props.user.name}</h3>\n                        </div>\n                        <div className={classes.infoBlock}>\n                            <label>{t(\"home.statistic.infoUser.learningHours\")}</label>\n                            <span><strong>34 {t(\"home.statistic.infoUser.hours\")}</strong> {t(\"home.statistic.infoUser.and\")} <strong>54 {t(\"home.statistic.infoUser.mins\")}</strong></span>\n                        </div>\n                        <hr className={classes.line}/>\n                        <div className={classes.infoBlock}>\n                            <label>{t(\"home.statistic.infoUser.learningGoal\")}</label>\n                            <span><strong>34 {t(\"home.statistic.infoUser.hours\")}</strong></span>\n                        </div>\n                    </div>\n                    {/* <div className={classes.block + \" \" + classes.programs}>\n                        <div className={classes.programsHeader}>\n                            <h4>{t(\"home.statistic.programs.related\")}</h4>\n                            <NavLink to=\"/programs\">{t(\"home.statistic.programs.viewAll\")}</NavLink>\n                        </div>\n                        <div className={classes.progressBlock}>\n                            <label>Sketching out ideas for securin....</label>\n                            <div className={classes.progressContainer}>\n                                <ProgressBar width={widthProgressBar} height={heightProgressBar} progress={78}/>\n                                <span>78%</span>\n                            </div>\n                        </div>\n                        <div className={classes.progressBlock}>\n                            <label>Team brainstorming</label>\n                            <div className={classes.progressContainer}>\n                                <ProgressBar width={widthProgressBar} height={heightProgressBar} progress={42}/>\n                                <span>42%</span>\n                            </div>\n                        </div>\n                    </div> */}\n                </StyledLeftSide>\n                <div className={classes.rightSide}>\n                    <div className={classes.tabHeader}>\n                        <h1>{t(\"activityDetails.title\")}</h1>\n                        <span>{props.activity.isPublic ? t(\"activityDetails.public\") : t(\"activityDetails.private\")}</span>\n                    </div>\n                    <div className={classes.activity}>\n                        <div className={classes.activityHeader}>\n                            <span className={classes.fullPath}><span className={classes.path}>Cybersecurity awareness &gt;</span> Cybersecurity</span>\n                            <div className={classes.headerRightSide}>\n                                <NavLink to={`/activities/edit/${props.match.params.activityId}`} className={classes.editBut}>\n                                    <i className=\"far fa-edit\"></i>\n                                    {t(\"activityDetails.edit\")}\n                                </NavLink>\n                                <button className={classes.removeBut} onClick={()=>setIsShowDeleteModal(true)}>\n                                    <i className=\"far fa-trash-alt\"></i>\n                                    {t(\"activityDetails.delete\")}\n                                </button>\n                            </div>\n                        </div>\n                        <h2>{props.activity.name}</h2>\n                        <div className={classes.activityFoot}>\n                            <div className={classes.activityProgressBlock}>\n                                {/* <ProgressBar width={widthProgressBar} height={heightProgressBar} progress={props.activity.totalPoints}/>\n                                <StyledProgressSpan direction={props.direction}>{props.activity.totalPoints}%</StyledProgressSpan> */}\n                                <span>{t(\"activityDetails.points\")} {props.activity.totalPoints}</span>\n                            </div>\n                            <div className={classes.activityFootRight}>\n                                <span>{daysLag}</span>\n                                <StyledMarkButton className={classes.mark} direction={props.direction}>{t(\"activityDetails.butComplete\")}</StyledMarkButton>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.videoBlock}>\n                        <div className={classes.video}>\n                            <button>\n                                <i className=\"fas fa-play-circle\"></i>\n                            </button>\n                        </div>\n                    </div>\n                    <div className={classes.chatBlock}>\n                        <h1>{props.activity.isPublic ? t(\"activityDetails.discuss\") : t(\"activityDetails.contact\")}</h1>\n                        <Chat currentUser={props.user}/>\n                    </div>\n                </div>\n            </div>}\n        </div>\n    );\n}\n\n\nlet WithUrlDataContainerComponent = withRouter(Activity);\n\nlet mapStateToProps = (state) => ({\n    isFetching: state.common.isFetching,\n    activity: state.activities.currentActivity,\n    activities: state.activities.activities,\n    user: state.user.user,\n    direction: state.common.direction\n})\n\nexport default connect(mapStateToProps, {\n    setCurrentActivity,\n    setIsFetching,\n    getActivity\n})(WithUrlDataContainerComponent);","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Activity/EditActivity/EditActivity.jsx",["443","444","445","446","447","448","449","450","451"],"import React, { useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport classes from '../AddActivity/AddActivity.module.css';\nimport { useTranslation } from 'react-i18next';\nimport { AuthInput, Calendar, TextAreaCustom } from '../../Common/FormControlls/FormControlls';\nimport { required } from '../../../Utils/validators';\nimport CustomSelect from '../../Common/Cutsom/Select/CustomSelect';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport Preloader from '../../Common/Preloader/Preloader';\nimport { getActivity } from '../../../Redux/activitiesReducer';\nimport styled from 'styled-components';\nimport ActivityFile from '../ActivityFile/ActivityFile';\nimport { FileDrop } from 'react-file-drop';\nimport uploadicon from '../../../Assets/Images/upload.svg';\n\nconst StyledLabel = styled.label`\n    margin-left: ${({ direction }) => \"30px\"};\n    margin-right: ${({ direction }) => \"30px\"};\n`;\n\nconst EditActivityForm = (props) => {\n    const {t, i18n} = useTranslation();\n    let maxLength = 300;\n\n    const [charactersLeft, setCharactersLeft] = useState(maxLength);\n\n    let disableDefValueOption = true;\n    let disableDefValueOptionText = t(\"addActivity.typeDef\");\n\n    let disableDefSupervisorOption = true;\n    let disableDefSupervisorOptionText = t(\"addActivity.supervisorDef\");\n\n    const [size, setSize] = useState([window.outerWidth, window.innerHeight]);\n    const [selectWidth, setSelectWidth] = useState(66);\n\n    useLayoutEffect(()=>{\n        function updateSize(){\n            setSize([window.outerWidth, window.innerHeight]);\n        }\n        window.addEventListener('resize', updateSize);\n        updateSize();\n        return () => window.removeEventListener('resize', updateSize);\n    },[]);\n\n    useEffect(()=>{\n        if(size[0] > 568){\n            setSelectWidth(66);\n        }else{\n            setSelectWidth(100);\n        }\n    },[size]);\n\n\n    let handleTextArea = (e) => {\n        setCharactersLeft(maxLength - e.target.value.length);\n    }\n\n    let types = [\"type1\", \"type2\", \"type3\"];\n\n    let supervisorsOptions = ['sup1', 'sup2', 'sup3'];\n\n\n    const fileInputRef = useRef(null);\n\n\n\n    const onFileInputChange = (event) => {\n        const newFiles = [...props.files];\n        const newFilesToPush = [...event.target.files];\n        newFilesToPush.forEach(item => {\n            newFiles.push(item);\n        })\n        props.setFiles(newFiles);\n    }\n\n    const onTargetClick = () => {\n        fileInputRef.current.click();\n    }\n    const onDropHandler = (files, event) => {\n        const newFilesToPush = [...files];\n        const newFiles = [...props.files];\n        newFilesToPush.forEach(item => {\n            newFiles.push(item);\n        })\n        props.setFiles(newFiles);\n    }\n\n    const handleRemoveFile = (index) => {\n        const newFiles = [...props.files];\n        newFiles.forEach((item, i) => {\n            if(index === i){\n                newFiles.splice(index, 1);\n            }\n        });\n        props.setFiles(newFiles);\n    }\n    let viewFiles = []\n\n    viewFiles = props.files.map((f, index) => {\n        return <ActivityFile name={f.name} index={index} handleRemoveFile={handleRemoveFile}/>\n    })\n\n\n    return(\n        <form onSubmit={props.handleSubmit} className={classes.form}>\n            <div className={classes.field + \" \" + classes.inputField}>\n                <label className={classes.fieldLabel}>{t(\"addActivity.name\")}</label>\n                <Field component={AuthInput} placeholder={t(\"addActivity.namePlaceholder\")} name=\"name\"\n                    validate={[required]}/>\n            </div>\n            <div className={classes.field + \" \" + classes.inputField}>\n                <label className={classes.fieldLabel}>{t(\"addActivity.link\")}</label>\n                <Field component={AuthInput} name=\"link\"/>\n            </div>\n            {/* <div className={classes.field}>\n                <label className={classes.fieldLabel}>{t(\"addActivity.supervisor\")}</label>\n                <p></p>\n                <Field component={CustomSelect} options={supervisorsOptions} setFunction={props.setSupervisor} width={selectWidth} \n                        validate={[required]} name=\"supervisor\" disableDefValueOption={disableDefSupervisorOption} disableDefValueOptionText={disableDefSupervisorOptionText}/>\n            </div> */}\n            <div className={classes.field + \" \" + classes.inputField}>\n                <label className={classes.fieldLabel}>{t(\"addActivity.points\")}</label>\n                <Field component={AuthInput} name=\"points\"\n                    validate={[required]}/>\n            </div>\n            <div className={classes.field}>\n                <label className={classes.fieldLabel}>{t(\"addActivity.description\")}</label>\n                <Field component={TextAreaCustom} name=\"description\"\n                       maxLength={maxLength} left={charactersLeft} rows={1} onChange={handleTextArea}/>\n            </div>\n            <div className={classes.field}>\n                <label className={classes.fieldLabel}>{t(\"addActivity.date\")}</label>\n                <div className={classes.dates}>\n                    <Field component={Calendar} name=\"start\"/>\n                    <StyledLabel direction={props.direction}>{t(\"addActivity.to\")}</StyledLabel>\n                    <Field component={Calendar} name=\"end\"/>\n                </div>\n            </div>\n            <div className={classes.field}>\n                <label className={classes.fieldLabel}>{t(\"addActivity.type\")}</label>\n                <p></p>\n                <Field component={CustomSelect} options={types} setFunction={props.setType} width={selectWidth} \n                        validate={[required]} name=\"type\" disableDefValueOption={disableDefValueOption} disableDefValueOptionText={disableDefValueOptionText}/>\n            </div>\n            <div className={classes.field}>\n                <label className={classes.fieldLabel}>{t(\"addActivity.visibility\")}</label>\n                <div className={classes.radios}>\n                    <div className={classes.visibilityBlock}>\n                        <input type=\"radio\" name=\"visibility\" id=\"public\" onChange={e=>{props.setVisibility(e.target.value)}} value=\"public\"/>\n                        <label htmlFor={\"public\"}>Public</label>\n                        <div className={classes.check}></div>\n                    </div>\n                    <div className={classes.visibilityBlock}>\n                        <input type=\"radio\" name=\"visibility\" id=\"private\" checked onChange={e=>{props.setVisibility(e.target.value)}} value=\"private\"/>\n                        <label htmlFor={\"private\"}>Private</label>\n                        <div className={classes.check}></div>\n                    </div>\n                </div>\n            </div>\n            <div className={classes.field}>\n                <label className={classes.fieldLabel}>{t(\"addActivity.upload\")}</label>\n                <div className={classes.dragNdrop}>\n                    <input onChange={onFileInputChange}\n                    ref={fileInputRef}\n                    type=\"file\"\n                    className={classes.hidden} multiple/>\n                    <FileDrop onDrop={(files, event) => onDropHandler(files, event)} onTargetClick={onTargetClick} className={classes.drop} draggingOverFrameClassName={classes.onDrag} targetClassName={classes.dropInner}>\n                        <div className={classes.uploadBut}>\n                            <img src={uploadicon}/>\n                            <p>{t(\"addActivity.upload\")}</p>\n                        </div>\n                        <p className={classes.dragText}>{t(\"addActivity.drag\")}</p>\n                    </FileDrop>\n                </div>\n                {props.files.length > 0 && \n                    <div className={classes.files}>\n                        {viewFiles}\n                    </div>\n                }\n            </div>\n            <div className={classes.fieldBut}>\n                <button>{t(\"editActivity.title\")}</button>\n                <NavLink to={`/activities/view/${props.activityId}`}>{t(\"addActivity.cancel\")}</NavLink>\n            </div>\n        </form>\n    );\n}\n\nlet EditActivityReduxForm = reduxForm({form: 'editActivity'})(EditActivityForm);\n\nEditActivityReduxForm = connect(\n    state => ({\n        initialValues: state.activities.currentActivity\n    }),{}\n)(EditActivityReduxForm);\n\nconst EditActivity = (props) => {\n    const {t, i18n} = useTranslation();\n    const [type, setType] = useState(\"\");\n    const [visibility, setVisibility] = useState(\"private\");\n    const [supervisor, setSupervisor] = useState(\"\");\n\n    const [files, setFiles] = useState([]);\n\n    useEffect(()=>{\n        let activityId = props.match.params.activityId;\n        props.getActivity(activityId, props.user.selectedOrganizationId);\n    },[]);\n\n    let onSubmit = (formData) => {\n        console.log(formData);\n\n    }\n    return(\n        <div className={classes.main}>\n            {props.isFetching && <Preloader/>}\n            <div className={classes.header}>\n                <div className={classes.headerContainer}>\n                    <h1>{t(\"editActivity.title\")}</h1>\n                </div>\n            </div>\n            <div className={classes.formContainer}>\n                <EditActivityReduxForm onSubmit={onSubmit} setFiles={setFiles} files={files} setSupervisor={setSupervisor} setType={setType} visibility={visibility} setVisibility={setVisibility} activityId={props.match.params.activityId} direction={props.direction}/>\n            </div>\n        </div>\n    );\n}\n\nlet WithUrlDataContainerComponent = withRouter(EditActivity);\n\nlet mapStateToProps = (state) => ({\n    isFetching: state.common.isFetching,\n    user: state.user.user,\n    direction: state.common.direction\n})\n\nexport default connect(mapStateToProps, {\n    getActivity\n})(WithUrlDataContainerComponent);\n\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Api/api.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Utils/validators.js",["452"],"export const required = (value) =>{\n    if(value) return undefined;\n    \n    return 'The field is required!';\n}\n\nexport const foo = console.log;\n\nexport const isEmail = (value) => {\n    let rep = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\n    if(rep.test(value)){\n        return undefined;\n    }\n    return 'Incorrect email!';   \n}\nexport const passValidationMatch = (value, allValues) => {\n    if(value !== allValues.newPassword) return `Passwords didn't match!`;\n    return undefined;\n}\n\nexport const emailValidationMatch = (value, allValues) => {\n    if(value !== allValues.newEmail) return `Emails didn't match!`;\n    return undefined;\n}","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Common/FormControlls/FormControlls.js",["453"],"import React, { useState } from 'react';\nimport classes from './FormControlls.module.css';\nimport { useTranslation } from 'react-i18next';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport const AuthInput = ({input, meta, ...props}) => {\n    const hasError = meta.touched && meta.error;\n    return(\n        <div className={classes.formControll + \" \" + (hasError && classes.error)}>\n            <input {...input} {...props}/>\n            {hasError && <span>{meta.error}</span>}\n        </div>\n    );\n}\n\nexport const TextAreaCustom = ({input, meta, ...props}) => {\n    const {t, i18n} = useTranslation();\n    const hasError = meta.touched && meta.error;\n    return(\n        <div className={classes.textarea + \" \" + (hasError && classes.error)}>\n            <textarea maxLength={props.maxLength} {...input} {...props} row={props.rows}/>\n            {hasError && <span>{meta.error}</span>}\n            <label>{props.left} {t(\"addActivity.charactersLeft\")}</label>\n        </div>\n    )\n}\n\nexport const Calendar = ({input, meta, ...props}) => {\n    const [startDate, setStartDate] = useState(new Date());\n\n    let handleDate = (date) => {\n        setStartDate(date);\n        input.onChange(date);\n    }\n\n    const hasError = meta.touched && meta.error;\n\n    return(\n        <div className={classes.calendar + \" \" + (hasError && classes.error)}>\n            <DatePicker selected={startDate} onChange={date => handleDate(date)}/>\n            {hasError && <span>{meta.error}</span>}\n        </div>\n    );\n}\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Home/Home.jsx",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Courses/Courses.jsx",["454","455","456"],"import React, { useEffect, useState } from 'react';\nimport classes from './Courses.module.css';\nimport CourseItemView from './CourseItemView/CourseItemView';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\n\nconst StyledLabel = styled.label`\n    margin-left: ${({ direction }) => direction === \"rtl\" ? \"56px\" : \"0\"};\n    margin-right: ${({ direction }) => direction === \"ltr\" ? \"56px\" : \"0\"};\n`;\n\nconst Courses = (props) => {\n    const {t, i18n} = useTranslation();\n\n    let courses = props.courses.map(item => {\n        return <CourseItemView item={item} key={item.courseId}/>\n    })\n\n    return(\n        <div className={classes.main}>\n            <div className={classes.coursesHeader}>\n                <div className={classes.coursesHeaderContainer}>\n                    <h1>{t(\"courses.title\")}</h1>\n                    <div className={classes.filters}>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"courses.filters.all\")}</span>\n                            <input type=\"checkbox\" onChange={()=>{props.setAll()}} checked={props.all}/>\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"courses.filters.completed\")}</span>\n                            <input type=\"checkbox\" onChange={()=>{props.setCompleted(!props.completed)}} checked={props.completed}/>\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"courses.filters.inProgress\")}</span>\n                            <input type=\"checkbox\" onChange={()=>{props.setInProgress(!props.inProgress)}} checked={props.inProgress}/>\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"courses.filters.notStarted\")}</span>\n                            <input type=\"checkbox\" onChange={()=>{props.setNotStarted(!props.notStarted)}} checked={props.notStarted}/>\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                    </div>\n                </div>\n            </div>\n            <div className={classes.itemsList}>\n                <div className={classes.containerItems}>\n                    {courses}\n                </div>  \n            </div>\n        </div>\n    );\n}\n\nexport default Courses;","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Reports/Reports.jsx",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Activites/Activities.jsx",["457","458","459"],"import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport classes from './Activities.module.css';\nimport { useTranslation } from 'react-i18next';\nimport ActivityItem from './ActivityItem/ActivityItem';\nimport { NavLink } from 'react-router-dom';\n\nconst StyledLabel = styled.label`\n    margin-left: ${({ direction }) => direction === \"rtl\" ? \"56px\" : \"0\"};\n    margin-right: ${({ direction }) => direction === \"ltr\" ? \"56px\" : \"0\"};\n`;\n\nconst Activities = (props) => {\n    const {t, i18n} = useTranslation();\n\n    props.activities.sort(function(a,b){\n        return new Date(b.end) - new Date(a.end);\n    });\n\n    let activities = props.activities.map(item => {\n        return <ActivityItem item={item} key={item.activityId} width={props.blockWidth}/>\n    });\n\n    return(\n        <div className={classes.main}>\n            <div className={classes.header}>\n                <div className={classes.headerContainer}>\n                    <div className={classes.headerHeader}>\n                        <h1>{t(\"activities.title\")}</h1>\n                        <NavLink to=\"/activities/add\">\n                            <div>\n                                +\n                            </div>\n                            {t(\"activities.addActivityBut\")}\n                        </NavLink>\n                    </div>\n                    <div className={classes.filters}>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"activities.filters.all\")}</span>\n                            <input type=\"checkbox\" onChange={()=>{props.setAll()}} value={props.all} checked={props.all}/>\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"activities.filters.completed\")}</span>\n                            <input type=\"checkbox\" onChange={()=>{props.setCompleted(!props.completed)}} checked={props.completed}/>\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"activities.filters.inProgress\")}</span>\n                            <input type=\"checkbox\" onChange={()=>{props.setInProgress(!props.inProgress)}} checked={props.inProgress}/>\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"activities.filters.notStarted\")}</span>\n                            <input type=\"checkbox\" onChange={()=>{props.setNotStarted(!props.notStarted)}} checked={props.notStarted}/>\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"activities.filters.private\")}</span>\n                            <input type=\"checkbox\" onChange={()=>{props.setPrivateParam(!props.privateParam)}} checked={props.privateParam}/>\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                    </div>\n                </div>\n            </div>\n            <div className={classes.itemsList}>\n                <div className={classes.containerItems}>\n                    {activities}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Activities;","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Lessons/Lessons.jsx",["460"],"import React from 'react';\nimport { connect } from 'react-redux';\nimport classes from './Lessons.module.css';\n\nconst Lessons = (props) => {\n    return(\n        <div className={classes.main}>\n            <div className={classes.header}>\n                <div className={classes.container}>\n                    \n                </div>\n            </div>\n            <div className={classes.container}>\n                <h3>lessons</h3>\n            </div>\n            \n        </div>\n    );\n}\n\nexport default Lessons;","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Notifications/Notifications.jsx",["461","462","463","464"],"import React from 'react';\nimport classes from './Notifications.module.css';\nimport { notificationicon } from '../../Assets/Images/notification';\nimport { useTranslation } from 'react-i18next';\nimport markasreadicon from '../../Assets/Images/asreadicon.svg';\nimport NotificationItem from './NotificationItem/NotificationItem';\n\nconst Notifications = (props) => {\n    const {t, i18n} = useTranslation();\n    \n    let newNotifications = [];\n    let notifications = [];\n\n    newNotifications = props.notifications.map(notify => {\n        if(!notify.isRead){\n            return <NotificationItem isRead={false} item={notify} key={notify.notificationId}/>\n        }\n    });\n\n    notifications = props.notifications.map(notify => {\n        if(notify.isRead){\n            return <NotificationItem isRead={true} item={notify} key={notify.notificationId}/>\n        }\n    })\n\n    return(\n        <div className={classes.main}>\n            <div className={classes.container}>\n                <div className={classes.header}>\n                    <div className={classes.headerSide}>\n                        {notificationicon}\n                        <h3>{t(\"notifications.title\")}</h3>\n                    </div>\n                    <div className={classes.headerSide}>\n                        <button>\n                            <img src={markasreadicon}/>\n                            <span>{t(\"notifications.markAllRead\")}</span>\n                        </button>\n                    </div>\n                </div>\n                <div className={classes.contentContainer}>\n                    <div className={classes.new}>\n                        {newNotifications}\n                    </div>\n                    <h3>{t(\"notifications.earlier\")}</h3>\n                    <div className={classes.itemsList}>\n                        {notifications}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Notifications;\n\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/SearchResult/SearchResult.jsx",["465"],"import React from 'react';\nimport classes from './SearchResult.module.css';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\nimport { coursesicon } from '../../Assets/Images/courses';\nimport { activitiesicon } from '../../Assets/Images/activities';\nimport { programicon } from '../../Assets/Images/programicon';\nimport { empty_state_icon } from '../../Assets/Images/empty_state_icon';\n\nconst StyledLabel = styled.label`\n    margin-left: ${({ direction }) => direction === \"rtl\" ? \"56px\" : \"0\"};\n    margin-right: ${({ direction }) => direction === \"ltr\" ? \"56px\" : \"0\"};\n`;\n\nconst SearchResult = (props) => {\n    const {t, i18n} = useTranslation();\n\n    let courses = [];\n    let programs = [];\n    let activities = [];\n\n    console.log(props.viewAll)\n\n    return(\n        <div className={classes.main}>\n            <div className={classes.header}>\n                <div className={classes.container}>\n                    <h1>{t(\"searchResult.title\")} <strong>{props.searchValue}</strong></h1>\n                    <div className={classes.filters}>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"searchResult.all\")}</span>\n                            <input type=\"checkbox\" onChange={()=>{props.setViewAll(!props.viewAll)}} checked={props.viewAll} value={props.viewAll}/>\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"searchResult.programs\")}</span>\n                            <input type=\"checkbox\" onChange={()=>{props.setViewPrograms(!props.viewPrograms)}} value={props.viewPrograms} checked={props.viewPrograms}/>\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"searchResult.courses\")}</span>\n                            <input type=\"checkbox\" onChange={()=>{props.setViewCourses(!props.viewCourses)}} value={props.viewCourses} checked={props.viewCourses}/>\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"searchResult.activities\")}</span>\n                            <input type=\"checkbox\" onChange={()=>{props.setViewActivities(!props.viewActivities)}} value={props.viewActivities} checked={props.viewActivities}/>\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                    </div>\n                </div>\n            </div>\n            <div className={classes.content}>\n                <div className={classes.container}>\n                    {props.viewCourses &&\n                    <div className={classes.category}>\n                        <div className={classes.categoryHeader}>\n                            {coursesicon}\n                            <span>{t('searchResult.courses')}</span>\n                        </div>\n                        <div className={classes.itemsList}>\n                            {(courses.length > 0 && courses) ? courses : \n                                <div className={classes.empty}>\n                                    <div className={classes.emptyIcon}>\n                                        {empty_state_icon}\n                                    </div>\n                                    <span>{t(\"searchResult.coursesEmpty\")}</span>\n                                </div>\n                            }\n                        </div>\n                    </div>}\n                    {props.viewActivities &&\n                    <div className={classes.category}>\n                        <div className={classes.categoryHeader}>\n                            {activitiesicon}\n                            <span>{t('searchResult.activities')}</span>\n                        </div>\n                        <div className={classes.itemsList}>\n                            {(activities.length > 0 && activities) ? activities : \n                                <div className={classes.empty}>\n                                    <div className={classes.emptyIcon}>\n                                        {empty_state_icon}\n                                    </div>\n                                    <span>{t(\"searchResult.activitiesEmpty\")}</span>\n                                </div>\n                            }\n                        </div>\n                    </div>}\n                    {props.viewPrograms &&\n                    <div className={classes.category}>\n                        <div className={classes.categoryHeader}>\n                            {programicon}\n                            <span>{t('searchResult.programs')}</span>\n                        </div>\n                        <div className={classes.itemsList}>\n                            {(programs.length > 0 && programs) ? programs : \n                                <div className={classes.empty}>\n                                    <div className={classes.emptyIcon}>\n                                        {empty_state_icon}\n                                    </div>\n                                    <span>{t(\"searchResult.programsEmpty\")}</span>\n                                </div>\n                            }\n                        </div>\n                    </div>}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default SearchResult;","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Programs/Programs.jsx",["466","467","468","469"],"import React, { useState } from 'react';\nimport classes from './Programs.module.css';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\nimport { empty_state_icon } from '../../Assets/Images/empty_state_icon';\n\nconst StyledLabel = styled.label`\n    margin-left: ${({ direction }) => direction === \"rtl\" ? \"56px\" : \"0\"};\n    margin-right: ${({ direction }) => direction === \"ltr\" ? \"56px\" : \"0\"};\n`;\n\nconst Programs = (props) => {\n    const { t, i18n } = useTranslation();\n\n\n\n    let programs = [];\n\n    programs = props.programs.map(program => {\n\n    });\n\n    return (\n        <div className={classes.main}>\n            <div className={classes.header}>\n                <div className={classes.container}>\n                    <h1>{t(\"programs.title\")}</h1>\n                    <div className={classes.filters}>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"courses.filters.all\")}</span>\n                            <input type=\"checkbox\" onChange={() => { props.setAll() }} checked={props.all} value={props.all} />\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"courses.filters.completed\")}</span>\n                            <input type=\"checkbox\" onChange={() => { props.setCompleted(!props.completed) }} checked={props.completed} />\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"courses.filters.inProgress\")}</span>\n                            <input type=\"checkbox\" onChange={() => { props.setInProgress(!props.inProgress) }} checked={props.inProgress} />\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"courses.filters.notStarted\")}</span>\n                            <input type=\"checkbox\" onChange={() => { props.setNotStarted(!props.notStarted) }} checked={props.notStarted} />\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                    </div>\n                </div>\n            </div>\n            <div className={classes.itemsList}>\n                <div className={classes.containerItems}>\n                    {(programs.length > 0 && programs != null && programs != undefined) ? programs :\n                        <div className={classes.empty}>\n                            <div className={classes.emptyIcon}>\n                                {empty_state_icon}\n                            </div>\n                            <span>{t(\"programs.empty\")}</span>\n                        </div>\n                    }\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Programs;","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Activites/Library/Library.jsx",["470","471","472"],"import React, { useState } from 'react';\nimport classes from './Library.module.css';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\nimport { empty_state_icon } from '../../../Assets/Images/empty_state_icon';\n\nconst StyledLabel = styled.label`\n    margin-left: ${({ direction }) => direction === \"rtl\" ? \"56px\" : \"0\"};\n    margin-right: ${({ direction }) => direction === \"ltr\" ? \"56px\" : \"0\"};\n`;\n\nconst Library = (props) => {\n    const { t, i18n } = useTranslation();\n\n\n\n    let libraryItemsList = [];\n\n    // libraryItemsList = props.libraryItemsList.map(item => {\n\n    // });\n\n    return (\n        <div className={classes.main}>\n            <div className={classes.header}>\n                <div className={classes.container}>\n                    <h1>{t(\"activities.library.title\")}</h1>\n                    <div className={classes.filters}>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"courses.filters.all\")}</span>\n                            <input type=\"checkbox\" onChange={() => { props.setAll() }} checked={props.all} value={props.all} />\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"activities.library.images\")}</span>\n                            <input type=\"checkbox\" onChange={() => { props.setIsImage(!props.isImage) }} checked={props.isImage} />\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"activities.library.hyperlinks\")}</span>\n                            <input type=\"checkbox\" onChange={() => { props.setIsHyperlink(!props.isHyperlink) }} checked={props.isHyperlink} />\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"activities.library.files\")}</span>\n                            <input type=\"checkbox\" onChange={() => { props.setIsFiles(!props.isFiles) }} checked={props.isFiles} />\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                    </div>\n                </div>\n            </div>\n            <div className={classes.itemsList}>\n                <div className={classes.containerItems}>\n                    {(libraryItemsList.length > 0 && libraryItemsList != null && libraryItemsList != undefined) ? libraryItemsList :\n                        <div className={classes.empty}>\n                            <div className={classes.emptyIcon}>\n                                {empty_state_icon}\n                            </div>\n                            <span>{t(\"activities.library.noResources\")}</span>\n                        </div>\n                    }\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Library;","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Navbar/Navbar.jsx",["473","474"],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Profile/Info/ProfileInfo.jsx",["475","476","477","478"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport classes from './ProfileInfo.module.css';\nimport { useTranslation } from 'react-i18next';\nimport { AuthInput } from '../../Common/FormControlls/FormControlls';\nimport { required } from '../../../Utils/validators';\nimport default_user from '../../../Assets/Images/default_user.png';\nimport { NavLink } from 'react-router-dom';\nimport upload_icon from '../../../Assets/Images/upload-icon.svg';\n\nconst ProfileInfoForm = (props) => {\n    const {t, i18n} = useTranslation();\n\n    const [previewImage, setPreviewImage] = useState(null);\n\n    const handleImage = (e) => {\n        e.preventDefault()\n        setPreviewImage(window.URL.createObjectURL(e.target.files[0]));\n    }\n\n    const removeImage = (e) => {\n        e.preventDefault();\n        setPreviewImage(null);\n    }\n\n    useEffect(()=>{\n        props.initialize({\n            name: props.user.name,\n            profilePhoto: props.user.profilePhoto\n        });\n    },[props.user]);\n\n    return(\n        <form className={classes.form} onSubmit={props.handleSubmit}>\n            <div className={classes.field}>\n                <label>{t(\"profile.profileInfo.fullname\")}</label>\n                <Field component={AuthInput} name=\"name\" validate={[required]}/>\n            </div>\n            <div className={classes.fieldImage}>\n                <label>{t(\"profile.profileInfo.photo\")}</label>\n                <label htmlFor=\"image\" className={classes.image}>\n                    <img src={previewImage ? previewImage : (props.user.profilePhoto ? props.user.profilePhoto : default_user)} className={classes.photo}/>\n                    <img src={upload_icon} className={classes.upload}/>\n                </label>\n                <Field component={\"input\"} type=\"file\" name=\"profilePhoto\" id=\"image\" hidden onChange={handleImage}/>\n                <button onClick={(e)=>{removeImage(e)}}>{t(\"profile.profileInfo.remove\")}</button>\n            </div>\n            <div className={classes.fieldBut}>\n                <button>{t(\"profile.saveChanges\")}</button>\n                <NavLink to=\"/profile/info\">{t(\"profile.cancel\")}</NavLink>\n            </div>\n        </form>\n    );\n}\n\nlet ProfileInfoReduxForm = reduxForm({form: \"profileInfo\"})(ProfileInfoForm);\n\n\nconst ProfileInfo = (props) => {\n    const onSubmit = (formData) => {\n        console.log(formData);\n    }\n\n    return(\n        <ProfileInfoReduxForm onSubmit={onSubmit} user={props.user}/>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n    user: state.user.user\n});\n\nexport default connect(mapStateToProps, {\n    \n})(ProfileInfo);","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Profile/Notifications/ProfileNotifications.jsx",["479"],"import React, { useState } from 'react';\nimport classes from './ProfileNotifications.module.css';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\n\nconst ProfileNotifications = (props) => {\n    const {t, i18n} = useTranslation();\n\n    const [enableEmail, setEnableEmail] = useState(false);\n    const [enableText, setEnableText] = useState(false);\n\n    let handleEmail = () => {\n        setEnableEmail(!enableEmail);\n    }\n    let handleText = () => {\n        setEnableText(!enableText);\n    }\n\n    return(\n        <div className={classes.main}>\n            <div className={classes.field}>\n                <label htmlFor=\"email\">{t(\"profile.notifications.email\")}</label>\n                <label className={classes.switch}>\n                    <input type=\"checkbox\" id=\"email\" onChange={handleEmail} value={enableEmail}/>\n                    <span className={classes.slider}></span>\n                </label>\n            </div>\n            <div className={classes.field}>\n                <label htmlFor=\"text\">{t(\"profile.notifications.text\")}</label>\n                <label className={classes.switch}>\n                    <input type=\"checkbox\" id=\"text\" onChange={handleText} value={enableText}/>\n                    <span className={classes.slider}></span>\n                </label>\n            </div>\n        </div>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n\n});\n\nexport default connect(mapStateToProps, {})(ProfileNotifications);","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Profile/Email/ProfileEmail.jsx",["480","481"],"import React, { useEffect } from 'react';\nimport classes from './ProfileEmail.module.css';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { AuthInput } from '../../Common/FormControlls/FormControlls';\nimport { emailValidationMatch, isEmail, required } from '../../../Utils/validators';\nimport { NavLink } from 'react-router-dom';\n\nconst ProfileEmailForm = (props) => {\n    const {t, i18n} = useTranslation();\n\n    useEffect(()=>{\n        props.initialize({\n            email: props.user.email\n        });\n    },[]);\n\n    return(\n        <form className={classes.form} onSubmit={props.handleSubmit}>\n            <div className={classes.field + \" \" + classes.fieldBorder}>\n                <label>{t(\"profile.profileEmail.current\")}</label>\n                <Field component={AuthInput} name=\"email\" validate={[required, isEmail]} disabled/>\n            </div>\n            <div className={classes.field}>\n                <label>{t(\"profile.profileEmail.new\")}</label>\n                <Field component={AuthInput} placeholder=\"mail@example.com\" name=\"newEmail\" validate={[required, isEmail]}/>\n            </div>\n            <div className={classes.field}>\n                <label>{t(\"profile.profileEmail.reenter\")}</label>\n                <Field component={AuthInput} placeholder=\"mail@example.com\" name=\"repeatEmail\" validate={[required, isEmail, emailValidationMatch]}/>\n            </div>\n            <div className={classes.fieldBut}>\n                <button>{t(\"profile.saveChanges\")}</button>\n                <NavLink to=\"/profile/info\">{t(\"profile.cancel\")}</NavLink>\n            </div>\n        </form>\n    )\n}\n\nlet ProfileEmailReduxForm = reduxForm({form: \"profileEmail\"})(ProfileEmailForm);\n\nconst ProfileEmail = (props) => {\n    const onSubmit = (formData) => {\n        console.log(formData);\n    }\n\n    return(\n        <ProfileEmailReduxForm onSubmit={onSubmit} user={props.user}/>\n    )\n}\n\nlet mapStateToProps = (state) => ({\n    user: state.user.user\n});\n\nexport default connect(mapStateToProps, {})(ProfileEmail);","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Profile/Password/ProfilePassword.jsx",["482","483","484","485"],"import React, { useEffect, useState } from 'react';\nimport classes from './ProfilePassword.module.css';\nimport { connect } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { AuthInput } from '../../Common/FormControlls/FormControlls';\nimport { Field, reduxForm } from 'redux-form';\nimport { passValidationMatch, required } from '../../../Utils/validators';\nimport { NavLink } from 'react-router-dom';\nimport hide from '../../../Assets/Images/hide.svg';\nimport show from '../../../Assets/Images/Show.svg';\n\nconst ProfilePasswordForm = (props) => {\n    const {t, i18n} = useTranslation();\n\n    useEffect(()=>{\n        props.initialize({\n            password: \"123\"\n        });\n    },[]);\n\n    const [passType, setPassType] = useState(\"password\");\n\n    const handleShowPass = () => {\n        if(passType === \"password\"){\n            setPassType(\"text\");\n            return;\n        }else{\n            setPassType(\"password\");\n        }\n    }\n\n    return(\n        <form className={classes.form} onSubmit={props.handleSubmit}>\n            <div className={classes.field + \" \" + classes.fieldBorder}>\n                <label>{t(\"profile.profilePass.current\")}</label>\n                <Field component={AuthInput} name=\"password\" validate={[required]} disabled type={passType}/>\n                <img src={passType === \"password\" ? hide : show} className={classes.icon + \" \" + (passType === \"text\" && classes.show)} onClick={()=>handleShowPass()}/>\n            </div>\n            <div className={classes.field}>\n                <label>{t(\"profile.profilePass.new\")}</label>\n                <Field component={AuthInput} name=\"newPassword\" validate={[required]} type={\"password\"}/>\n            </div>\n            <div className={classes.field}>\n                <label>{t(\"profile.profilePass.reenter\")}</label>\n                <Field component={AuthInput} name=\"repeatPassword\" validate={[required, passValidationMatch]} type={\"password\"}/>\n            </div>\n            <div className={classes.fieldBut}>\n                <button>{t(\"profile.saveChanges\")}</button>\n                <NavLink to=\"/profile/info\">{t(\"profile.cancel\")}</NavLink>\n            </div>\n        </form>\n    );\n}\n\nlet ProfilePasswordReduxForm = reduxForm({form: 'profilePass'})(ProfilePasswordForm);\n\nconst ProfilePassword = (props) => {\n    const onSubmit = (formData) => {\n        console.log(formData);\n    }\n\n    return(\n        <ProfilePasswordReduxForm onSubmit={onSubmit}/>    \n    );\n}\n\nlet mapStateToProps = (state) => ({\n    \n});\n\nexport default connect(mapStateToProps, {})(ProfilePasswordReduxForm);\n\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Common/ProgressBar/ProgressBar.jsx",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Activity/DeleteActivity/DeleteActivity.jsx",["486","487"],"import React from 'react';\nimport classes from './DeleteActivity.module.css';\nimport Aos from 'aos';\nimport 'aos/dist/aos.css';\nimport { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport shield from '../../../Assets/Images/shield.svg';\n\nconst DeleteActivity = (props) => {\n    const {t, i18n} = useTranslation();\n\n    useEffect(() => {\n        Aos.init({ duration: 1000 });\n    }, []);\n\n    return(\n        <div className={classes.backGray}>\n            <div className={classes.modal} data-aos=\"fade-down\">\n                <button className={classes.close} onClick={()=>props.setIsShowDeleteModal(false)}>×</button>\n                <img src={shield}/>\n                <h1>{t(\"deleteActivity.title\")}</h1>\n                <span>{t(\"deleteActivity.sub\")}</span>\n                <div className={classes.buttons}>\n                    <button className={classes.del}>{t(\"deleteActivity.delete\")}</button>\n                    <p>&nbsp;&nbsp;&nbsp;&nbsp;</p>\n                    <button className={classes.cancel} onClick={()=>props.setIsShowDeleteModal(false)}>{t(\"deleteActivity.cancel\")}</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default DeleteActivity;","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Activity/ActivityFile/ActivityFile.jsx",["488"],"import React from 'react';\nimport classes from './ActivityFile.module.css';\nimport pdficon from '../../../Assets/Images/pdficon.svg';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\n\n\nconst StyledDiv = styled.div`\n    margin-left: ${({ direction }) => direction === \"ltr\" ? \"0\" : \"10px\"};\n    margin-right: ${({ direction }) => direction === \"rtl\" ? \"0\" : \"10px\"};\n`;\n\nconst StyledBut = styled.button`\n    left: ${({ direction }) => direction === \"ltr\" ? \"10px\" : \"-10px\"};\n`;\n\nconst ActivityFile = (props) => {\n    return(\n        <StyledDiv className={classes.main} direction={props.direction}>\n            <div className={classes.body}>\n                <StyledBut direction={props.direction} onClick={()=>{props.handleRemoveFile(props.index)}}>&#x2715;</StyledBut>\n                <img src={pdficon}/>\n            </div>\n            <span>{props.name}</span>\n        </StyledDiv>\n        \n    );\n}\n\nlet mapStateToProps = (state) => ({\n    direction: state.common.direction\n})\n\nexport default connect(mapStateToProps, {})(ActivityFile);","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Common/Cutsom/Select/CustomSelect.jsx",["489"],"import React, { useEffect, useState } from 'react';\nimport classes from './CustomSelect.module.css';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\n\nconst StyledSelect = styled.div`\n    width: ${({ width }) => width + \"%\"};\n`;\n\nconst CustomSelect = ({input, meta, ...props}) => {\n    const [currentOption, setCurrentOption] = useState(props.disableDefValueOptionText ? props.disableDefValueOptionText : props.options[0]);\n    const [isOpenDropdown, setIsOpenDropdown] = useState(false);\n\n    useEffect(()=>{\n        if(input){\n            input.value = \"\"\n        }\n       \n    },[]);\n\n    let handleSelect = (option) => {\n        setCurrentOption(option);\n        if(input){\n            input.onChange(option);\n        }\n        props.setFunction(option);\n        setIsOpenDropdown(false);\n    }\n\n    let options = props.options.map((option, index) => {\n        return <span key={index + \"opt\"} onClick={()=>{handleSelect(option)}} className={classes.option + \" \" + classes.detectClick} {...input}>{option}</span>\n    });\n\n    let hasError = null;\n\n    if(props.disableDefValueOption){\n        hasError = meta.touched && meta.error;\n    }\n\n    return(\n            <StyledSelect className={classes.main + \" \" + (hasError && classes.error) + \" \" + classes.detectClick} width={props.width}>\n                <input hidden type=\"checkout\" value={isOpenDropdown} className={classes.detectClick} defaultValue={isOpenDropdown}/>\n                {/* <input {...input} {...props} value={321}/> */}\n                <div className={classes.view + \" \" + classes.detectClick} onClick={()=>setIsOpenDropdown(!isOpenDropdown)}>\n                    <span className={classes.detectClick}>{currentOption}</span>\n                    <div className={classes.arrow + \" \" + (isOpenDropdown && classes.open) + \" \" + classes.detectClick}></div>\n                </div>\n                {isOpenDropdown && \n                <div className={classes.dropdown + \" \" + (isOpenDropdown && classes.openDropdown) + \" \" + classes.detectClick}>\n                    {props.disableDefValueOption && <span className={classes.option + \" \" + classes.disabled + \" \" + classes.detectClick}>{props.disableDefValueOptionText}</span>}\n                    {options}\n                </div>}\n                {props.disableDefValueOption && \n                    <>\n                        {hasError && <span>{meta.error}</span>}\n                    </>\n                }\n            </StyledSelect>  \n    );\n}\n\nlet mapStateToProps = (state) => ({\n    direction: state.common.direction\n});\n\nexport default connect(mapStateToProps, null)(CustomSelect);","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Activity/Chat/Chat.jsx",["490","491","492","493"],"import React, { useRef, useState } from 'react';\nimport { connect } from 'react-redux';\nimport classes from './Chat.module.css';\nimport { useTranslation } from 'react-i18next';\nimport send from '../../../Assets/Images/send.svg';\nimport attach from '../../../Assets/Images/attach.svg';\nimport Message from './Message/Message';\n\nconst Chat = (props) => {\n    const {t, i18n} = useTranslation();\n    const fileInputRef = useRef(null);\n\n    const [file, setFile] = useState(null);\n    const [message, setMessage] = useState(\"\");\n\n    const onTargetClick = () => {\n        fileInputRef.current.click();\n    }\n\n    const onFileInputChange = (event) => {\n        setFile(event.target.files[0]);\n    }\n\n    const [tmpMessages, setTmpMessages] = useState([\n        {\n            text: \"Hello\",\n            user: props.currentUser,\n            itsMe: true\n        },\n        {\n            text: \"Muerto.\",\n            user: props.currentUser,\n            itsMe: true\n        },\n        {\n            text: \"Muerto.\",\n            user: props.currentUser,\n            itsMe: false\n        }\n    ])\n\n\n    const sendMessage = (text) => {\n        const newTmpMessages = [...tmpMessages];\n        newTmpMessages.push({\n            text,\n            user: props.currentUser,\n            itsMe: true\n        });\n        setTmpMessages(newTmpMessages);\n        setMessage(\"\");\n    }\n\n    let messages = tmpMessages.map(msg => {\n        return <Message message={msg}/>\n    })\n\n    return(\n        <div className={classes.main}>\n            <div className={classes.messageList}>\n                {messages}\n            </div>\n            <div className={classes.inputBlock}>\n                <input placeholder={t(\"chat.messagePlaceholder\")} onChange={e => setMessage(e.target.value)} value={message}/>\n                \n                <div className={classes.buttons}>\n                    <button onClick={()=>{sendMessage(message)}}>\n                        <img src={send}/>\n                    </button>\n                    <button onClick={()=>{onTargetClick()}}>\n                        <img src={attach}/>\n                    </button>\n                </div>\n                <input type=\"file\" ref={fileInputRef} onChange={onFileInputChange} className={classes.hidden}/>\n            </div>\n        </div>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n\n});\n\nexport default connect(mapStateToProps, {})(Chat);","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/empty_state_icon.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/courses.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/activities.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/programicon.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/homeicon.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/searchicon.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/notification.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/myreport.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Home/Statistic/Statistic.jsx",["494"],"import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport ProgressBar from '../../Common/ProgressBar/ProgressBar';\nimport classes from './Statistic.module.css';\nimport { useTranslation } from 'react-i18next';\n\nconst Statistic = (props) => {\n    const {t, i18n} = useTranslation();\n\n\n    let widthProgressBar = 83;\n    let heightProgressBar = 16;\n    return(\n        <div className={classes.main}>\n            <div className={classes.block + \" \" + classes.withoutPadding}>\n                <div className={classes.infoBlock}>\n                    <p>{t(\"home.statistic.infoUser.welcome\")}</p>\n                    <h3>{props.user.name}</h3>\n                </div>\n                <div className={classes.infoBlock}>\n                    <label>{t(\"home.statistic.infoUser.learningHours\")}</label>\n                    <span><strong>34 {t(\"home.statistic.infoUser.hours\")}</strong> {t(\"home.statistic.infoUser.and\")} <strong>54 {t(\"home.statistic.infoUser.mins\")}</strong></span>\n                </div>\n                <hr className={classes.line}/>\n                <div className={classes.infoBlock}>\n                    <label>{t(\"home.statistic.infoUser.learningGoal\")}</label>\n                    <span><strong>34 {t(\"home.statistic.infoUser.hours\")}</strong></span>\n                </div>\n            </div>\n            <div className={classes.block + \" \" + classes.programs}>\n                <div className={classes.programsHeader}>\n                    <h4>{t(\"home.statistic.programs.programs\")}</h4>\n                    <NavLink to=\"/programs\">{t(\"home.statistic.programs.viewAll\")}</NavLink>\n                </div>\n                <div className={classes.progressBlock}>\n                    <label>Cybersecurity</label>\n                    <div className={classes.progressContainer}>\n                        <ProgressBar width={widthProgressBar} height={heightProgressBar} progress={78}/>\n                        <span>78%</span>\n                    </div>\n                </div>\n                <div className={classes.progressBlock}>\n                    <label>Writing</label>\n                    <div className={classes.progressContainer}>\n                        <ProgressBar width={widthProgressBar} height={heightProgressBar} progress={42}/>\n                        <span>42%</span>\n                    </div>\n                </div>\n                <div className={classes.progressBlock}>\n                    <label>Information Technologies</label>\n                    <div className={classes.progressContainer}>\n                        <ProgressBar width={widthProgressBar} height={heightProgressBar} progress={60}/>\n                        <span>60%</span>\n                    </div>\n                </div>\n            </div>\n            <div className={classes.block + \" \" + classes.stats}>\n                <h4>{t(\"home.statistic.stats.stats\")}</h4>\n            </div>\n        </div>\n    );\n}\n\nexport default Statistic;","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Reports/ReportDetails/ReportDetails.jsx",["495","496"],"import React from 'react';\nimport { Link, useLocation, withRouter } from 'react-router-dom';\nimport classes from './ReportsDetails.module.css';\nimport { empty_state_icon } from '../../../Assets/Images/empty_state_icon';\nimport { searchicon } from '../../../Assets/Images/searchicon'\nimport { useTranslation } from 'react-i18next';\n\nconst ReportsDetails = (props) => {\n    const { t, i18n } = useTranslation();\n    const location = props.match.params.insight;\n    const targetTitle = location.split('_').join(' ')\n    const number = () => {\n        if (location === 'enrolled') {\n            return props.props.courses ? props.props.courses.length : 0\n        } else if (location === 'in_progress') {\n            return props.props.courses ? props.props.courses.filter((cours) => cours.courseProgress > 0).length : 0\n        } else if (location === 'pending') {\n            return props.props.activities ? props.props.activities.length : 0\n        }\n    }\n\n\n    return (\n        <div>\n            <div className={classes.reportDetailsTitle}>\n                <h3>\n                    <Link to='/report'>\n                        {t(\"reports.reportsDetails.generalInsights\")}\n                    </Link>\n                    <span className={classes.detailsItemTitle}>{` ${targetTitle}`}</span>\n                    <span className={classes.numberItems}>{` (${number()})`}</span>\n                </h3>\n                <div className={classes.reportDetailsTitleInput}>\n                    <input type=\"text\" placeholder={t(\"reports.reportsDetails.search\")} />\n                    {searchicon}\n                </div>\n            </div>\n            {location === 'pending' && number() === 0 &&\n                <div className={classes.empty}>\n                    <div className={classes.emptyIcon}>\n                        {empty_state_icon}\n                    </div>\n                    <span>{t(\"reports.reportsDetails.pendingActivities\")}</span>\n                </div>\n            }\n            {location === 'in_progress' && number() === 0 &&\n                <div className={classes.empty}>\n                    <div className={classes.emptyIcon}>\n                        {empty_state_icon}\n                    </div>\n                    <span>{t(\"reports.reportsDetails.enrolledCourses\")}</span>\n                </div>\n            }\n            {location === 'enrolled' && number() === 0 &&\n                <div className={classes.empty}>\n                    <div className={classes.emptyIcon}>\n                        {empty_state_icon}\n                    </div>\n                    <span>{t(\"reports.reportsDetails.inProgressCourses\")}</span>\n                </div>\n            }\n        </div >\n    );\n}\n\nlet WithRouterContainer = withRouter(ReportsDetails);\n\nexport default WithRouterContainer;","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Courses/CourseItemView/CourseItemView.jsx",["497","498","499"],"import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classes from './CourseItemView.module.css';\nimport { useTranslation } from 'react-i18next';\n\nconst CourseItem = (props) => {\n    const {t, i18n} = useTranslation();\n    return(\n        <div className={classes.main}>\n            <NavLink to={`/courses/${props.item.courseId}`}>\n                {(props.item.image != \"null\") ? <img src={props.item.image}/> : <div className={classes.defaultImg}></div>}\n                <div className={classes.itemInfo}>\n                    <label>{props.item.description}</label>\n                    <h2>{props.item.name}</h2>\n                    <div className={classes.itemFoot}>\n                        <span className={classes.status + \" \" + \n                            ((props.item.inProgress && classes.inProgress) ||\n                            (!props.item.inProgress && classes.completed))}>\n                                {((props.item.inProgress && t('courseMini.inProgress')) ||\n                                (!props.item.inProgress && t('courseMini.progressComplete')))}</span>\n                        <span className={classes.time}>{props.item.startingDate ? props.item.startingDate : t('courseMini.overdue')}</span>\n                    </div>\n                </div>\n                \n            </NavLink>\n        </div>\n    );\n}\n\nexport default CourseItem;","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Activites/ActivityItem/ActivityItem.jsx",["500"],"import React from 'react';\nimport classes from './ActivityItem.module.css';\nimport { clockicon } from '../../../Assets/Images/clock';\nimport { NavLink } from 'react-router-dom';\nimport ProgressBar from '../../Common/ProgressBar/ProgressBar';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\n\n\nconst StyledMain = styled.div`\n    width: ${({ width }) => 'calc(' + width + '% - 32px)'};\n    @media (max-width: 500px) {\n        width: 90%;\n    }\n`;\n\nconst StyledTimeBlock = styled.div`\n    margin-left: ${({ direction }) => direction === \"ltr\" ? \"16px\" : \"0\"};\n    margin-right: ${({ direction }) => direction === \"rtl\" ? \"16px\" : \"0\"};\n`;\n\nconst StyledTimeSpan = styled.span`\n    margin-left: ${({ direction }) => direction === \"ltr\" ? \"4px\" : \"0\"};\n    margin-right: ${({ direction }) => direction === \"rtl\" ? \"4px\" : \"0\"};\n`;\n\nconst StyledProgressSpan = styled.span`\n    margin-left: ${({ direction }) => direction === \"ltr\" ? \"14px\" : \"0\"};\n    margin-right: ${({ direction }) => direction === \"rtl\" ? \"14px\" : \"0\"};\n`;\n\nconst ActivityItem = (props) => {\n    const {t, i18n} = useTranslation();\n    let widthProgressBar = 45;\n    let heightProgressBar = 8;\n\n    const endTime = new Date(props.item.end);\n    const now = new Date();\n\n    var daysLag = Math.ceil(Math.abs(endTime.getTime() - now.getTime()) / (1000 * 3600 * 24));\n    \n    return(\n        <StyledMain className={classes.main} width={props.width}>\n            <NavLink to={`/activities/view/${props.item.activityId}`}>\n                <div className={classes.activityHeader}>\n                    <span className={classes.program}>{(!props.item.description || props.item.description === \"\") ? t(\"activityMini.empty\") : props.item.description}</span>\n                    <div className={classes.headerSide}>\n                        <span className={classes.status}>{props.item.status}</span>\n                        <StyledTimeBlock className={classes.timeBlock} direction={props.direction}>\n                            {clockicon}\n                            <StyledTimeSpan className={classes.time} direction={props.direction}>\n                                {daysLag} \n                                {endTime >= now ? <span>{t(\"activityMini.daysLeft\")}</span>\n                                                : <span>{t(\"activityMini.daysAgo\")}</span>}\n                            </StyledTimeSpan>\n                        </StyledTimeBlock>\n                    </div>\n                    \n                </div>\n                <h3>{props.item.name}</h3>\n                <div className={classes.progressBlock}>\n                    <ProgressBar width={widthProgressBar} height={heightProgressBar} progress={props.item.totalPoints}/>\n                    <StyledProgressSpan direction={props.direction}>{props.item.totalPoints}%</StyledProgressSpan>\n                </div>\n                \n            </NavLink>\n        </StyledMain>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n    direction: state.common.direction\n});\n\nexport default connect(mapStateToProps, {})(ActivityItem);","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Notifications/NotificationItem/NotificationItem.jsx",["501","502","503","504","505"],"import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport classes from './NotificationItem.module.css';\nimport { notificationicon } from '../../../Assets/Images/notification';\nimport parse from 'html-react-parser';\nimport { useTranslation } from 'react-i18next';\nimport showmoreicon from \"../../../Assets/Images/showmoreicon.svg\";\nimport NotificationModalItemMenu from '../NotificationsModal/NotificationModalItem/NotificationModalItemMenu/NotificationModalItemMenu';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst StyledItem = styled.div`\n    background-color: ${({ isRead }) => isRead ? \"white\" : \"rgba(172, 221, 213, 0.15)\"};\n`;\n\nconst StyledDiv = styled.div`\n    margin-left: ${({ direction }) => direction === \"ltr\" ? '0' : '16px'};\n    margin-right: ${({ direction }) => direction === \"rtl\" ? \"0\" : \"16px\"};\n`;\n\nconst NotificationItem = (props) => {\n    let sendTime = new Date(props.item.generated);\n    let now = new Date();\n\n    const [isOpenMenu, setIsOpenMenu] = useState(false);\n\n    const {t, i18n} = useTranslation();\n\n    useEffect(()=>{\n        if(props.isScroll){\n            setIsOpenMenu(false);\n        }\n    },[props.isScroll]);\n\n    function secondsToDhms(seconds) {\n        seconds = Number(seconds);\n        let d = Math.floor(seconds / (3600*24));\n        let h = Math.floor(seconds % (3600*24) / 3600);\n        let m = Math.floor(seconds % 3600 / 60);\n        let s = Math.floor(seconds % 60);\n        \n        let dDisplay = d > 0 ? d + (t(\"notificationItem.days\")) : \"\";\n        let hDisplay = h > 0 ? h + (t(\"notificationItem.hours\")) : \"\";\n        let mDisplay = m > 0 ? m + (t(\"notificationItem.minutes\")) : \"\";\n        let sDisplay = s > 0 ? s + (t(\"notificationItem.seconds\")) : \"\";\n\n        if(dDisplay != \"\"){\n            return dDisplay;\n        }else if(hDisplay != \"\"){\n            return hDisplay;\n        }else if(mDisplay != \"\"){\n            return mDisplay;\n        }else{\n            return sDisplay;\n        }\n    }\n\n    let agoTime = secondsToDhms((now.getTime() - sendTime.getTime()) / 1000);\n    \n    return(\n        <StyledItem className={classes.main} isRead={props.isRead}>\n            <StyledDiv className={classes.image} direction={props.direction}>\n                {notificationicon}\n            </StyledDiv>\n            <div className={classes.info}>\n                <p>{parse(props.item.text)}</p>\n                <NavLink to={`/home/notifications/${props.item.notificationId}`}>{t(\"notificationItem.link\")}</NavLink>\n                <span>{agoTime} {t(\"notificationItem.ago\")}</span>\n            </div>\n            <div className={classes.menu} onClick={()=>{setIsOpenMenu(!isOpenMenu)}}>\n                <img src={showmoreicon}/>\n                {isOpenMenu && <NotificationModalItemMenu/>}\n            </div>\n        </StyledItem>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n    direction: state.common.direction\n})\n\nexport default connect(mapStateToProps, {})(NotificationItem);","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Navbar/Submenu/Submenu.jsx",["506"],"import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classes from './Submenu.module.css';\nimport { libraryicon } from '../../../Assets/Images/library';\nimport { activitiesicon } from '../../../Assets/Images/activities.js';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\n\nconst StyledArrow = styled.div`\n    left: ${({ direction }) => direction === \"ltr\" ? '-81px' : '81px'};\n    & div{\n        left: ${({ direction }) => direction === \"ltr\" ? '-4px' : '4px'};\n    }\n`;\n\nconst StyledDropDown = styled.div`\ntransform: ${({ direction }) => direction === \"ltr\" ? 'translateX(3px)' : 'translateX(-3px)'}; \n`;\n\nconst Submenu = (props) => {\n    const {t, i18n} = useTranslation();\n    return(\n        <StyledDropDown className={classes.main} direction={props.direction}>\n            <StyledArrow className={classes.arrow  + \" \" + classes.detectClick} direction={props.direction}>\n                <div className={classes.innerArrow  + \" \" + classes.detectClick}></div>\n            </StyledArrow>\n            <div className={classes.body}>\n                <div className={classes.menuItem}>\n                    \n                    <NavLink to=\"/activities\" activeClassName={classes.active}>\n                        <div className={classes.icon}>\n                            {activitiesicon}\n                        </div>\n                        \n                        <span>{t(\"navbar.myActivities\")}</span>\n                    </NavLink>\n                </div>\n                <div className={classes.menuItem}>\n                    <NavLink to=\"/library\" activeClassName={classes.active}>\n                        <div className={classes.icon}>\n                            {libraryicon}\n                        </div>\n                        <span>{t(\"navbar.library\")}</span>\n                    </NavLink>\n                </div>\n            </div>\n        </StyledDropDown>\n        \n    );\n}\n\nlet mapStateToProps = (state) => ({\n    direction: state.common.direction\n})\n\nexport default connect(mapStateToProps, {})(Submenu);","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/planet_icon.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Activity/Chat/Message/Message.jsx",["507"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport classes from './Message.module.css';\n\nconst StyledMessage = styled.p`\n    background-color: ${({ itsMe }) => itsMe ? \"#b3dbc9\" : \"#c2c6dd\"};\n    direction: ltr;\n`;\n\nconst StyledArrow = styled.div`\n    border-top: ${({ itsMe }) => itsMe ? \"12px solid #b3dbc9\" : \"12px solid #c2c6dd\"};\n    transform: ${({ itsMe, direction }) => direction === \"ltr\" ? (itsMe ? \"rotate(-90deg)\" : \"rotate(90deg)\") : (itsMe ? \"rotate(90deg)\" : \"rotate(-90deg)\")};\n`;\n\nconst StyledMain = styled.div`\n    direction: ${({ itsMe, direction }) =>  direction === \"ltr\" ? (itsMe ? \"rtl\" : \"ltr\") : (itsMe ? \"ltr\" : \"rtl\")};\n    align-self: ${({ itsMe }) => itsMe ? \"flex-end\" : \"flex-start\"};\n`;\n\nconst StyledMessageBlock = styled.div`\n    margin-left: ${({ itsMe, direction }) => direction === \"ltr\" ? (!itsMe ? \"10px\" : \"0\") : (!itsMe ? \"0\" : \"10px\")};\n    margin-right: ${({ itsMe, direction }) => direction === \"ltr\" ? (itsMe ? \"10px\" : \"0\") : (itsMe ? \"0\" : \"10px\")};\n`;\n\nconst Message = (props) => {\n    const [userName, setUserName] = useState(\"\");\n    useEffect(()=>{\n        let firstLetter = props.message.user.name ? props.message.user.name[0] : \"\";\n        let secondLetter = props.message.user.surname ? props.message.user.surname[0] : \"\";\n        setUserName(firstLetter+secondLetter);\n    },[props.message.user]);\n\n    return(\n        <StyledMain className={classes.main} direction={props.direction} itsMe={props.message.itsMe}>\n            {props.message.user.profilePhoto ?\n            <img src={props.message.user.profilePhoto}/> : \n            <div className={classes.noPhoto}>\n                <span>{userName}</span>\n            </div>}\n            <StyledMessageBlock className={classes.message} direction={props.direction} itsMe={props.message.itsMe}>\n                <StyledArrow className={classes.arrow} direction={props.direction} itsMe={props.message.itsMe}/>\n                <StyledMessage className={classes.text} direction={props.direction} itsMe={props.message.itsMe}>{props.message.text}</StyledMessage>\n            </StyledMessageBlock>\n            \n        </StyledMain>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n    direction: state.common.direction\n})\n\nexport default connect(mapStateToProps, {})(Message);","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Notifications/NotificationsModal/NotificationsModal.jsx",["508","509"],"import React, { useEffect, useRef, useState } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport classes from './NotificationsModal.module.css';\nimport { useTranslation } from 'react-i18next';\nimport { NavLink } from 'react-router-dom';\nimport NotificationModalItem from './NotificationModalItem/NotificationModalItem';\n\n\nconst StyledModal = styled.div`\n    transform: ${({ direction, notifications }) => direction === \"ltr\" ? 'translateX(-138px)' : 'translateX(138px);' }; \n    @media screen and (max-width: 1020px){\n        transform: ${({ direction, notifications }) => direction === \"ltr\" ? 'translateX(-232px)' : 'translateX(232px);' }; \n    }\n    @media screen and (max-width: 507px){\n        transform: ${({ direction, notifications }) => direction === \"ltr\" ? 'translateX(-155px)' : 'translateX(155px);' }; \n    }\n    @media screen and (max-width: 375px){\n        transform: ${({ direction, notifications }) => direction === \"ltr\" ? 'translateX(-139px)' : 'translateX(139px);' }; \n    }\n`;\n\nconst StyledArrow = styled.div`\n    left: ${({ direction }) => direction === \"ltr\" ? \"-42px\" : \"42px\"};\n    \n    & div{\n        left: ${({ direction }) => direction === \"ltr\" ? \"-4.2px\" : \"3.5px\"};\n    }\n\n    @media screen and (max-width: 507px){\n        left: ${({ direction }) => direction === \"ltr\" ? \"-118px\" : \"118px\"};\n    }\n    @media screen and (max-width: 428px){\n        left: ${({ direction }) => direction === \"ltr\" ? \"-53px\" : \"53px\"};\n    }\n    @media screen and (max-width: 375px){\n        left: ${({ direction }) => direction === \"ltr\" ? \"-70px\" : \"70px\"};\n    }\n`;\n\n\nconst NotificationsModal = (props) => {\n    const {t, i18n} = useTranslation();\n\n    const [isScroll, setIsScroll] = useState(false);\n    const modalRef = useRef(null)\n\n    const windowRef = useRef(null);\n\n    function logit() {\n        setIsScroll(!isScroll);\n    }\n\n    useEffect(() => {\n        if(modalRef.current){\n            modalRef.current.addEventListener(\"scroll\", logit);\n        }\n        window.addEventListener(\"mousedown\",(event) => {\n            if(event.target.classList.value.includes(\"detectClick\")){\n                return\n            }\n            props.setIsOpenNotificationsModal(false)\n        })\n    }, [modalRef.current]);\n\n    let notifications = [];\n\n    if(props.notifications){\n        notifications = props.notifications.map(notification => {\n            \n            return <NotificationModalItem item={notification} key={notification.notificationId} isScroll={isScroll}/>\n        });\n    }\n    \n\n    return(\n        <StyledModal className={classes.main + \" \" + classes.detectClick} direction={props.direction} notifications={props.notifications} ref={windowRef}>\n            <StyledArrow className={classes.arrow  + \" \" + classes.detectClick} direction={props.direction}>\n                <div className={classes.innerArrow  + \" \" + classes.detectClick}></div>\n            </StyledArrow>\n            <div className={classes.body + \" \" + classes.detectClick}>\n                <div className={classes.header + \" \" + classes.detectClick}>\n                    <h3 className={classes.detectClick}>{t(\"notificationsModal.title\")}</h3>\n                    <NavLink to=\"/home/notifications\" className={classes.detectClick} onClick={()=>{props.setIsOpenNotificationsModal(false)}}>{t(\"notificationsModal.viewAll\")}</NavLink>\n                </div>\n                {(notifications.length > 0 && notifications) ? \n                    <div className={classes.notifications  + \" \" + classes.detectClick} ref={modalRef}>\n                        {notifications}\n                    </div> :\n                    <div className={classes.empty  + \" \" + classes.detectClick}>\n                        <span>{t(\"notificationsModal.empty\")}</span>\n                    </div>\n                }\n            </div>\n        </StyledModal>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n    direction: state.common.direction,\n    notifications: state.notifications.unreadNotifications\n});\n\nexport default connect(mapStateToProps, {\n\n})(NotificationsModal);","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Navbar/ProfileMenu/ProfileMenu.jsx",["510","511"],"import React, { useEffect, useReducer, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport classes from './ProfileMenu.module.css';\nimport { logout } from '../../../Redux/userReducer';\nimport { logout_icon } from '../../../Assets/Images/logout_icon';\nimport { profile_settings_icon } from '../../../Assets/Images/profile_settings_icon';\n\nconst StyledModal = styled.div`\n    direction: ${({ direction }) => direction};\n    transform: ${({ direction }) => direction === \"ltr\" ? 'translateX(-233px) translateY(25px)' : 'translateX(-73px) translateY(25px)'}; \n\n`;\nconst StyledArrow = styled.div`\n    left: ${({ direction }) => direction === \"ltr\" ? '-15px' : '25px'};\n    & div{\n        left: ${({ direction }) => direction === \"ltr\" ? '-4px' : '4px'};\n    }\n`;\n\nconst StyledMenu = styled.div`\n    span{\n        margin-left: ${({ direction }) => direction === \"ltr\" ? \"10px\" : \"0\"};\n        margin-right: ${({ direction }) => direction === \"rtl\" ? \"10px\" : \"0\"};\n    }\n`;\n\n\n\n\nconst ProfileMenu = (props) => {\n    const handleLogout = () => {\n        props.logout();\n        props.setIsOpenProfileMenu(false);\n    }\n    const linkRef = useRef(null);\n    const butRef = useRef(null);\n\n    useEffect(()=>{\n        linkRef.current.querySelector('svg').classList.add('detectClick')\n        butRef.current.querySelector('svg').classList.add('detectClick')\n        window.addEventListener(\"mousedown\", (event) => {\n            if(event.target.classList.value.includes(\"detectClick\")){\n                return;\n            }\n            props.setIsOpenProfileMenu(false);\n        })\n    },[]);\n\n    return(\n        <StyledModal className={classes.main  + \" \" + classes.detectClick} direction={props.direction}>\n            <StyledArrow className={classes.arrow  + \" \" + classes.detectClick} direction={props.direction}>\n                <div className={classes.innerArrow  + \" \" + classes.detectClick}></div>\n            </StyledArrow>\n            <StyledMenu className={classes.menu + \" \" + classes.detectClick} direction={props.direction}>\n                <div className={classes.menuItem + \" \" + classes.withBorder  + \" \" + classes.detectClick}>\n                    <NavLink ref={linkRef} to=\"/profile\" className={classes.detectClick} onClick={()=>{props.setIsOpenProfileMenu(false)}}>\n                        {profile_settings_icon}\n                        <span className={classes.detectClick}>Profile Settings</span>\n                    </NavLink>\n                </div>\n                <div className={classes.menuItem + \" \" + classes.detectClick}>\n                    <button ref={butRef} className={classes.detectClick} onClick={()=>{handleLogout()}}>\n                        {logout_icon}\n                        <span className={classes.detectClick}>Logout</span>\n                    </button>\n                </div>\n            </StyledMenu>\n        </StyledModal>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n    direction: state.common.direction\n});\n\nexport default connect(mapStateToProps, {\n    logout\n})(ProfileMenu);","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Navbar/Burger/Burger.jsx",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Common/SearchModal/SearchModal.jsx",["512","513","514","515","516","517"],"import React, { useEffect, useRef, useState } from 'react';\nimport CustomSelect from '../Cutsom/Select/CustomSelect';\nimport classes from './SearchModal.module.css';\nimport { searchicon } from '../../../Assets/Images/searchicon.js';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport { setSearchValue } from '../../../Redux/commonReducer';\n\nconst StyledModal = styled.div`\n    transform: ${({ direction }) => direction === \"ltr\" ? 'translateY(100px) translateX(-647px)' : 'translateY(100px) translateX(647px)' }; \n    @media screen and (max-width: 1000px){\n        width: 620px;\n        transform: ${({ direction }) => direction === \"ltr\" ? 'translateY(100px) translateX(-543px)' : 'translateY(100px) translateX(543px)' }; \n    }\n    @media screen and (max-width: 822px){\n        width: 520px;\n        transform: ${({ direction }) => direction === \"ltr\" ? 'translateY(100px) translateX(-443px)' : 'translateY(100px) translateX(443px)' }; \n    }\n    @media screen and (max-width: 693px){\n        width: 420px;\n        transform: ${({ direction }) => direction === \"ltr\" ? 'translateY(160px) translateX(-343px)' : 'translateY(160px) translateX(343px)' }; \n    }\n`;\n\nconst StyledArrow = styled.div`\n    left: ${({ direction }) => direction === \"ltr\" ? \"-50px\" : \"50px\"};\n    \n    & div{\n        left: ${({ direction }) => direction === \"ltr\" ? \"-4.5px\" : \"3.5px\"};\n    }\n`;\n\nconst SearchModal = (props) => {\n    const [searchValue, setSearchValue] = useState('');\n\n    let filerOne = ['Search everything', 'option1', 'option2'];\n    let filerTwo = ['By anyone', 'option1', 'option2'];\n    let filerThree = ['In all segments', 'option1', 'option2'];\n\n    const linkRef = useRef(null);\n\n    const handleSearch = () => {\n        props.setSearchValue(searchValue);\n        props.setIsOpenSearchModal(false)\n    }\n\n    useEffect(()=>{\n        linkRef.current.querySelector('svg').classList.add('detectClick')\n        window.addEventListener(\"mousedown\",(event) => {\n            if(event.target.classList.value.includes(\"detectClick\")){\n                return\n            }\n            props.setIsOpenSearchModal(false)\n        })\n    },[]);\n\n    const [filterOneValue, setFilterOneValue] = useState(filerOne[0]);\n    const [filterTwoValue, setFilterTwoValue] = useState(filerTwo[0]);\n    const [filterThreeValue, setFilterThreeValue] = useState(filerThree[0]);\n\n    return(\n        <StyledModal className={classes.main + \" \" + classes.detectClick} direction={props.direction} direction={props.direction}>\n            <StyledArrow className={classes.arrow + \" \" + classes.detectClick} direction={props.direction} direction={props.direction}>\n                <div class={classes.innerArrow + \" \" + classes.detectClick} direction={props.direction}></div>\n            </StyledArrow>\n            <div className={classes.body + \" \" + classes.detectClick} direction={props.direction}>\n                <div className={classes.searchField + \" \" + classes.detectClick} direction={props.direction}>\n                    <NavLink ref={linkRef} to={`/search?value=${searchValue}`} className={classes.detectClick} onClick={()=>{handleSearch()}}>\n                        {searchicon}\n                    </NavLink>\n                    <input placeholder=\"Search...\" name={\"value\"} className={classes.detectClick} onChange={(e)=>{setSearchValue(e.target.value)}}/>\n                </div>\n                <div className={classes.filters  + \" \" + classes.detectClick} direction={props.direction}>\n                    <CustomSelect options={filerOne} setFunction={setFilterOneValue} width={32} />\n                    <CustomSelect options={filerTwo} setFunction={setFilterTwoValue} width={32}/>\n                    <CustomSelect options={filerThree} setFunction={setFilterThreeValue} width={32}/>\n                </div>\n            </div>\n        </StyledModal>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n    direction: state.common.direction,\n    searchValue: state.common.searchValue\n});\n\nexport default connect(mapStateToProps, {\n    setSearchValue\n})(SearchModal);","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Reports/ReportMain/ReportMain.jsx",["518","519"],"import React from 'react';\nimport { Link, NavLink } from 'react-router-dom'\nimport classes from './ReportMain.module.css';\nimport { useTranslation } from 'react-i18next';\nimport Filter from '../Filter/Filter'\nimport { Chart } from \"react-google-charts\";\n\nexport default function ReportMain({ props }) {\n    const { t, i18n } = useTranslation();\n    const coursesInProgress = props.courses ? props.courses.filter((cours) => cours.courseProgress > 0).length : 0\n    const coursesIsCompleted = props.courses ? props.courses.filter((cours) => cours.isCompleted).length : 0\n    const coursesNotStarted = props.courses ? props.courses.filter((cours) => cours.courseProgress === 0).length : 0\n\n    const firstCourseDaysNumber = 1\n    const secondCourseDaysNumber = 4\n\n    return (\n        <>\n            <div className={classes.tabsBlock}>\n                <h3>\n                    {t(\"reports.insights.title\")}\n                </h3>\n                <ul className={classes.tabs}>\n                    <li>\n                        <Link className={classes.textDecorationNone} to=\"/report/enrolled\">\n                            <p className={classes.tabTitle}> {t(\"reports.insights.enrolled\")}</p>\n                            <p className={classes.tabValue}>\n                                <span>{props.courses ? props.courses.length : 0}</span>\n                                {` ${t(\"reports.insights.courses\")}`}\n                            </p>\n                        </Link>\n                    </li>\n                    <li>\n                        <Link className={classes.textDecorationNone} to=\"/report/in_progress\">\n                            <p className={classes.tabTitle}>{t(\"reports.insights.inProgress\")}</p>\n                            <p className={classes.tabValue}>\n                                <span>{coursesInProgress}</span>\n                                {` ${t(\"reports.insights.courses\")}`}\n                            </p>\n                        </Link>\n                    </li>\n                    <li>\n                        <Link className={classes.textDecorationNone} to={`/report/pending`}>\n                            <p className={classes.tabTitle}>{t(\"reports.insights.pending\")}</p>\n                            <p className={classes.tabValue}>\n                                <span>{(props.activities && props.activities.length > 0) ? props.activities.length : 0}</span>\n                                {` ${t(\"reports.insights.activities\")}`}\n                            </p>\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n            <div className={classes.graphics}>\n                <div className={classes.graphicsTitle}>\n                    <h3>{t(\"reports.overview.title\")}</h3>\n                    <Filter />\n                </div>\n                <div className={classes.overviewCharts}>\n                    <div className={classes.chart}>\n                        <Chart\n                            width={'100%'}\n                            height={'100%'}\n                            background={'#fff'}\n                            chartType=\"PieChart\"\n                            loader={<div>Loading Chart</div>}\n                            data={[\n                                ['Progress', 'How mutch'],\n                                ['Not started', coursesNotStarted],\n                                ['In progress', coursesInProgress],\n                                ['Completed', coursesIsCompleted],\n                            ]}\n                            options={{\n                                title: 'My Courses',\n                                legend: \"bottom\",\n                                chartArea: { width: '95%', height: '70%' },\n                                colors: ['#cce1f4', '#f4e6cc', '#a9d5c1'],\n                                pieSliceText: 'value',\n                                fontSize: 14,\n                                pieSliceTextStyle: { color: \"black\" },\n                                titleTextStyle: { fontSize: 16 }\n                            }}\n                        />\n                    </div>\n                    <div className={classes.chart}>\n                        <Chart\n                            chartType=\"ColumnChart\"\n                            width=\"100%\"\n                            height=\"100%\"\n                            data={[\n                                [\"Courses\", \"Days\", { role: \"style\" }],\n                                [\"Course 1\", firstCourseDaysNumber, '#f4e6cc'],\n                                [\"Course 2\", secondCourseDaysNumber, '#a9d5c1'],\n                            ]}\n                            options={{\n                                fontSize: 14,\n                                title: 'My Engagment',\n                                titleTextStyle: { fontSize: 16 },\n                                chartArea: { width: '80%', height: '70%' },\n                                bar: { groupWidth: \"85%\" },\n                                legend: { position: \"none\" },\n                                vAxes: {\n                                    0: { title: 'Days', titleTextStyle: { fontStyle: 'normal' } },\n                                }\n                            }}\n                        />\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Reports/UserInfo/UserInfo.jsx",["520"],"import React from 'react';\nimport classes from './UserInfo.module.css';\nimport { useTranslation } from 'react-i18next';\n\nconst UserInfo = (props) => {\n    const { t, i18n } = useTranslation();\n\n    return (\n        <div className={classes.main}>\n            <div className={classes.block + \" \" + classes.withoutPadding}>\n                <div className={classes.infoBlock}>\n                    <p>{t(\"home.statistic.infoUser.welcome\")}</p>\n                    <h3>{props.user.name}</h3>\n                </div>\n                <div className={classes.infoBlock}>\n                    <label>{t(\"home.statistic.infoUser.learningHours\")}</label>\n                    <span><strong>34 {t(\"home.statistic.infoUser.hours\")}</strong> {t(\"home.statistic.infoUser.and\")} <strong>54 {t(\"home.statistic.infoUser.mins\")}</strong></span>\n                </div>\n                <hr className={classes.line} />\n                <div className={classes.infoBlock}>\n                    <label>{t(\"home.statistic.infoUser.learningGoal\")}</label>\n                    <span><strong>34 {t(\"home.statistic.infoUser.hours\")}</strong></span>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default UserInfo","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Home/Courses/Courses.jsx",["521","522","523"],"import React from 'react';\nimport classes from './Courses.module.css';\nimport { coursesicon } from '../../../Assets/Images/courses';\nimport { NavLink } from 'react-router-dom';\nimport CourseItem from './CourseItem/CourseItem';\nimport { useTranslation } from 'react-i18next';\nimport { empty_state_icon } from '../../../Assets/Images/empty_state_icon';\n\nconst HomeCourses = (props) => {\n    const {t, i18n} = useTranslation();\n    let maxCoursesToView = 6;\n    let courses = [];\n    if(props.courses){\n        courses = props.courses.map((item, index) => {\n            if(index < maxCoursesToView){\n                return <CourseItem item={item} key={item.courseId}/>\n            }\n        });\n    }\n    \n    return(\n        <div className={classes.main}>\n            <div className={classes.coursesHeader}>\n                <div className={classes.coursesHeaderBlock}>\n                    {coursesicon}\n                    <span>{t('home.courses.title')}</span>\n                </div>\n                <NavLink to=\"/courses\">{t('home.courses.viewAll')}</NavLink>\n            </div>\n            <div className={classes.itemsList}>\n                {(courses.length > 0 && courses != null && courses != undefined) ? courses : \n                    <div className={classes.empty}>\n                        <div className={classes.emptyIcon}>\n                            {empty_state_icon}\n                        </div>\n                        <span>{t(\"home.courses.empty\")}</span>\n                    </div>\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default HomeCourses;","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Home/Activities/HomeActivities.jsx",["524","525","526"],"import React from 'react';\nimport classes from './HomeActivities.module.css';\nimport { activitiesicon } from '../../../Assets/Images/activities';\nimport { NavLink } from 'react-router-dom';\nimport ActivityItem from '../../Activites/ActivityItem/ActivityItem';\nimport { useTranslation } from 'react-i18next';\nimport { empty_state_icon } from '../../../Assets/Images/empty_state_icon';\n\nconst HomeActivities = (props) => {\n    const {t, i18n} = useTranslation();\n    let maxActivitiesToView = 10;\n    let blockWidth = 100;\n\n    let activities = [];\n\n    props.activities.sort(function(a,b){\n        return new Date(b.end) - new Date(a.end);\n    });\n\n    activities = props.activities.map((item, index) => {\n        if(index < maxActivitiesToView){\n            return <ActivityItem item={item} key={item.activityId} width={blockWidth}/>\n        }\n    });\n    return(\n        <div className={classes.main}>\n            <div className={classes.activitiesHeader}>\n                <div className={classes.activitiesHeaderBlock}>\n                    {activitiesicon}\n                    <span>{t(\"home.activities.title\")}</span>\n                </div>\n                <NavLink to=\"/activities\">{t(\"home.activities.viewAll\")}</NavLink>\n            </div>\n            <div className={classes.itemsList}>\n                {(activities.length > 0 && activities != null && activities != undefined) ? activities : \n                    <div className={classes.empty}>\n                        <div className={classes.emptyIcon}>\n                            {empty_state_icon}\n                        </div>\n                        <span>{t(\"home.activities.empty\")}</span>\n                    </div>\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default HomeActivities;","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/clock.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/library.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Notifications/NotificationsModal/NotificationModalItem/NotificationModalItemMenu/NotificationModalItemMenu.jsx",["527","528","529"],"import React from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport classes from './NotificationModalItemMenu.module.css';\nimport markasreadicon from '../../../../../Assets/Images/asreadicon.svg';\nimport deleteicon from '../../../../../Assets/Images/deleteicon.svg';\nimport { useTranslation } from 'react-i18next';\n\nconst StyledModal = styled.div`\n    transform: ${({ direction }) => direction === \"ltr\" ? 'translateY(0px) translateX(-166px)' : 'translateY(0px) translateX(166px);' }; \n`;\n\nconst StyledArrow = styled.div`\n    left: ${({ direction }) => direction === \"ltr\" ? \"-6px\" : \"6px\"};\n    \n    & div{\n        left: ${({ direction }) => direction === \"ltr\" ? \"-4.5px\" : \"3.5px\"};\n    }\n`;\n\nconst StyledSpan = styled.span`\n    margin-left: ${({ direction }) => direction === \"ltr\" ? \"12px\" : \"0\"};\n    margin-right: ${({ direction }) => direction === \"rtl\" ? \"12px\" : \"0\"};\n`;\n\n\nconst NotificationModalItemMenu = (props) => {\n    const {t, i18n} = useTranslation();\n\n    return(\n        <StyledModal className={classes.main   + \" \" + classes.detectClick} direction={props.direction}>\n            <StyledArrow className={classes.arrow   + \" \" + classes.detectClick} direction={props.direction}>\n                <div className={classes.innerArrow   + \" \" + classes.detectClick}></div>\n            </StyledArrow>\n            <div className={classes.body   + \" \" + classes.detectClick}>\n                <button className={classes.detectClick}>\n                    <div className={classes.image   + \" \" + classes.detectClick}>\n                        <img src={markasreadicon} className={classes.detectClick}/>\n                    </div>\n                    <StyledSpan direction={props.direction} className={classes.detectClick}>{t(\"notificationsModal.menu.asRead\")}</StyledSpan>\n                </button>\n                <button className={classes.detectClick}>\n                    <div className={classes.image  + \" \" + classes.detectClick}>\n                        <img src={deleteicon} className={classes.detectClick}/>\n                    </div>\n                    <StyledSpan direction={props.direction} className={classes.detectClick}>{t(\"notificationsModal.menu.delete\")}</StyledSpan>\n                </button>\n            </div>\n        </StyledModal>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n    direction: state.common.direction\n})\n\nexport default connect(mapStateToProps, {\n\n})(NotificationModalItemMenu);\n\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Notifications/NotificationsModal/NotificationModalItem/NotificationModalItem.jsx",["530","531","532","533","534","535"],"import React, { Fragment, useEffect, useRef, useState } from 'react';\nimport classes from './NotificationModalItem.module.css';\nimport { notificationicon } from '../../../../Assets/Images/notification.js';\nimport showmoreicon from \"../../../../Assets/Images/showmoreicon.svg\";\nimport parse from 'html-react-parser';\nimport { useTranslation } from 'react-i18next';\nimport NotificationModalItemMenu from './NotificationModalItemMenu/NotificationModalItemMenu';\n\nconst NotificationModalItem = (props) => {\n    let sendTime = new Date(props.item.generated);\n    let now = new Date();\n\n    const [isOpenMenu, setIsOpenMenu] = useState(false);\n\n    const {t, i18n} = useTranslation();\n    \n    const divRef = useRef(null);\n    const pRef = useRef(null);\n\n    useEffect(()=>{\n        divRef.current.querySelector('svg').classList.add('detectClick')\n        pRef.current.querySelector('strong').classList.add('detectClick')\n    },[]);\n\n    useEffect(()=>{\n        if(props.isScroll){\n            setIsOpenMenu(false);\n        }\n    },[props.isScroll]);\n\n    function secondsToDhms(seconds) {\n        seconds = Number(seconds);\n        let d = Math.floor(seconds / (3600*24));\n        let h = Math.floor(seconds % (3600*24) / 3600);\n        let m = Math.floor(seconds % 3600 / 60);\n        let s = Math.floor(seconds % 60);\n        \n        let dDisplay = d > 0 ? d + (t(\"notificationItem.days\")) : \"\";\n        let hDisplay = h > 0 ? h + (t(\"notificationItem.hours\")) : \"\";\n        let mDisplay = m > 0 ? m + (t(\"notificationItem.minutes\")) : \"\";\n        let sDisplay = s > 0 ? s + (t(\"notificationItem.seconds\")) : \"\";\n\n        if(dDisplay != \"\"){\n            return dDisplay;\n        }else if(hDisplay != \"\"){\n            return hDisplay;\n        }else if(mDisplay != \"\"){\n            return mDisplay;\n        }else{\n            return sDisplay;\n        }\n    }\n\n    let agoTime = secondsToDhms((now.getTime() - sendTime.getTime()) / 1000);\n\n    return(\n        <div className={classes.main  + \" \" + classes.detectClick}>\n            <div ref={divRef} className={classes.image  + \" \" + classes.detectClick}>\n                {notificationicon}\n            </div>\n            <div className={classes.info  + \" \" + classes.detectClick}>\n                <p ref={pRef} className={classes.detectClick}>{parse(props.item.text)}</p>\n                <span className={classes.detectClick}>{agoTime} {t(\"notificationItem.ago\")}</span>\n            </div>\n            <div className={classes.menu   + \" \" + classes.detectClick} onClick={()=>{setIsOpenMenu(!isOpenMenu)}}>\n                <img src={showmoreicon} className={classes.detectClick}/>\n                {isOpenMenu && <NotificationModalItemMenu/>}\n            </div>\n        </div>    \n    );\n}\n\nexport default NotificationModalItem;","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/profile_settings_icon.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/logout_icon.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Reports/Filter/Filter.jsx",["536","537"],"import React, { useEffect, useState } from 'react';\nimport classes from './Filter.module.css';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { useTranslation } from 'react-i18next';\n\nconst StyledSelect = styled.div`\n\n`;\n\nconst Filter = (props) => {\n    const { t, i18n } = useTranslation();\n\n    const [isOpenDropdown, setIsOpenDropdown] = useState(false);\n    const [isCourses, setIsCourses] = useState(false)\n    const [isActivities, setIsActivities] = useState(false)\n\n    return (\n        <StyledSelect className={classes.main} width={props.width}>\n            <input hidden type=\"checkout\" defaultValue={isOpenDropdown} checked={isOpenDropdown} />\n            <div className={classes.view} onClick={() => setIsOpenDropdown(!isOpenDropdown)}>\n                <span> {t(\"filterReports.filter\")} </span>\n                <div className={classes.arrow + \" \" + (isOpenDropdown && classes.open)}></div>\n            </div>\n            {isOpenDropdown &&\n                <div className={classes.dropdown + \" \" + (isOpenDropdown && classes.openDropdown)}>\n                    <span className={`${classes.option} ${classes.margin0}`}>\n                        {t(\"filterReports.filteredBy\")}\n                    </span>\n                    <div onClick={() => setIsCourses(!isCourses)} className={`${classes.margin0} ${classes.filter}`}>\n                        <span className={classes.filterText}>{t(\"filterReports.courses\")}</span>\n                        <input type=\"checkbox\" checked={isCourses} value={isCourses}  defaultChecked={isCourses} defaultValue={isCourses}/>\n                        <span className={classes.checkmark}></span>\n                    </div>\n                    <div onClick={() => setIsActivities(!isActivities)} className={`${classes.margin0} ${classes.filter}`}>\n                        <span className={classes.filterText}>{t(\"filterReports.activities\")}</span>\n                        <input type=\"checkbox\" checked={isActivities} value={isActivities}  defaultChecked={isActivities} defaultValue={isActivities}/>\n                        <span className={classes.checkmark}></span>\n                    </div>\n                </div>}\n        </StyledSelect>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n    direction: state.common.direction\n});\n\nexport default connect(mapStateToProps, null)(Filter);","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Navbar/Burger/BurgerMenu.jsx",["538","539"],"import React from 'react';\nimport styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport classes from '../Navbar.module.css';\nimport { useTranslation } from 'react-i18next';\nimport {planeticon} from '../../../Assets/Images/planet_icon'\n\nconst Menu = styled.div`\n    width: 100%;\n    height: 100vh;\n    transform: ${({ open }) => open ? 'translateX(0)' : 'translateX(100%)'};\n    position: fixed;\n    top: 0;\n    left: 0;\n    background-color: #59bcabe3;\n    transition-duration: 0.4s;\n    z-index: 100;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    a{\n        font-size: 35px;\n    }\n    a.active{\n        color: white;\n    }\n\n`;\n\n\nconst BurgerMenu = ({open, setOpen, changeLanguage, language, currentLanguage}) => {\n    const {t, i18n} = useTranslation();\n    return(\n        <Menu open={open}>\n            <nav className={\"nav\"}>\n                <div className={classes.menuItem}>\n                    <NavLink to=\"/home\" activeClassName={\"active\"} onClick={()=>{setOpen(false)}}>{t(\"navbar.home\")}</NavLink>\n                </div>\n                <div className={classes.menuItem}>\n                    <NavLink to=\"/programs\" activeClassName={\"active\"} onClick={()=>{setOpen(false)}}>{t(\"navbar.programs\")}</NavLink>\n                </div>\n                <div className={classes.menuItem}>\n                    <NavLink to=\"/courses\" activeClassName={\"active\"} onClick={()=>{setOpen(false)}}>{t(\"navbar.courses\")}</NavLink>\n                </div>\n                <div className={classes.menuItem}>\n                    <NavLink to=\"/activities\" activeClassName={\"active\"} onClick={()=>{setOpen(false)}}>{t(\"navbar.activities\")}</NavLink>\n                </div>\n                <div className={classes.menuItem}>\n                    <NavLink to=\"/library\" activeClassName={\"active\"} onClick={()=>{setOpen(false)}}>{t(\"navbar.library\")}</NavLink>\n                </div>\n                <div className={classes.menuItem}>\n                    <NavLink to=\"/report\" activeClassName={\"active\"} onClick={()=>{setOpen(false)}}>{t(\"navbar.myreport\")}</NavLink>\n                </div>\n                <div className={classes.langBurgerMenu}>\n                    <button onClick={()=>{changeLanguage(language())}}>\n                            <span className={currentLanguage === \"en\" ? classes.langBurgerMenuActive : \"\"}>\n                                EN\n                            </span>\n                            <span className={currentLanguage === \"ar\" ? classes.langBurgerMenuActive : \"\"}>\n                                AR\n                            </span>\n                    </button>\n                </div>\n            </nav>\n        </Menu>\n    )\n    \n}\n\nexport default BurgerMenu;","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Home/Courses/CourseItem/CourseItem.jsx",["540","541","542"],"import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classes from './CourseItem.module.css';\nimport { useTranslation } from 'react-i18next';\n\n\nconst CourseItem = (props) => {\n    const {t, i18n} = useTranslation();\n\n    return(\n        <div className={classes.main}>\n            <NavLink to={`/courses/${props.item.courseId}`}>\n                {(props.item.image != \"null\") ? <img src={props.item.image}/> : <div className={classes.defaultImg}></div>}\n                \n                <div className={classes.itemInfo}>\n                    <label>{props.item.description}</label>\n                    <h2>{props.item.name}</h2>\n                    <div className={classes.itemFoot}>\n                        <span className={classes.status + \" \" + \n                            ((props.item.inProgress && classes.inProgress) ||\n                            (!props.item.inProgress && classes.completed))}>\n                                {((props.item.inProgress && t('courseMini.inProgress')) ||\n                                (!props.item.inProgress && t('courseMini.progressComplete')))}</span>\n                        <span className={classes.time}>{props.item.startingDate ? props.item.startingDate : t('courseMini.overdue')}</span>\n                    </div>\n                </div>\n                \n            </NavLink>\n        </div>\n    );\n}\n\nexport default CourseItem;",{"ruleId":"543","replacedBy":"544"},{"ruleId":"545","replacedBy":"546"},{"ruleId":"547","severity":1,"message":"548","line":32,"column":11,"nodeType":"549","messageId":"550","endLine":32,"endColumn":12},{"ruleId":"551","severity":1,"message":"552","line":8,"column":13,"nodeType":"553","endLine":8,"endColumn":35},{"ruleId":"547","severity":1,"message":"554","line":2,"column":8,"nodeType":"549","messageId":"550","endLine":2,"endColumn":12},{"ruleId":"547","severity":1,"message":"555","line":3,"column":8,"nodeType":"549","messageId":"550","endLine":3,"endColumn":12},{"ruleId":"556","severity":1,"message":"557","line":12,"column":7,"nodeType":"558","endLine":12,"endColumn":9,"suggestions":"559"},{"ruleId":"547","severity":1,"message":"560","line":1,"column":28,"nodeType":"549","messageId":"550","endLine":1,"endColumn":36},{"ruleId":"547","severity":1,"message":"561","line":6,"column":8,"nodeType":"549","messageId":"550","endLine":6,"endColumn":13},{"ruleId":"556","severity":1,"message":"562","line":21,"column":7,"nodeType":"558","endLine":21,"endColumn":19,"suggestions":"563"},{"ruleId":"556","severity":1,"message":"564","line":25,"column":7,"nodeType":"558","endLine":25,"endColumn":33,"suggestions":"565"},{"ruleId":"547","severity":1,"message":"560","line":1,"column":28,"nodeType":"549","messageId":"550","endLine":1,"endColumn":36},{"ruleId":"556","severity":1,"message":"557","line":13,"column":7,"nodeType":"558","endLine":13,"endColumn":30,"suggestions":"566"},{"ruleId":"556","severity":1,"message":"557","line":17,"column":7,"nodeType":"558","endLine":17,"endColumn":33,"suggestions":"567"},{"ruleId":"547","severity":1,"message":"560","line":1,"column":28,"nodeType":"549","messageId":"550","endLine":1,"endColumn":36},{"ruleId":"556","severity":1,"message":"557","line":14,"column":7,"nodeType":"558","endLine":14,"endColumn":30,"suggestions":"568"},{"ruleId":"556","severity":1,"message":"557","line":18,"column":7,"nodeType":"558","endLine":18,"endColumn":33,"suggestions":"569"},{"ruleId":"556","severity":1,"message":"557","line":13,"column":7,"nodeType":"558","endLine":13,"endColumn":42,"suggestions":"570"},{"ruleId":"571","severity":1,"message":"572","line":21,"column":30,"nodeType":"573","messageId":"574","endLine":21,"endColumn":32},{"ruleId":"571","severity":1,"message":"572","line":21,"column":64,"nodeType":"573","messageId":"574","endLine":21,"endColumn":66},{"ruleId":"556","severity":1,"message":"557","line":13,"column":7,"nodeType":"558","endLine":13,"endColumn":30,"suggestions":"575"},{"ruleId":"556","severity":1,"message":"557","line":10,"column":7,"nodeType":"558","endLine":10,"endColumn":42,"suggestions":"576"},{"ruleId":"547","severity":1,"message":"577","line":12,"column":15,"nodeType":"549","messageId":"550","endLine":12,"endColumn":19},{"ruleId":"556","severity":1,"message":"557","line":13,"column":7,"nodeType":"558","endLine":13,"endColumn":9,"suggestions":"578"},{"ruleId":"547","severity":1,"message":"579","line":8,"column":12,"nodeType":"549","messageId":"550","endLine":8,"endColumn":23},{"ruleId":"547","severity":1,"message":"580","line":8,"column":25,"nodeType":"549","messageId":"550","endLine":8,"endColumn":39},{"ruleId":"556","severity":1,"message":"557","line":43,"column":7,"nodeType":"558","endLine":43,"endColumn":9,"suggestions":"581"},{"ruleId":"547","severity":1,"message":"577","line":14,"column":15,"nodeType":"549","messageId":"550","endLine":14,"endColumn":19},{"ruleId":"547","severity":1,"message":"577","line":44,"column":15,"nodeType":"549","messageId":"550","endLine":44,"endColumn":19},{"ruleId":"556","severity":1,"message":"557","line":48,"column":7,"nodeType":"558","endLine":48,"endColumn":9,"suggestions":"582"},{"ruleId":"547","severity":1,"message":"577","line":13,"column":15,"nodeType":"549","messageId":"550","endLine":13,"endColumn":19},{"ruleId":"547","severity":1,"message":"577","line":41,"column":15,"nodeType":"549","messageId":"550","endLine":41,"endColumn":19},{"ruleId":"556","severity":1,"message":"557","line":49,"column":7,"nodeType":"558","endLine":49,"endColumn":9,"suggestions":"583"},{"ruleId":"547","severity":1,"message":"584","line":1,"column":17,"nodeType":"549","messageId":"550","endLine":1,"endColumn":28},{"ruleId":"547","severity":1,"message":"585","line":7,"column":20,"nodeType":"549","messageId":"550","endLine":7,"endColumn":23},{"ruleId":"547","severity":1,"message":"577","line":22,"column":15,"nodeType":"549","messageId":"550","endLine":22,"endColumn":19},{"ruleId":"547","severity":1,"message":"586","line":30,"column":9,"nodeType":"549","messageId":"550","endLine":30,"endColumn":35},{"ruleId":"547","severity":1,"message":"587","line":31,"column":9,"nodeType":"549","messageId":"550","endLine":31,"endColumn":39},{"ruleId":"547","severity":1,"message":"588","line":59,"column":9,"nodeType":"549","messageId":"550","endLine":59,"endColumn":27},{"ruleId":"551","severity":1,"message":"552","line":166,"column":29,"nodeType":"553","endLine":166,"endColumn":52},{"ruleId":"547","severity":1,"message":"577","line":190,"column":15,"nodeType":"549","messageId":"550","endLine":190,"endColumn":19},{"ruleId":"547","severity":1,"message":"589","line":191,"column":12,"nodeType":"549","messageId":"550","endLine":191,"endColumn":16},{"ruleId":"547","severity":1,"message":"590","line":192,"column":12,"nodeType":"549","messageId":"550","endLine":192,"endColumn":22},{"ruleId":"547","severity":1,"message":"591","line":3,"column":8,"nodeType":"549","messageId":"550","endLine":3,"endColumn":19},{"ruleId":"547","severity":1,"message":"592","line":25,"column":7,"nodeType":"549","messageId":"550","endLine":25,"endColumn":25},{"ruleId":"547","severity":1,"message":"577","line":31,"column":15,"nodeType":"549","messageId":"550","endLine":31,"endColumn":19},{"ruleId":"547","severity":1,"message":"593","line":32,"column":9,"nodeType":"549","messageId":"550","endLine":32,"endColumn":25},{"ruleId":"547","severity":1,"message":"594","line":33,"column":9,"nodeType":"549","messageId":"550","endLine":33,"endColumn":26},{"ruleId":"556","severity":1,"message":"557","line":40,"column":7,"nodeType":"558","endLine":40,"endColumn":9,"suggestions":"595"},{"ruleId":"556","severity":1,"message":"596","line":58,"column":7,"nodeType":"558","endLine":58,"endColumn":23,"suggestions":"597"},{"ruleId":"547","severity":1,"message":"577","line":23,"column":15,"nodeType":"549","messageId":"550","endLine":23,"endColumn":19},{"ruleId":"547","severity":1,"message":"586","line":31,"column":9,"nodeType":"549","messageId":"550","endLine":31,"endColumn":35},{"ruleId":"547","severity":1,"message":"587","line":32,"column":9,"nodeType":"549","messageId":"550","endLine":32,"endColumn":39},{"ruleId":"547","severity":1,"message":"588","line":61,"column":9,"nodeType":"549","messageId":"550","endLine":61,"endColumn":27},{"ruleId":"551","severity":1,"message":"552","line":170,"column":29,"nodeType":"553","endLine":170,"endColumn":52},{"ruleId":"547","severity":1,"message":"577","line":199,"column":15,"nodeType":"549","messageId":"550","endLine":199,"endColumn":19},{"ruleId":"547","severity":1,"message":"589","line":200,"column":12,"nodeType":"549","messageId":"550","endLine":200,"endColumn":16},{"ruleId":"547","severity":1,"message":"590","line":202,"column":12,"nodeType":"549","messageId":"550","endLine":202,"endColumn":22},{"ruleId":"556","severity":1,"message":"557","line":209,"column":7,"nodeType":"558","endLine":209,"endColumn":9,"suggestions":"598"},{"ruleId":"599","severity":1,"message":"600","line":10,"column":21,"nodeType":"601","messageId":"602","endLine":10,"endColumn":22,"suggestions":"603"},{"ruleId":"547","severity":1,"message":"577","line":18,"column":15,"nodeType":"549","messageId":"550","endLine":18,"endColumn":19},{"ruleId":"547","severity":1,"message":"604","line":1,"column":17,"nodeType":"549","messageId":"550","endLine":1,"endColumn":26},{"ruleId":"547","severity":1,"message":"560","line":1,"column":28,"nodeType":"549","messageId":"550","endLine":1,"endColumn":36},{"ruleId":"547","severity":1,"message":"577","line":13,"column":15,"nodeType":"549","messageId":"550","endLine":13,"endColumn":19},{"ruleId":"547","severity":1,"message":"604","line":1,"column":17,"nodeType":"549","messageId":"550","endLine":1,"endColumn":26},{"ruleId":"547","severity":1,"message":"560","line":1,"column":28,"nodeType":"549","messageId":"550","endLine":1,"endColumn":36},{"ruleId":"547","severity":1,"message":"577","line":14,"column":15,"nodeType":"549","messageId":"550","endLine":14,"endColumn":19},{"ruleId":"547","severity":1,"message":"605","line":2,"column":10,"nodeType":"549","messageId":"550","endLine":2,"endColumn":17},{"ruleId":"547","severity":1,"message":"577","line":9,"column":15,"nodeType":"549","messageId":"550","endLine":9,"endColumn":19},{"ruleId":"606","severity":1,"message":"607","line":14,"column":55,"nodeType":"608","messageId":"609","endLine":14,"endColumn":57},{"ruleId":"606","severity":1,"message":"607","line":20,"column":52,"nodeType":"608","messageId":"609","endLine":20,"endColumn":54},{"ruleId":"551","severity":1,"message":"552","line":36,"column":29,"nodeType":"553","endLine":36,"endColumn":56},{"ruleId":"547","severity":1,"message":"577","line":16,"column":15,"nodeType":"549","messageId":"550","endLine":16,"endColumn":19},{"ruleId":"547","severity":1,"message":"560","line":1,"column":17,"nodeType":"549","messageId":"550","endLine":1,"endColumn":25},{"ruleId":"547","severity":1,"message":"577","line":13,"column":16,"nodeType":"549","messageId":"550","endLine":13,"endColumn":20},{"ruleId":"606","severity":1,"message":"610","line":19,"column":43,"nodeType":"608","messageId":"611","endLine":19,"endColumn":45},{"ruleId":"571","severity":1,"message":"572","line":54,"column":75,"nodeType":"573","messageId":"574","endLine":54,"endColumn":77},{"ruleId":"547","severity":1,"message":"560","line":1,"column":17,"nodeType":"549","messageId":"550","endLine":1,"endColumn":25},{"ruleId":"547","severity":1,"message":"577","line":13,"column":16,"nodeType":"549","messageId":"550","endLine":13,"endColumn":20},{"ruleId":"571","severity":1,"message":"572","line":54,"column":99,"nodeType":"573","messageId":"574","endLine":54,"endColumn":101},{"ruleId":"547","severity":1,"message":"577","line":43,"column":15,"nodeType":"549","messageId":"550","endLine":43,"endColumn":19},{"ruleId":"551","severity":1,"message":"552","line":136,"column":25,"nodeType":"553","endLine":136,"endColumn":91},{"ruleId":"547","severity":1,"message":"577","line":13,"column":15,"nodeType":"549","messageId":"550","endLine":13,"endColumn":19},{"ruleId":"556","severity":1,"message":"557","line":32,"column":7,"nodeType":"558","endLine":32,"endColumn":19,"suggestions":"612"},{"ruleId":"551","severity":1,"message":"552","line":43,"column":21,"nodeType":"553","endLine":43,"endColumn":156},{"ruleId":"551","severity":1,"message":"552","line":44,"column":21,"nodeType":"553","endLine":44,"endColumn":72},{"ruleId":"547","severity":1,"message":"577","line":7,"column":15,"nodeType":"549","messageId":"550","endLine":7,"endColumn":19},{"ruleId":"547","severity":1,"message":"577","line":11,"column":15,"nodeType":"549","messageId":"550","endLine":11,"endColumn":19},{"ruleId":"556","severity":1,"message":"557","line":17,"column":7,"nodeType":"558","endLine":17,"endColumn":9,"suggestions":"613"},{"ruleId":"547","severity":1,"message":"577","line":13,"column":15,"nodeType":"549","messageId":"550","endLine":13,"endColumn":19},{"ruleId":"556","severity":1,"message":"557","line":19,"column":7,"nodeType":"558","endLine":19,"endColumn":9,"suggestions":"614"},{"ruleId":"551","severity":1,"message":"552","line":37,"column":17,"nodeType":"553","endLine":37,"endColumn":169},{"ruleId":"547","severity":1,"message":"615","line":57,"column":7,"nodeType":"549","messageId":"550","endLine":57,"endColumn":22},{"ruleId":"547","severity":1,"message":"577","line":10,"column":15,"nodeType":"549","messageId":"550","endLine":10,"endColumn":19},{"ruleId":"551","severity":1,"message":"552","line":20,"column":17,"nodeType":"553","endLine":20,"endColumn":36},{"ruleId":"551","severity":1,"message":"552","line":22,"column":17,"nodeType":"553","endLine":22,"endColumn":37},{"ruleId":"556","severity":1,"message":"616","line":19,"column":7,"nodeType":"558","endLine":19,"endColumn":9,"suggestions":"617"},{"ruleId":"547","severity":1,"message":"577","line":10,"column":15,"nodeType":"549","messageId":"550","endLine":10,"endColumn":19},{"ruleId":"547","severity":1,"message":"618","line":13,"column":12,"nodeType":"549","messageId":"550","endLine":13,"endColumn":16},{"ruleId":"551","severity":1,"message":"552","line":68,"column":25,"nodeType":"553","endLine":68,"endColumn":42},{"ruleId":"551","severity":1,"message":"552","line":71,"column":25,"nodeType":"553","endLine":71,"endColumn":44},{"ruleId":"547","severity":1,"message":"577","line":8,"column":15,"nodeType":"549","messageId":"550","endLine":8,"endColumn":19},{"ruleId":"547","severity":1,"message":"619","line":2,"column":16,"nodeType":"549","messageId":"550","endLine":2,"endColumn":27},{"ruleId":"547","severity":1,"message":"577","line":9,"column":16,"nodeType":"549","messageId":"550","endLine":9,"endColumn":20},{"ruleId":"547","severity":1,"message":"577","line":7,"column":15,"nodeType":"549","messageId":"550","endLine":7,"endColumn":19},{"ruleId":"571","severity":1,"message":"572","line":11,"column":36,"nodeType":"573","messageId":"574","endLine":11,"endColumn":38},{"ruleId":"551","severity":1,"message":"552","line":11,"column":49,"nodeType":"553","endLine":11,"endColumn":78},{"ruleId":"547","severity":1,"message":"577","line":34,"column":15,"nodeType":"549","messageId":"550","endLine":34,"endColumn":19},{"ruleId":"547","severity":1,"message":"577","line":27,"column":15,"nodeType":"549","messageId":"550","endLine":27,"endColumn":19},{"ruleId":"571","severity":1,"message":"572","line":47,"column":21,"nodeType":"573","messageId":"574","endLine":47,"endColumn":23},{"ruleId":"571","severity":1,"message":"572","line":49,"column":27,"nodeType":"573","messageId":"574","endLine":49,"endColumn":29},{"ruleId":"571","severity":1,"message":"572","line":51,"column":27,"nodeType":"573","messageId":"574","endLine":51,"endColumn":29},{"ruleId":"551","severity":1,"message":"552","line":71,"column":17,"nodeType":"553","endLine":71,"endColumn":42},{"ruleId":"547","severity":1,"message":"577","line":22,"column":15,"nodeType":"549","messageId":"550","endLine":22,"endColumn":19},{"ruleId":"551","severity":1,"message":"552","line":37,"column":13,"nodeType":"553","endLine":37,"endColumn":57},{"ruleId":"547","severity":1,"message":"577","line":43,"column":15,"nodeType":"549","messageId":"550","endLine":43,"endColumn":19},{"ruleId":"556","severity":1,"message":"620","line":64,"column":8,"nodeType":"558","endLine":64,"endColumn":26,"suggestions":"621"},{"ruleId":"547","severity":1,"message":"622","line":1,"column":28,"nodeType":"549","messageId":"550","endLine":1,"endColumn":38},{"ruleId":"556","severity":1,"message":"557","line":49,"column":7,"nodeType":"558","endLine":49,"endColumn":9,"suggestions":"623"},{"ruleId":"556","severity":1,"message":"557","line":56,"column":7,"nodeType":"558","endLine":56,"endColumn":9,"suggestions":"624"},{"ruleId":"547","severity":1,"message":"625","line":58,"column":12,"nodeType":"549","messageId":"550","endLine":58,"endColumn":26},{"ruleId":"547","severity":1,"message":"626","line":59,"column":12,"nodeType":"549","messageId":"550","endLine":59,"endColumn":26},{"ruleId":"547","severity":1,"message":"627","line":60,"column":12,"nodeType":"549","messageId":"550","endLine":60,"endColumn":28},{"ruleId":"628","severity":1,"message":"629","line":63,"column":103,"nodeType":"630","endLine":63,"endColumn":130},{"ruleId":"628","severity":1,"message":"629","line":64,"column":108,"nodeType":"630","endLine":64,"endColumn":135},{"ruleId":"547","severity":1,"message":"631","line":2,"column":16,"nodeType":"549","messageId":"550","endLine":2,"endColumn":23},{"ruleId":"547","severity":1,"message":"577","line":9,"column":16,"nodeType":"549","messageId":"550","endLine":9,"endColumn":20},{"ruleId":"547","severity":1,"message":"577","line":6,"column":16,"nodeType":"549","messageId":"550","endLine":6,"endColumn":20},{"ruleId":"547","severity":1,"message":"577","line":10,"column":15,"nodeType":"549","messageId":"550","endLine":10,"endColumn":19},{"ruleId":"606","severity":1,"message":"607","line":14,"column":51,"nodeType":"608","messageId":"609","endLine":14,"endColumn":53},{"ruleId":"571","severity":1,"message":"572","line":31,"column":68,"nodeType":"573","messageId":"574","endLine":31,"endColumn":70},{"ruleId":"547","severity":1,"message":"577","line":10,"column":15,"nodeType":"549","messageId":"550","endLine":10,"endColumn":19},{"ruleId":"606","severity":1,"message":"607","line":20,"column":53,"nodeType":"608","messageId":"609","endLine":20,"endColumn":55},{"ruleId":"571","severity":1,"message":"572","line":35,"column":77,"nodeType":"573","messageId":"574","endLine":35,"endColumn":79},{"ruleId":"547","severity":1,"message":"577","line":28,"column":15,"nodeType":"549","messageId":"550","endLine":28,"endColumn":19},{"ruleId":"551","severity":1,"message":"552","line":38,"column":25,"nodeType":"553","endLine":38,"endColumn":84},{"ruleId":"551","severity":1,"message":"552","line":44,"column":25,"nodeType":"553","endLine":44,"endColumn":80},{"ruleId":"547","severity":1,"message":"632","line":1,"column":17,"nodeType":"549","messageId":"550","endLine":1,"endColumn":25},{"ruleId":"547","severity":1,"message":"577","line":15,"column":15,"nodeType":"549","messageId":"550","endLine":15,"endColumn":19},{"ruleId":"571","severity":1,"message":"572","line":43,"column":21,"nodeType":"573","messageId":"574","endLine":43,"endColumn":23},{"ruleId":"571","severity":1,"message":"572","line":45,"column":27,"nodeType":"573","messageId":"574","endLine":45,"endColumn":29},{"ruleId":"571","severity":1,"message":"572","line":47,"column":27,"nodeType":"573","messageId":"574","endLine":47,"endColumn":29},{"ruleId":"551","severity":1,"message":"552","line":66,"column":17,"nodeType":"553","endLine":66,"endColumn":74},{"ruleId":"547","severity":1,"message":"604","line":1,"column":17,"nodeType":"549","messageId":"550","endLine":1,"endColumn":26},{"ruleId":"547","severity":1,"message":"577","line":12,"column":16,"nodeType":"549","messageId":"550","endLine":12,"endColumn":20},{"ruleId":"547","severity":1,"message":"633","line":6,"column":9,"nodeType":"549","messageId":"550","endLine":6,"endColumn":19},{"ruleId":"547","severity":1,"message":"577","line":33,"column":15,"nodeType":"549","messageId":"550","endLine":33,"endColumn":19},{"ruleId":"547","severity":1,"message":"577","line":8,"column":15,"nodeType":"549","messageId":"550","endLine":8,"endColumn":19},{"ruleId":"571","severity":1,"message":"572","line":13,"column":36,"nodeType":"573","messageId":"574","endLine":13,"endColumn":38},{"ruleId":"551","severity":1,"message":"552","line":13,"column":49,"nodeType":"553","endLine":13,"endColumn":78},"no-native-reassign",["634"],"no-negated-in-lhs",["635"],"no-unused-vars","'t' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'img1' is defined but never used.","'img2' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["636"],"'useState' is defined but never used.","'Login' is defined but never used.","React Hook useEffect has missing dependencies: 'getProfile', 'getUnreadNotifications', 'getUserProfile', 'isStartData', 'limit', and 'user.organizationId'. Either include them or remove the dependency array. If 'getUnreadNotifications' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["637"],"React Hook useEffect has a missing dependency: 'setCurrentRoute'. Either include it or remove the dependency array. Outer scope values like 'window.location.pathname' aren't valid dependencies because mutating them doesn't re-render the component.",["638"],["639"],["640"],["641"],["642"],["643"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["644"],["645"],"'i18n' is assigned a value but never used.",["646"],"'searchValue' is assigned a value but never used.","'setSearchValue' is assigned a value but never used.",["647"],["648"],["649"],"'useCallback' is defined but never used.","'foo' is defined but never used.","'disableDefSupervisorOption' is assigned a value but never used.","'disableDefSupervisorOptionText' is assigned a value but never used.","'supervisorsOptions' is assigned a value but never used.","'type' is assigned a value but never used.","'supervisor' is assigned a value but never used.","'ProgressBar' is defined but never used.","'StyledProgressSpan' is assigned a value but never used.","'widthProgressBar' is assigned a value but never used.","'heightProgressBar' is assigned a value but never used.",["650"],"React Hook useEffect has a missing dependency: 't'. Either include it or remove the dependency array.",["651"],["652"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["653","654"],"'useEffect' is defined but never used.","'connect' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","expectedInside",["655"],["656"],["657"],"'ProfilePassword' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'input'. Either include it or remove the dependency array.",["658"],"'file' is assigned a value but never used.","'useLocation' is defined but never used.","React Hook useEffect has missing dependencies: 'logit' and 'props'. Either include them or remove the dependency array. Mutable values like 'modalRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["659"],"'useReducer' is defined but never used.",["660"],["661"],"'filterOneValue' is assigned a value but never used.","'filterTwoValue' is assigned a value but never used.","'filterThreeValue' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'NavLink' is defined but never used.","'Fragment' is defined but never used.","'planeticon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"662","fix":"663"},{"desc":"664","fix":"665"},{"desc":"666","fix":"667"},{"desc":"668","fix":"669"},{"desc":"670","fix":"671"},{"desc":"668","fix":"672"},{"desc":"670","fix":"673"},{"desc":"674","fix":"675"},{"desc":"668","fix":"676"},{"desc":"677","fix":"678"},{"desc":"662","fix":"679"},{"desc":"662","fix":"680"},{"desc":"662","fix":"681"},{"desc":"662","fix":"682"},{"desc":"662","fix":"683"},{"desc":"684","fix":"685"},{"desc":"662","fix":"686"},{"messageId":"687","fix":"688","desc":"689"},{"messageId":"690","fix":"691","desc":"692"},{"desc":"693","fix":"694"},{"desc":"662","fix":"695"},{"desc":"662","fix":"696"},{"desc":"697","fix":"698"},{"desc":"699","fix":"700"},{"desc":"662","fix":"701"},{"desc":"662","fix":"702"},"Update the dependencies array to be: [props]",{"range":"703","text":"704"},"Update the dependencies array to be: [employeeId, getProfile, getUnreadNotifications, getUserProfile, isStartData, limit, user.organizationId]",{"range":"705","text":"706"},"Update the dependencies array to be: [setCurrentRoute]",{"range":"707","text":"708"},"Update the dependencies array to be: [props, props.user.employeeId]",{"range":"709","text":"710"},"Update the dependencies array to be: [props, props.user.joinedCourses]",{"range":"711","text":"712"},{"range":"713","text":"710"},{"range":"714","text":"712"},"Update the dependencies array to be: [props, props.currentPage, props.pageSize]",{"range":"715","text":"716"},{"range":"717","text":"710"},"Update the dependencies array to be: [props.pageSize, props.currentPage, props]",{"range":"718","text":"719"},{"range":"720","text":"704"},{"range":"721","text":"704"},{"range":"722","text":"704"},{"range":"723","text":"704"},{"range":"724","text":"704"},"Update the dependencies array to be: [props.activity, t]",{"range":"725","text":"726"},{"range":"727","text":"704"},"removeEscape",{"range":"728","text":"729"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"730","text":"731"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [props, props.user]",{"range":"732","text":"733"},{"range":"734","text":"704"},{"range":"735","text":"704"},"Update the dependencies array to be: [input]",{"range":"736","text":"737"},"Update the dependencies array to be: [logit, props]",{"range":"738","text":"739"},{"range":"740","text":"704"},{"range":"741","text":"704"},[430,432],"[props]",[985,997],"[employeeId, getProfile, getUnreadNotifications, getUserProfile, isStartData, limit, user.organizationId]",[1078,1104],"[setCurrentRoute]",[520,543],"[props, props.user.employeeId]",[631,657],"[props, props.user.joinedCourses]",[530,553],[641,667],[546,581],"[props, props.currentPage, props.pageSize]",[506,529],[388,423],"[props.pageSize, props.currentPage, props]",[443,445],[1342,1344],[2196,2198],[2150,2152],[1631,1633],[2211,2227],"[props.activity, t]",[8897,8899],[202,203],"",[202,202],"\\",[1064,1076],"[props, props.user]",[605,607],[707,709],[612,614],"[input]",[2261,2279],"[logit, props]",[1677,1679],[2207,2209]]