[{"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/index.js":"1","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/reportWebVitals.js":"2","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Utils/i18n.js":"3","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/App.js":"4","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Utils/validators.js":"5","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/empty_state_icon.js":"6","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/courses.js":"7","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/activities.js":"8","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/programicon.js":"9","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/homeicon.js":"10","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/searchicon.js":"11","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/notification.js":"12","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/myreport.js":"13","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/planet_icon.js":"14","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/clock.js":"15","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/library.js":"16","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/profile_settings_icon.js":"17","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/logout_icon.js":"18","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Store/reduxStore.js":"19","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Store/Reducers/common.js":"20","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Store/Reducers/user.js":"21","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Store/Reducers/activities.js":"22","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Store/Reducers/courses.js":"23","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Store/Reducers/programs.js":"24","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Store/Reducers/notifications.js":"25","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Courses/CoursesContainer.jsx":"26","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Home/HomeContainer.jsx":"27","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Navbar/NavbarContainer.jsx":"28","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Reports/ReportsContainer.jsx":"29","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Programs/ProgramsContainer.jsx":"30","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Lessons/LessonsContainer.jsx":"31","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Notifications/NotificationsContainer.jsx":"32","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Profile/Profile.jsx":"33","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/SearchResult/SearchResultContainer.jsx":"34","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Auth/Login/Login.jsx":"35","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Auth/Forgot/ForgotPassword.jsx":"36","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Courses/Courses.jsx":"37","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Home/Home.jsx":"38","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Navbar/Navbar.jsx":"39","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Reports/Reports.jsx":"40","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/SearchResult/SearchResult.jsx":"41","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Notifications/Notifications.jsx":"42","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Lessons/Lessons.jsx":"43","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Programs/Programs.jsx":"44","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Profile/Notifications/ProfileNotifications.jsx":"45","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Profile/Password/ProfilePassword.jsx":"46","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Profile/Email/ProfileEmail.jsx":"47","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Profile/Info/ProfileInfo.jsx":"48","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Courses/CourseItemView/CourseItemView.jsx":"49","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Home/Statistic/Statistic.jsx":"50","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Reports/ReportDetails/ReportDetails.jsx":"51","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Navbar/Submenu/Submenu.jsx":"52","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Notifications/NotificationItem/NotificationItem.jsx":"53","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Reports/ReportMain/ReportMain.jsx":"54","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Reports/UserInfo/UserInfo.jsx":"55","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Notifications/NotificationsModal/NotificationsModal.jsx":"56","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Navbar/ProfileMenu/ProfileMenu.jsx":"57","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Navbar/Burger/Burger.jsx":"58","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Home/Courses/Courses.jsx":"59","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Home/Activities/HomeActivities.jsx":"60","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Notifications/NotificationsModal/NotificationModalItem/NotificationModalItemMenu/NotificationModalItemMenu.jsx":"61","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Notifications/NotificationsModal/NotificationModalItem/NotificationModalItem.jsx":"62","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Reports/Filter/Filter.jsx":"63","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Navbar/Burger/BurgerMenu.jsx":"64","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Home/Courses/CourseItem/CourseItem.jsx":"65","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Services/axios.js":"66","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Services/index.js":"67","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Services/activities.js":"68","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Services/courses.js":"69","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Services/notifications.js":"70","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Services/programs.js":"71","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Services/user.js":"72","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/index.js":"73","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/ErrorBoundry.js":"74","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/index.js":"75","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Activities/ActivitiesContainer.jsx":"76","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Library/LibraryContainer.jsx":"77","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Activities/Activities.jsx":"78","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Library/Library.jsx":"79","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Activities/ActivityItem/ActivityItem.jsx":"80","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Common/Preloader/Preloader.jsx":"81","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Common/LoadDataRouter/LoadDataRouter.jsx":"82","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Common/FormControlls/FormControlls.js":"83","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Common/ProgressBar/ProgressBar.jsx":"84","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Common/Cutsom/Select/CustomSelect.jsx":"85","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Common/SearchModal/SearchModal.jsx":"86","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Activities/index.js":"87"},{"size":716,"mtime":1610701616910,"results":"88","hashOfConfig":"89"},{"size":362,"mtime":1610524818388,"results":"90","hashOfConfig":"89"},{"size":541,"mtime":1610622868628,"results":"91","hashOfConfig":"89"},{"size":2684,"mtime":1610699693401,"results":"92","hashOfConfig":"89"},{"size":634,"mtime":1610524829409,"results":"93","hashOfConfig":"89"},{"size":1071,"mtime":1610524829377,"results":"94","hashOfConfig":"89"},{"size":1441,"mtime":1610524818381,"results":"95","hashOfConfig":"89"},{"size":1856,"mtime":1610524829375,"results":"96","hashOfConfig":"89"},{"size":1534,"mtime":1610524818382,"results":"97","hashOfConfig":"89"},{"size":1250,"mtime":1610524818381,"results":"98","hashOfConfig":"89"},{"size":728,"mtime":1610524829379,"results":"99","hashOfConfig":"89"},{"size":1007,"mtime":1610524818381,"results":"100","hashOfConfig":"89"},{"size":657,"mtime":1610524818381,"results":"101","hashOfConfig":"89"},{"size":645,"mtime":1610524829378,"results":"102","hashOfConfig":"89"},{"size":646,"mtime":1610524829376,"results":"103","hashOfConfig":"89"},{"size":962,"mtime":1610560010720,"results":"104","hashOfConfig":"89"},{"size":1206,"mtime":1610524829378,"results":"105","hashOfConfig":"89"},{"size":1568,"mtime":1610524829378,"results":"106","hashOfConfig":"89"},{"size":1040,"mtime":1610622868627,"results":"107","hashOfConfig":"89"},{"size":1720,"mtime":1610622868623,"results":"108","hashOfConfig":"89"},{"size":2744,"mtime":1610696522402,"results":"109","hashOfConfig":"89"},{"size":1537,"mtime":1610696413848,"results":"110","hashOfConfig":"89"},{"size":1133,"mtime":1610696447942,"results":"111","hashOfConfig":"89"},{"size":1270,"mtime":1610696497321,"results":"112","hashOfConfig":"89"},{"size":3182,"mtime":1610696503835,"results":"113","hashOfConfig":"89"},{"size":1858,"mtime":1610701384022,"results":"114","hashOfConfig":"89"},{"size":1395,"mtime":1610701409896,"results":"115","hashOfConfig":"89"},{"size":1900,"mtime":1610622868602,"results":"116","hashOfConfig":"89"},{"size":1474,"mtime":1610701462760,"results":"117","hashOfConfig":"89"},{"size":1890,"mtime":1610701440991,"results":"118","hashOfConfig":"89"},{"size":352,"mtime":1610622868599,"results":"119","hashOfConfig":"89"},{"size":833,"mtime":1610701429796,"results":"120","hashOfConfig":"89"},{"size":2439,"mtime":1610622868612,"results":"121","hashOfConfig":"89"},{"size":2090,"mtime":1610701475385,"results":"122","hashOfConfig":"89"},{"size":2822,"mtime":1610701144163,"results":"123","hashOfConfig":"89"},{"size":2731,"mtime":1610701162134,"results":"124","hashOfConfig":"89"},{"size":2935,"mtime":1610622868591,"results":"125","hashOfConfig":"89"},{"size":1614,"mtime":1610697495349,"results":"126","hashOfConfig":"89"},{"size":6972,"mtime":1610701773695,"results":"127","hashOfConfig":"89"},{"size":854,"mtime":1610622868617,"results":"128","hashOfConfig":"89"},{"size":5909,"mtime":1610622868619,"results":"129","hashOfConfig":"89"},{"size":1963,"mtime":1610622868605,"results":"130","hashOfConfig":"89"},{"size":512,"mtime":1610622868599,"results":"131","hashOfConfig":"89"},{"size":3315,"mtime":1610622868613,"results":"132","hashOfConfig":"89"},{"size":1473,"mtime":1610622868611,"results":"133","hashOfConfig":"89"},{"size":2410,"mtime":1610701211681,"results":"134","hashOfConfig":"89"},{"size":1993,"mtime":1610701185462,"results":"135","hashOfConfig":"89"},{"size":2538,"mtime":1610701199224,"results":"136","hashOfConfig":"89"},{"size":1386,"mtime":1610622868590,"results":"137","hashOfConfig":"89"},{"size":2584,"mtime":1610701309416,"results":"138","hashOfConfig":"89"},{"size":2794,"mtime":1610622868616,"results":"139","hashOfConfig":"89"},{"size":2126,"mtime":1610622868604,"results":"140","hashOfConfig":"89"},{"size":3023,"mtime":1610622868605,"results":"141","hashOfConfig":"89"},{"size":5398,"mtime":1610622868617,"results":"142","hashOfConfig":"89"},{"size":1204,"mtime":1610622868619,"results":"143","hashOfConfig":"89"},{"size":3948,"mtime":1610622868608,"results":"144","hashOfConfig":"89"},{"size":3047,"mtime":1610622868603,"results":"145","hashOfConfig":"89"},{"size":1551,"mtime":1610622868600,"results":"146","hashOfConfig":"89"},{"size":1590,"mtime":1610622868594,"results":"147","hashOfConfig":"89"},{"size":1559,"mtime":1610701334466,"results":"148","hashOfConfig":"89"},{"size":2471,"mtime":1610622868607,"results":"149","hashOfConfig":"89"},{"size":2772,"mtime":1610622868606,"results":"150","hashOfConfig":"89"},{"size":2365,"mtime":1610622868615,"results":"151","hashOfConfig":"89"},{"size":2751,"mtime":1610622868600,"results":"152","hashOfConfig":"89"},{"size":1401,"mtime":1610622868593,"results":"153","hashOfConfig":"89"},{"size":331,"mtime":1610696002934,"results":"154","hashOfConfig":"89"},{"size":234,"mtime":1610696413847,"results":"155","hashOfConfig":"89"},{"size":460,"mtime":1610695740487,"results":"156","hashOfConfig":"89"},{"size":212,"mtime":1610695696234,"results":"157","hashOfConfig":"89"},{"size":391,"mtime":1610695805806,"results":"158","hashOfConfig":"89"},{"size":233,"mtime":1610695853529,"results":"159","hashOfConfig":"89"},{"size":436,"mtime":1610695663257,"results":"160","hashOfConfig":"89"},{"size":454,"mtime":1610701753319,"results":"161","hashOfConfig":"89"},{"size":802,"mtime":1610697280935,"results":"162","hashOfConfig":"89"},{"size":868,"mtime":1610701691764,"results":"163","hashOfConfig":"89"},{"size":2861,"mtime":1610701364684,"results":"164","hashOfConfig":"89"},{"size":1891,"mtime":1610699848594,"results":"165","hashOfConfig":"89"},{"size":3852,"mtime":1610695893320,"results":"166","hashOfConfig":"89"},{"size":3297,"mtime":1610701819860,"results":"167","hashOfConfig":"89"},{"size":2799,"mtime":1610701270213,"results":"168","hashOfConfig":"89"},{"size":303,"mtime":1610622868587,"results":"169","hashOfConfig":"89"},{"size":1555,"mtime":1610701588241,"results":"170","hashOfConfig":"89"},{"size":1552,"mtime":1610622868586,"results":"171","hashOfConfig":"89"},{"size":767,"mtime":1610622868588,"results":"172","hashOfConfig":"89"},{"size":2631,"mtime":1610622868585,"results":"173","hashOfConfig":"89"},{"size":4058,"mtime":1610622868589,"results":"174","hashOfConfig":"89"},{"size":71,"mtime":1610700134527,"results":"175","hashOfConfig":"89"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lnu326",{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"180"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"180"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"233","messages":"234","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"180"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"244","messages":"245","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"180"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"249","messages":"250","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"251","messages":"252","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"253","messages":"254","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"180"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"180"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"180"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"180"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"180"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"180"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"180"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"280","messages":"281","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"282","messages":"283","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"284","messages":"285","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"180"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"289","messages":"290","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"180"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"180"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"180"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"180"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"180"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"180"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"180"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"180"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"317","messages":"318","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"180"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"180"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"180"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"180"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"180"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"352","messages":"353","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"180"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"361","messages":"362","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"363","messages":"364","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"180"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"368","messages":"369","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"180"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"180"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"180"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/index.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/reportWebVitals.js",[],["381","382"],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Utils/i18n.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/App.js",["383"],"import React from 'react';\nimport styled from 'styled-components';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\n\nimport { ErrorBoundary, LoadDataRouter } from './Components';\nimport { setDirection, setCurrentLanguage } from '../src/Store/Reducers/common';\nimport {\n  Home,\n  Programs,\n  Courses,\n  Library,\n  Notifications,\n  Reports,\n  Activities,\n  SearchResult,\n  NavBar,\n  Login,\n  ForgotPassword,\n  Profile,\n} from './Pages';\nimport './App.css';\n\nconst StyledContentContainer = styled.div`\n  width: 100%;\n  direction: ${({ direction }) => direction};\n`;\n\nconst App = props => {\n  const { t, i18n } = useTranslation();\n\n  const changeLanguage = language => {\n    switch (language) {\n      case 'en': {\n        props.setDirection('ltr');\n        break;\n      }\n      case 'ar': {\n        props.setDirection('rtl');\n        break;\n      }\n      default: {\n        props.setDirection('ltr');\n        break;\n      }\n    }\n    i18n.changeLanguage(language);\n  };\n\n  return (\n    <Router>\n      <StyledContentContainer direction={props.direction}>\n        <NavBar changeLanguage={changeLanguage} />\n        <ErrorBoundary>\n          <Switch>\n            <Route exact path=\"/\">\n              <Redirect to=\"/home\" />\n            </Route>\n            <Route exact path=\"/home\" render={() => <LoadDataRouter Component={Home} />} />\n            <Route exact path=\"/courses\" render={() => <LoadDataRouter Component={Courses} />} />\n            <Route exact path=\"/activities\" render={() => <LoadDataRouter Component={Activities} />} />\n            <Route path=\"/programs\" render={() => <LoadDataRouter Component={Programs} />} />\n            <Route path=\"/profile\" render={() => <LoadDataRouter Component={Profile} />} />\n            <Route path=\"/login\" render={() => <Login />} />\n            <Route path=\"/forgot_password\" render={() => <ForgotPassword />} />\n            <Route path=\"/report\" render={() => <LoadDataRouter Component={Reports} />} />\n            <Route path=\"/search\" render={() => <LoadDataRouter Component={SearchResult} />} />\n            <Route path=\"/home/notifications\" render={() => <LoadDataRouter Component={Notifications} />} />\n            <Route path=\"/library\" render={() => <LoadDataRouter Component={Library} />} />\n          </Switch>\n        </ErrorBoundary>\n      </StyledContentContainer>\n    </Router>\n  );\n};\n\nlet mapStateToProps = state => ({\n  direction: state.common.direction,\n  currentLanguage: state.common.currentLanguage,\n});\n\nexport default connect(mapStateToProps, {\n  setDirection,\n  setCurrentLanguage,\n})(App);\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Utils/validators.js",["384"],"export const required = (value) =>{\n    if(value) return undefined;\n    \n    return 'The field is required!';\n}\n\nexport const foo = console.log;\n\nexport const isEmail = (value) => {\n    let rep = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\n    if(rep.test(value)){\n        return undefined;\n    }\n    return 'Incorrect email!';   \n}\nexport const passValidationMatch = (value, allValues) => {\n    if(value !== allValues.newPassword) return `Passwords didn't match!`;\n    return undefined;\n}\n\nexport const emailValidationMatch = (value, allValues) => {\n    if(value !== allValues.newEmail) return `Emails didn't match!`;\n    return undefined;\n}","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/empty_state_icon.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/courses.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/activities.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/programicon.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/homeicon.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/searchicon.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/notification.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/myreport.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/planet_icon.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/clock.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/library.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/profile_settings_icon.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/logout_icon.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Store/reduxStore.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Store/Reducers/common.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Store/Reducers/user.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Store/Reducers/activities.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Store/Reducers/courses.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Store/Reducers/programs.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Store/Reducers/notifications.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Courses/CoursesContainer.jsx",["385"],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Home/HomeContainer.jsx",["386","387"],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Navbar/NavbarContainer.jsx",["388","389","390"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Navbar from './Navbar';\nimport { getNotifications } from '../../Store/Reducers/notifications';\nimport { setCurrentLanguage } from '../../Store/Reducers/common';\n\nconst NavbarContainer = props => {\n  const [isOpenSearchModal, setIsOpenSearchModal] = useState(false);\n  const [isOpenNotificationsModal, setIsOpenNotificationsModal] = useState(false);\n\n  useEffect(() => {\n    props.getNotifications(props.currentPage, props.pageSize);\n  }, [props.currentPage, props.pageSize]);\n\n  useEffect(() => {}, [props.currentRoute]);\n\n  return (\n    <>\n      {props.currentRoute != '/login' && props.currentRoute != '/forgot_password' && (\n        <Navbar\n          user={props.user}\n          changeLanguage={props.changeLanguage}\n          direction={props.direction}\n          setIsOpenSearchModal={setIsOpenSearchModal}\n          isOpenSearchModal={isOpenSearchModal}\n          totalUnreadNotificationsCount={props.totalUnreadNotificationsCount}\n          unreadNotifications={props.unreadNotifications}\n          setIsOpenNotificationsModal={setIsOpenNotificationsModal}\n          isOpenNotificationsModal={isOpenNotificationsModal}\n          setCurrentLanguage={props.setCurrentLanguage}\n          currentRoute={props.currentRoute}\n        />\n      )}\n    </>\n  );\n};\n\nlet mapStateToProps = state => ({\n  user: state.user.user,\n  direction: state.common.direction,\n  currentRoute: state.common.currentRoute,\n  unreadNotifications: state.notifications.unreadNotifications,\n  totalUnreadNotificationsCount: state.notifications.totalUnreadNotificationsCount,\n  currentPage: state.notifications.currentPage,\n  pageSize: state.notifications.pageSize,\n  notifications: state.notifications.notifications,\n});\n\nexport default connect(mapStateToProps, {\n  getNotifications,\n  setCurrentLanguage,\n})(NavbarContainer);\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Reports/ReportsContainer.jsx",["391","392","393"],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Programs/ProgramsContainer.jsx",["394"],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Lessons/LessonsContainer.jsx",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Notifications/NotificationsContainer.jsx",["395"],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Profile/Profile.jsx",["396"],"import React from 'react';\nimport { connect } from 'react-redux';\nimport classes from './Profile.module.css';\nimport { useTranslation } from 'react-i18next';\nimport { NavLink, Redirect, Route } from 'react-router-dom';\nimport ProfileInfo from './Info/ProfileInfo';\nimport ProfileEmail from './Email/ProfileEmail';\nimport ProfilePassword from './Password/ProfilePassword';\nimport ProfileNotifications from './Notifications/ProfileNotifications';\n\nconst Profile = (props) => {\n    const {t, i18n} = useTranslation();\n    return(\n        <div className={classes.main}>\n            <div className={classes.container}>\n                <h1>{t(\"profile.title\")}</h1>\n                <div className={classes.body}>\n                    <div className={classes.menu}>\n                        <div className={classes.menuItem}>\n                            <NavLink to=\"/profile/info\" activeClassName={classes.active}>{t(\"profile.tabs.info\")}</NavLink>\n                        </div>\n                        <div className={classes.menuItem}>\n                            <NavLink to=\"/profile/email\" activeClassName={classes.active}>{t(\"profile.tabs.email\")}</NavLink>\n                        </div>\n                        <div className={classes.menuItem}>\n                            <NavLink to=\"/profile/password\" activeClassName={classes.active}>{t(\"profile.tabs.password\")}</NavLink>\n                        </div>\n                        <div className={classes.menuItem}>\n                            <NavLink to=\"/profile/notifications\" activeClassName={classes.active}>{t(\"profile.tabs.notifications\")}</NavLink>\n                        </div>\n                    </div>\n                    <div className={classes.content}>\n                        <Route exact path=\"/profile\">\n                            <Redirect to=\"/profile/info\"/>\n                        </Route>\n                        <Route path=\"/profile/info\" render={()=><ProfileInfo/>}/>\n                        <Route path=\"/profile/email\" render={()=><ProfileEmail/>}/>\n                        <Route path=\"/profile/password\" render={()=><ProfilePassword/>}/>\n                        <Route path=\"/profile/notifications\" render={()=><ProfileNotifications/>}/>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n    user: state.user.user\n});\n\nexport default connect(mapStateToProps, {})(Profile);","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/SearchResult/SearchResultContainer.jsx",["397","398","399"],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Auth/Login/Login.jsx",["400","401","402"],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Auth/Forgot/ForgotPassword.jsx",["403","404","405"],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Courses/Courses.jsx",["406","407","408"],"import React, { useEffect, useState } from 'react';\nimport classes from './Courses.module.css';\nimport CourseItemView from './CourseItemView/CourseItemView';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\n\nconst StyledLabel = styled.label`\n    margin-left: ${({ direction }) => direction === \"rtl\" ? \"56px\" : \"0\"};\n    margin-right: ${({ direction }) => direction === \"ltr\" ? \"56px\" : \"0\"};\n`;\n\nconst Courses = (props) => {\n    const {t, i18n} = useTranslation();\n\n    let courses = props.courses.map(item => {\n        return <CourseItemView item={item} key={item.courseId}/>\n    })\n\n    return(\n        <div className={classes.main}>\n            <div className={classes.coursesHeader}>\n                <div className={classes.coursesHeaderContainer}>\n                    <h1>{t(\"courses.title\")}</h1>\n                    <div className={classes.filters}>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"courses.filters.all\")}</span>\n                            <input type=\"checkbox\" onChange={()=>{props.setAll()}} checked={props.all}/>\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"courses.filters.completed\")}</span>\n                            <input type=\"checkbox\" onChange={()=>{props.setCompleted(!props.completed)}} checked={props.completed}/>\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"courses.filters.inProgress\")}</span>\n                            <input type=\"checkbox\" onChange={()=>{props.setInProgress(!props.inProgress)}} checked={props.inProgress}/>\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"courses.filters.notStarted\")}</span>\n                            <input type=\"checkbox\" onChange={()=>{props.setNotStarted(!props.notStarted)}} checked={props.notStarted}/>\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                    </div>\n                </div>\n            </div>\n            <div className={classes.itemsList}>\n                <div className={classes.containerItems}>\n                    {courses}\n                </div>  \n            </div>\n        </div>\n    );\n}\n\nexport default Courses;","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Home/Home.jsx",["409"],"import React from 'react';\nimport styled from 'styled-components';\nimport HomeActivities from './Activities/HomeActivities';\nimport HomeCourses from './Courses/Courses';\nimport classes from './Home.module.css';\nimport Statistic from './Statistic/Statistic';\n\nconst StyledCoursesContainer = styled.div`\n  ../..media screen and (max-width: 1279px) {\n    margin-left: ${({ direction }) => (direction === 'ltr' ? '50px' : '0')};\n    margin-right: ${({ direction }) => (direction === 'rtl' ? '50px' : '0')};\n  }\n  ../..media screen and (max-width: 610px) {\n    margin-left: 0;\n    margin-right: 0;\n  }\n`;\n\nconst StyledLeftSide = styled.div`\n  padding-right: ${({ direction }) => (direction === 'ltr' ? '0' : '24px')};\n`;\n\nconst Home = props => {\n  return (\n    <div className={classes.main}>\n      <div className={classes.container}>\n        <StyledLeftSide className={classes.leftSide} direction={props.direction}>\n          <div className={classes.containerLeft}>\n            <div className={classes.statistic}>\n              <Statistic user={props.user} />\n            </div>\n            <StyledCoursesContainer direction={props.direction} className={classes.courses}>\n              <HomeCourses courses={props.courses} />\n            </StyledCoursesContainer>\n          </div>\n        </StyledLeftSide>\n        <div className={classes.rightSide}>\n          <div className={classes.containerRight}>\n            <div className={classes.activities}>\n              <HomeActivities activities={props.activities} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Navbar/Navbar.jsx",["410","411"],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Reports/Reports.jsx",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/SearchResult/SearchResult.jsx",["412"],"import React from 'react';\nimport classes from './SearchResult.module.css';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\nimport { coursesicon } from '../../Assets/Images/courses';\nimport { activitiesicon } from '../../Assets/Images/activities';\nimport { programicon } from '../../Assets/Images/programicon';\nimport { empty_state_icon } from '../../Assets/Images/empty_state_icon';\n\nconst StyledLabel = styled.label`\n    margin-left: ${({ direction }) => direction === \"rtl\" ? \"56px\" : \"0\"};\n    margin-right: ${({ direction }) => direction === \"ltr\" ? \"56px\" : \"0\"};\n`;\n\nconst SearchResult = (props) => {\n    const {t, i18n} = useTranslation();\n\n    let courses = [];\n    let programs = [];\n    let activities = [];\n\n    console.log(props.viewAll)\n\n    return(\n        <div className={classes.main}>\n            <div className={classes.header}>\n                <div className={classes.container}>\n                    <h1>{t(\"searchResult.title\")} <strong>{props.searchValue}</strong></h1>\n                    <div className={classes.filters}>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"searchResult.all\")}</span>\n                            <input type=\"checkbox\" onChange={()=>{props.setViewAll(!props.viewAll)}} checked={props.viewAll} value={props.viewAll}/>\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"searchResult.programs\")}</span>\n                            <input type=\"checkbox\" onChange={()=>{props.setViewPrograms(!props.viewPrograms)}} value={props.viewPrograms} checked={props.viewPrograms}/>\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"searchResult.courses\")}</span>\n                            <input type=\"checkbox\" onChange={()=>{props.setViewCourses(!props.viewCourses)}} value={props.viewCourses} checked={props.viewCourses}/>\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"searchResult.activities\")}</span>\n                            <input type=\"checkbox\" onChange={()=>{props.setViewActivities(!props.viewActivities)}} value={props.viewActivities} checked={props.viewActivities}/>\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                    </div>\n                </div>\n            </div>\n            <div className={classes.content}>\n                <div className={classes.container}>\n                    {props.viewCourses &&\n                    <div className={classes.category}>\n                        <div className={classes.categoryHeader}>\n                            {coursesicon}\n                            <span>{t('searchResult.courses')}</span>\n                        </div>\n                        <div className={classes.itemsList}>\n                            {(courses.length > 0 && courses) ? courses : \n                                <div className={classes.empty}>\n                                    <div className={classes.emptyIcon}>\n                                        {empty_state_icon}\n                                    </div>\n                                    <span>{t(\"searchResult.coursesEmpty\")}</span>\n                                </div>\n                            }\n                        </div>\n                    </div>}\n                    {props.viewActivities &&\n                    <div className={classes.category}>\n                        <div className={classes.categoryHeader}>\n                            {activitiesicon}\n                            <span>{t('searchResult.activities')}</span>\n                        </div>\n                        <div className={classes.itemsList}>\n                            {(activities.length > 0 && activities) ? activities : \n                                <div className={classes.empty}>\n                                    <div className={classes.emptyIcon}>\n                                        {empty_state_icon}\n                                    </div>\n                                    <span>{t(\"searchResult.activitiesEmpty\")}</span>\n                                </div>\n                            }\n                        </div>\n                    </div>}\n                    {props.viewPrograms &&\n                    <div className={classes.category}>\n                        <div className={classes.categoryHeader}>\n                            {programicon}\n                            <span>{t('searchResult.programs')}</span>\n                        </div>\n                        <div className={classes.itemsList}>\n                            {(programs.length > 0 && programs) ? programs : \n                                <div className={classes.empty}>\n                                    <div className={classes.emptyIcon}>\n                                        {empty_state_icon}\n                                    </div>\n                                    <span>{t(\"searchResult.programsEmpty\")}</span>\n                                </div>\n                            }\n                        </div>\n                    </div>}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default SearchResult;","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Notifications/Notifications.jsx",["413","414","415","416"],"import React from 'react';\nimport classes from './Notifications.module.css';\nimport { notificationicon } from '../../Assets/Images/notification';\nimport { useTranslation } from 'react-i18next';\nimport markasreadicon from '../../Assets/Images/asreadicon.svg';\nimport NotificationItem from './NotificationItem/NotificationItem';\n\nconst Notifications = (props) => {\n    const {t, i18n} = useTranslation();\n    \n    let newNotifications = [];\n    let notifications = [];\n\n    newNotifications = props.notifications.map(notify => {\n        if(!notify.isRead){\n            return <NotificationItem isRead={false} item={notify} key={notify.notificationId}/>\n        }\n    });\n\n    notifications = props.notifications.map(notify => {\n        if(notify.isRead){\n            return <NotificationItem isRead={true} item={notify} key={notify.notificationId}/>\n        }\n    })\n\n    return(\n        <div className={classes.main}>\n            <div className={classes.container}>\n                <div className={classes.header}>\n                    <div className={classes.headerSide}>\n                        {notificationicon}\n                        <h3>{t(\"notifications.title\")}</h3>\n                    </div>\n                    <div className={classes.headerSide}>\n                        <button>\n                            <img src={markasreadicon}/>\n                            <span>{t(\"notifications.markAllRead\")}</span>\n                        </button>\n                    </div>\n                </div>\n                <div className={classes.contentContainer}>\n                    <div className={classes.new}>\n                        {newNotifications}\n                    </div>\n                    <h3>{t(\"notifications.earlier\")}</h3>\n                    <div className={classes.itemsList}>\n                        {notifications}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Notifications;\n\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Lessons/Lessons.jsx",["417"],"import React from 'react';\nimport { connect } from 'react-redux';\nimport classes from './Lessons.module.css';\n\nconst Lessons = (props) => {\n    return(\n        <div className={classes.main}>\n            <div className={classes.header}>\n                <div className={classes.container}>\n                    \n                </div>\n            </div>\n            <div className={classes.container}>\n                <h3>lessons</h3>\n            </div>\n            \n        </div>\n    );\n}\n\nexport default Lessons;","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Programs/Programs.jsx",["418","419","420","421"],"import React, { useState } from 'react';\nimport classes from './Programs.module.css';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\nimport { empty_state_icon } from '../../Assets/Images/empty_state_icon';\n\nconst StyledLabel = styled.label`\n    margin-left: ${({ direction }) => direction === \"rtl\" ? \"56px\" : \"0\"};\n    margin-right: ${({ direction }) => direction === \"ltr\" ? \"56px\" : \"0\"};\n`;\n\nconst Programs = (props) => {\n    const { t, i18n } = useTranslation();\n\n\n\n    let programs = [];\n\n    programs = props.programs.map(program => {\n\n    });\n\n    return (\n        <div className={classes.main}>\n            <div className={classes.header}>\n                <div className={classes.container}>\n                    <h1>{t(\"programs.title\")}</h1>\n                    <div className={classes.filters}>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"courses.filters.all\")}</span>\n                            <input type=\"checkbox\" onChange={() => { props.setAll() }} checked={props.all} value={props.all} />\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"courses.filters.completed\")}</span>\n                            <input type=\"checkbox\" onChange={() => { props.setCompleted(!props.completed) }} checked={props.completed} />\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"courses.filters.inProgress\")}</span>\n                            <input type=\"checkbox\" onChange={() => { props.setInProgress(!props.inProgress) }} checked={props.inProgress} />\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"courses.filters.notStarted\")}</span>\n                            <input type=\"checkbox\" onChange={() => { props.setNotStarted(!props.notStarted) }} checked={props.notStarted} />\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                    </div>\n                </div>\n            </div>\n            <div className={classes.itemsList}>\n                <div className={classes.containerItems}>\n                    {(programs.length > 0 && programs != null && programs != undefined) ? programs :\n                        <div className={classes.empty}>\n                            <div className={classes.emptyIcon}>\n                                {empty_state_icon}\n                            </div>\n                            <span>{t(\"programs.empty\")}</span>\n                        </div>\n                    }\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Programs;","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Profile/Notifications/ProfileNotifications.jsx",["422"],"import React, { useState } from 'react';\nimport classes from './ProfileNotifications.module.css';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\n\nconst ProfileNotifications = (props) => {\n    const {t, i18n} = useTranslation();\n\n    const [enableEmail, setEnableEmail] = useState(false);\n    const [enableText, setEnableText] = useState(false);\n\n    let handleEmail = () => {\n        setEnableEmail(!enableEmail);\n    }\n    let handleText = () => {\n        setEnableText(!enableText);\n    }\n\n    return(\n        <div className={classes.main}>\n            <div className={classes.field}>\n                <label htmlFor=\"email\">{t(\"profile.notifications.email\")}</label>\n                <label className={classes.switch}>\n                    <input type=\"checkbox\" id=\"email\" onChange={handleEmail} value={enableEmail}/>\n                    <span className={classes.slider}></span>\n                </label>\n            </div>\n            <div className={classes.field}>\n                <label htmlFor=\"text\">{t(\"profile.notifications.text\")}</label>\n                <label className={classes.switch}>\n                    <input type=\"checkbox\" id=\"text\" onChange={handleText} value={enableText}/>\n                    <span className={classes.slider}></span>\n                </label>\n            </div>\n        </div>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n\n});\n\nexport default connect(mapStateToProps, {})(ProfileNotifications);","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Profile/Password/ProfilePassword.jsx",["423","424","425","426"],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Profile/Email/ProfileEmail.jsx",["427","428"],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Profile/Info/ProfileInfo.jsx",["429","430","431","432"],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Courses/CourseItemView/CourseItemView.jsx",["433","434","435"],"import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classes from './CourseItemView.module.css';\nimport { useTranslation } from 'react-i18next';\n\nconst CourseItem = (props) => {\n    const {t, i18n} = useTranslation();\n    return(\n        <div className={classes.main}>\n            <NavLink to={`/courses/${props.item.courseId}`}>\n                {(props.item.image != \"null\") ? <img src={props.item.image}/> : <div className={classes.defaultImg}></div>}\n                <div className={classes.itemInfo}>\n                    <label>{props.item.description}</label>\n                    <h2>{props.item.name}</h2>\n                    <div className={classes.itemFoot}>\n                        <span className={classes.status + \" \" + \n                            ((props.item.inProgress && classes.inProgress) ||\n                            (!props.item.inProgress && classes.completed))}>\n                                {((props.item.inProgress && t('courseMini.inProgress')) ||\n                                (!props.item.inProgress && t('courseMini.progressComplete')))}</span>\n                        <span className={classes.time}>{props.item.startingDate ? props.item.startingDate : t('courseMini.overdue')}</span>\n                    </div>\n                </div>\n                \n            </NavLink>\n        </div>\n    );\n}\n\nexport default CourseItem;","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Home/Statistic/Statistic.jsx",["436"],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Reports/ReportDetails/ReportDetails.jsx",["437","438"],"import React from 'react';\nimport { Link, useLocation, withRouter } from 'react-router-dom';\nimport classes from './ReportsDetails.module.css';\nimport { empty_state_icon } from '../../../Assets/Images/empty_state_icon';\nimport { searchicon } from '../../../Assets/Images/searchicon'\nimport { useTranslation } from 'react-i18next';\n\nconst ReportsDetails = (props) => {\n    const { t, i18n } = useTranslation();\n    const location = props.match.params.insight;\n    const targetTitle = location.split('_').join(' ')\n    const number = () => {\n        if (location === 'enrolled') {\n            return props.props.courses ? props.props.courses.length : 0\n        } else if (location === 'in_progress') {\n            return props.props.courses ? props.props.courses.filter((cours) => cours.courseProgress > 0).length : 0\n        } else if (location === 'pending') {\n            return props.props.activities ? props.props.activities.length : 0\n        }\n    }\n\n\n    return (\n        <div>\n            <div className={classes.reportDetailsTitle}>\n                <h3>\n                    <Link to='/report'>\n                        {t(\"reports.reportsDetails.generalInsights\")}\n                    </Link>\n                    <span className={classes.detailsItemTitle}>{` ${targetTitle}`}</span>\n                    <span className={classes.numberItems}>{` (${number()})`}</span>\n                </h3>\n                <div className={classes.reportDetailsTitleInput}>\n                    <input type=\"text\" placeholder={t(\"reports.reportsDetails.search\")} />\n                    {searchicon}\n                </div>\n            </div>\n            {location === 'pending' && number() === 0 &&\n                <div className={classes.empty}>\n                    <div className={classes.emptyIcon}>\n                        {empty_state_icon}\n                    </div>\n                    <span>{t(\"reports.reportsDetails.pendingActivities\")}</span>\n                </div>\n            }\n            {location === 'in_progress' && number() === 0 &&\n                <div className={classes.empty}>\n                    <div className={classes.emptyIcon}>\n                        {empty_state_icon}\n                    </div>\n                    <span>{t(\"reports.reportsDetails.enrolledCourses\")}</span>\n                </div>\n            }\n            {location === 'enrolled' && number() === 0 &&\n                <div className={classes.empty}>\n                    <div className={classes.emptyIcon}>\n                        {empty_state_icon}\n                    </div>\n                    <span>{t(\"reports.reportsDetails.inProgressCourses\")}</span>\n                </div>\n            }\n        </div >\n    );\n}\n\nlet WithRouterContainer = withRouter(ReportsDetails);\n\nexport default WithRouterContainer;","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Navbar/Submenu/Submenu.jsx",["439"],"import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classes from './Submenu.module.css';\nimport { libraryicon } from '../../../Assets/Images/library';\nimport { activitiesicon } from '../../../Assets/Images/activities.js';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\n\nconst StyledArrow = styled.div`\n    left: ${({ direction }) => direction === \"ltr\" ? '-81px' : '81px'};\n    & div{\n        left: ${({ direction }) => direction === \"ltr\" ? '-4px' : '4px'};\n    }\n`;\n\nconst StyledDropDown = styled.div`\ntransform: ${({ direction }) => direction === \"ltr\" ? 'translateX(3px)' : 'translateX(-3px)'}; \n`;\n\nconst Submenu = (props) => {\n    const {t, i18n} = useTranslation();\n    return(\n        <StyledDropDown className={classes.main} direction={props.direction}>\n            <StyledArrow className={classes.arrow  + \" \" + classes.detectClick} direction={props.direction}>\n                <div className={classes.innerArrow  + \" \" + classes.detectClick}></div>\n            </StyledArrow>\n            <div className={classes.body}>\n                <div className={classes.menuItem}>\n                    \n                    <NavLink to=\"/activities\" activeClassName={classes.active}>\n                        <div className={classes.icon}>\n                            {activitiesicon}\n                        </div>\n                        \n                        <span>{t(\"navbar.myActivities\")}</span>\n                    </NavLink>\n                </div>\n                <div className={classes.menuItem}>\n                    <NavLink to=\"/library\" activeClassName={classes.active}>\n                        <div className={classes.icon}>\n                            {libraryicon}\n                        </div>\n                        <span>{t(\"navbar.library\")}</span>\n                    </NavLink>\n                </div>\n            </div>\n        </StyledDropDown>\n        \n    );\n}\n\nlet mapStateToProps = (state) => ({\n    direction: state.common.direction\n})\n\nexport default connect(mapStateToProps, {})(Submenu);","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Notifications/NotificationItem/NotificationItem.jsx",["440","441","442","443","444"],"import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport classes from './NotificationItem.module.css';\nimport { notificationicon } from '../../../Assets/Images/notification';\nimport parse from 'html-react-parser';\nimport { useTranslation } from 'react-i18next';\nimport showmoreicon from \"../../../Assets/Images/showmoreicon.svg\";\nimport NotificationModalItemMenu from '../NotificationsModal/NotificationModalItem/NotificationModalItemMenu/NotificationModalItemMenu';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst StyledItem = styled.div`\n    background-color: ${({ isRead }) => isRead ? \"white\" : \"rgba(172, 221, 213, 0.15)\"};\n`;\n\nconst StyledDiv = styled.div`\n    margin-left: ${({ direction }) => direction === \"ltr\" ? '0' : '16px'};\n    margin-right: ${({ direction }) => direction === \"rtl\" ? \"0\" : \"16px\"};\n`;\n\nconst NotificationItem = (props) => {\n    let sendTime = new Date(props.item.generated);\n    let now = new Date();\n\n    const [isOpenMenu, setIsOpenMenu] = useState(false);\n\n    const {t, i18n} = useTranslation();\n\n    useEffect(()=>{\n        if(props.isScroll){\n            setIsOpenMenu(false);\n        }\n    },[props.isScroll]);\n\n    function secondsToDhms(seconds) {\n        seconds = Number(seconds);\n        let d = Math.floor(seconds / (3600*24));\n        let h = Math.floor(seconds % (3600*24) / 3600);\n        let m = Math.floor(seconds % 3600 / 60);\n        let s = Math.floor(seconds % 60);\n        \n        let dDisplay = d > 0 ? d + (t(\"notificationItem.days\")) : \"\";\n        let hDisplay = h > 0 ? h + (t(\"notificationItem.hours\")) : \"\";\n        let mDisplay = m > 0 ? m + (t(\"notificationItem.minutes\")) : \"\";\n        let sDisplay = s > 0 ? s + (t(\"notificationItem.seconds\")) : \"\";\n\n        if(dDisplay != \"\"){\n            return dDisplay;\n        }else if(hDisplay != \"\"){\n            return hDisplay;\n        }else if(mDisplay != \"\"){\n            return mDisplay;\n        }else{\n            return sDisplay;\n        }\n    }\n\n    let agoTime = secondsToDhms((now.getTime() - sendTime.getTime()) / 1000);\n    \n    return(\n        <StyledItem className={classes.main} isRead={props.isRead}>\n            <StyledDiv className={classes.image} direction={props.direction}>\n                {notificationicon}\n            </StyledDiv>\n            <div className={classes.info}>\n                <p>{parse(props.item.text)}</p>\n                <NavLink to={`/home/notifications/${props.item.notificationId}`}>{t(\"notificationItem.link\")}</NavLink>\n                <span>{agoTime} {t(\"notificationItem.ago\")}</span>\n            </div>\n            <div className={classes.menu} onClick={()=>{setIsOpenMenu(!isOpenMenu)}}>\n                <img src={showmoreicon}/>\n                {isOpenMenu && <NotificationModalItemMenu/>}\n            </div>\n        </StyledItem>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n    direction: state.common.direction\n})\n\nexport default connect(mapStateToProps, {})(NotificationItem);","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Reports/ReportMain/ReportMain.jsx",["445","446"],"import React from 'react';\nimport { Link, NavLink } from 'react-router-dom'\nimport classes from './ReportMain.module.css';\nimport { useTranslation } from 'react-i18next';\nimport Filter from '../Filter/Filter'\nimport { Chart } from \"react-google-charts\";\n\nexport default function ReportMain({ props }) {\n    const { t, i18n } = useTranslation();\n    const coursesInProgress = props.courses ? props.courses.filter((cours) => cours.courseProgress > 0).length : 0\n    const coursesIsCompleted = props.courses ? props.courses.filter((cours) => cours.isCompleted).length : 0\n    const coursesNotStarted = props.courses ? props.courses.filter((cours) => cours.courseProgress === 0).length : 0\n\n    const firstCourseDaysNumber = 1\n    const secondCourseDaysNumber = 4\n\n    return (\n        <>\n            <div className={classes.tabsBlock}>\n                <h3>\n                    {t(\"reports.insights.title\")}\n                </h3>\n                <ul className={classes.tabs}>\n                    <li>\n                        <Link className={classes.textDecorationNone} to=\"/report/enrolled\">\n                            <p className={classes.tabTitle}> {t(\"reports.insights.enrolled\")}</p>\n                            <p className={classes.tabValue}>\n                                <span>{props.courses ? props.courses.length : 0}</span>\n                                {` ${t(\"reports.insights.courses\")}`}\n                            </p>\n                        </Link>\n                    </li>\n                    <li>\n                        <Link className={classes.textDecorationNone} to=\"/report/in_progress\">\n                            <p className={classes.tabTitle}>{t(\"reports.insights.inProgress\")}</p>\n                            <p className={classes.tabValue}>\n                                <span>{coursesInProgress}</span>\n                                {` ${t(\"reports.insights.courses\")}`}\n                            </p>\n                        </Link>\n                    </li>\n                    <li>\n                        <Link className={classes.textDecorationNone} to={`/report/pending`}>\n                            <p className={classes.tabTitle}>{t(\"reports.insights.pending\")}</p>\n                            <p className={classes.tabValue}>\n                                <span>{(props.activities && props.activities.length > 0) ? props.activities.length : 0}</span>\n                                {` ${t(\"reports.insights.activities\")}`}\n                            </p>\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n            <div className={classes.graphics}>\n                <div className={classes.graphicsTitle}>\n                    <h3>{t(\"reports.overview.title\")}</h3>\n                    <Filter />\n                </div>\n                <div className={classes.overviewCharts}>\n                    <div className={classes.chart}>\n                        <Chart\n                            width={'100%'}\n                            height={'100%'}\n                            background={'#fff'}\n                            chartType=\"PieChart\"\n                            loader={<div>Loading Chart</div>}\n                            data={[\n                                ['Progress', 'How mutch'],\n                                ['Not started', coursesNotStarted],\n                                ['In progress', coursesInProgress],\n                                ['Completed', coursesIsCompleted],\n                            ]}\n                            options={{\n                                title: 'My Courses',\n                                legend: \"bottom\",\n                                chartArea: { width: '95%', height: '70%' },\n                                colors: ['#cce1f4', '#f4e6cc', '#a9d5c1'],\n                                pieSliceText: 'value',\n                                fontSize: 14,\n                                pieSliceTextStyle: { color: \"black\" },\n                                titleTextStyle: { fontSize: 16 }\n                            }}\n                        />\n                    </div>\n                    <div className={classes.chart}>\n                        <Chart\n                            chartType=\"ColumnChart\"\n                            width=\"100%\"\n                            height=\"100%\"\n                            data={[\n                                [\"Courses\", \"Days\", { role: \"style\" }],\n                                [\"Course 1\", firstCourseDaysNumber, '#f4e6cc'],\n                                [\"Course 2\", secondCourseDaysNumber, '#a9d5c1'],\n                            ]}\n                            options={{\n                                fontSize: 14,\n                                title: 'My Engagment',\n                                titleTextStyle: { fontSize: 16 },\n                                chartArea: { width: '80%', height: '70%' },\n                                bar: { groupWidth: \"85%\" },\n                                legend: { position: \"none\" },\n                                vAxes: {\n                                    0: { title: 'Days', titleTextStyle: { fontStyle: 'normal' } },\n                                }\n                            }}\n                        />\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Reports/UserInfo/UserInfo.jsx",["447"],"import React from 'react';\nimport classes from './UserInfo.module.css';\nimport { useTranslation } from 'react-i18next';\n\nconst UserInfo = (props) => {\n    const { t, i18n } = useTranslation();\n\n    return (\n        <div className={classes.main}>\n            <div className={classes.block + \" \" + classes.withoutPadding}>\n                <div className={classes.infoBlock}>\n                    <p>{t(\"home.statistic.infoUser.welcome\")}</p>\n                    <h3>{props.user.name}</h3>\n                </div>\n                <div className={classes.infoBlock}>\n                    <label>{t(\"home.statistic.infoUser.learningHours\")}</label>\n                    <span><strong>34 {t(\"home.statistic.infoUser.hours\")}</strong> {t(\"home.statistic.infoUser.and\")} <strong>54 {t(\"home.statistic.infoUser.mins\")}</strong></span>\n                </div>\n                <hr className={classes.line} />\n                <div className={classes.infoBlock}>\n                    <label>{t(\"home.statistic.infoUser.learningGoal\")}</label>\n                    <span><strong>34 {t(\"home.statistic.infoUser.hours\")}</strong></span>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default UserInfo","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Notifications/NotificationsModal/NotificationsModal.jsx",["448","449"],"import React, { useEffect, useRef, useState } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport classes from './NotificationsModal.module.css';\nimport { useTranslation } from 'react-i18next';\nimport { NavLink } from 'react-router-dom';\nimport NotificationModalItem from './NotificationModalItem/NotificationModalItem';\n\n\nconst StyledModal = styled.div`\n    transform: ${({ direction, notifications }) => direction === \"ltr\" ? 'translateX(-138px)' : 'translateX(138px);' }; \n    @media screen and (max-width: 1020px){\n        transform: ${({ direction, notifications }) => direction === \"ltr\" ? 'translateX(-232px)' : 'translateX(232px);' }; \n    }\n    @media screen and (max-width: 507px){\n        transform: ${({ direction, notifications }) => direction === \"ltr\" ? 'translateX(-155px)' : 'translateX(155px);' }; \n    }\n    @media screen and (max-width: 375px){\n        transform: ${({ direction, notifications }) => direction === \"ltr\" ? 'translateX(-139px)' : 'translateX(139px);' }; \n    }\n`;\n\nconst StyledArrow = styled.div`\n    left: ${({ direction }) => direction === \"ltr\" ? \"-42px\" : \"42px\"};\n    \n    & div{\n        left: ${({ direction }) => direction === \"ltr\" ? \"-4.2px\" : \"3.5px\"};\n    }\n\n    @media screen and (max-width: 507px){\n        left: ${({ direction }) => direction === \"ltr\" ? \"-118px\" : \"118px\"};\n    }\n    @media screen and (max-width: 428px){\n        left: ${({ direction }) => direction === \"ltr\" ? \"-53px\" : \"53px\"};\n    }\n    @media screen and (max-width: 375px){\n        left: ${({ direction }) => direction === \"ltr\" ? \"-70px\" : \"70px\"};\n    }\n`;\n\n\nconst NotificationsModal = (props) => {\n    const {t, i18n} = useTranslation();\n\n    const [isScroll, setIsScroll] = useState(false);\n    const modalRef = useRef(null)\n\n    const windowRef = useRef(null);\n\n    function logit() {\n        setIsScroll(!isScroll);\n    }\n\n    useEffect(() => {\n        if(modalRef.current){\n            modalRef.current.addEventListener(\"scroll\", logit);\n        }\n        window.addEventListener(\"mousedown\",(event) => {\n            if(event.target.classList.value.includes(\"detectClick\")){\n                return\n            }\n            props.setIsOpenNotificationsModal(false)\n        })\n    }, [modalRef.current]);\n\n    let notifications = [];\n\n    if(props.notifications){\n        notifications = props.notifications.map(notification => {\n            \n            return <NotificationModalItem item={notification} key={notification.notificationId} isScroll={isScroll}/>\n        });\n    }\n    \n\n    return(\n        <StyledModal className={classes.main + \" \" + classes.detectClick} direction={props.direction} notifications={props.notifications} ref={windowRef}>\n            <StyledArrow className={classes.arrow  + \" \" + classes.detectClick} direction={props.direction}>\n                <div className={classes.innerArrow  + \" \" + classes.detectClick}></div>\n            </StyledArrow>\n            <div className={classes.body + \" \" + classes.detectClick}>\n                <div className={classes.header + \" \" + classes.detectClick}>\n                    <h3 className={classes.detectClick}>{t(\"notificationsModal.title\")}</h3>\n                    <NavLink to=\"/home/notifications\" className={classes.detectClick} onClick={()=>{props.setIsOpenNotificationsModal(false)}}>{t(\"notificationsModal.viewAll\")}</NavLink>\n                </div>\n                {(notifications.length > 0 && notifications) ? \n                    <div className={classes.notifications  + \" \" + classes.detectClick} ref={modalRef}>\n                        {notifications}\n                    </div> :\n                    <div className={classes.empty  + \" \" + classes.detectClick}>\n                        <span>{t(\"notificationsModal.empty\")}</span>\n                    </div>\n                }\n            </div>\n        </StyledModal>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n    direction: state.common.direction,\n    notifications: state.notifications.unreadNotifications\n});\n\nexport default connect(mapStateToProps, {\n\n})(NotificationsModal);","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Navbar/ProfileMenu/ProfileMenu.jsx",["450","451"],"import React, { useEffect, useReducer, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport classes from './ProfileMenu.module.css';\nimport { logout } from '../../../Store/Reducers/user';\nimport { logout_icon } from '../../../Assets/Images/logout_icon';\nimport { profile_settings_icon } from '../../../Assets/Images/profile_settings_icon';\n\nconst StyledModal = styled.div`\n  direction: ${({ direction }) => direction};\n  transform: ${({ direction }) => (direction === 'ltr' ? 'translateX(-233px) translateY(25px)' : 'translateX(-73px) translateY(25px)')};\n`;\nconst StyledArrow = styled.div`\n  left: ${({ direction }) => (direction === 'ltr' ? '-15px' : '25px')};\n  & div {\n    left: ${({ direction }) => (direction === 'ltr' ? '-4px' : '4px')};\n  }\n`;\n\nconst StyledMenu = styled.div`\n  span {\n    margin-left: ${({ direction }) => (direction === 'ltr' ? '10px' : '0')};\n    margin-right: ${({ direction }) => (direction === 'rtl' ? '10px' : '0')};\n  }\n`;\n\nconst ProfileMenu = props => {\n  const handleLogout = () => {\n    props.logout();\n    props.setIsOpenProfileMenu(false);\n  };\n  const linkRef = useRef(null);\n  const butRef = useRef(null);\n\n  useEffect(() => {\n    linkRef.current.querySelector('svg').classList.add('detectClick');\n    butRef.current.querySelector('svg').classList.add('detectClick');\n    window.addEventListener('mousedown', event => {\n      if (event.target.classList.value.includes('detectClick')) {\n        return;\n      }\n      props.setIsOpenProfileMenu(false);\n    });\n  }, []);\n\n  return (\n    <StyledModal className={classes.main + ' ' + classes.detectClick} direction={props.direction}>\n      <StyledArrow className={classes.arrow + ' ' + classes.detectClick} direction={props.direction}>\n        <div className={classes.innerArrow + ' ' + classes.detectClick}></div>\n      </StyledArrow>\n      <StyledMenu className={classes.menu + ' ' + classes.detectClick} direction={props.direction}>\n        <div className={classes.menuItem + ' ' + classes.withBorder + ' ' + classes.detectClick}>\n          <NavLink\n            ref={linkRef}\n            to=\"/profile\"\n            className={classes.detectClick}\n            onClick={() => {\n              props.setIsOpenProfileMenu(false);\n            }}\n          >\n            {profile_settings_icon}\n            <span className={classes.detectClick}>Profile Settings</span>\n          </NavLink>\n        </div>\n        <div className={classes.menuItem + ' ' + classes.detectClick}>\n          <button\n            ref={butRef}\n            className={classes.detectClick}\n            onClick={() => {\n              handleLogout();\n            }}\n          >\n            {logout_icon}\n            <span className={classes.detectClick}>Logout</span>\n          </button>\n        </div>\n      </StyledMenu>\n    </StyledModal>\n  );\n};\n\nlet mapStateToProps = state => ({\n  direction: state.common.direction,\n});\n\nexport default connect(mapStateToProps, {\n  logout,\n})(ProfileMenu);\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Navbar/Burger/Burger.jsx",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Home/Courses/Courses.jsx",["452","453","454"],"import React from 'react';\nimport classes from './Courses.module.css';\nimport { coursesicon } from '../../../Assets/Images/courses';\nimport { NavLink } from 'react-router-dom';\nimport CourseItem from './CourseItem/CourseItem';\nimport { useTranslation } from 'react-i18next';\nimport { empty_state_icon } from '../../../Assets/Images/empty_state_icon';\n\nconst HomeCourses = (props) => {\n    const {t, i18n} = useTranslation();\n    let maxCoursesToView = 6;\n    let courses = [];\n    if(props.courses){\n        courses = props.courses.map((item, index) => {\n            if(index < maxCoursesToView){\n                return <CourseItem item={item} key={item.courseId}/>\n            }\n        });\n    }\n    \n    return(\n        <div className={classes.main}>\n            <div className={classes.coursesHeader}>\n                <div className={classes.coursesHeaderBlock}>\n                    {coursesicon}\n                    <span>{t('home.courses.title')}</span>\n                </div>\n                <NavLink to=\"/courses\">{t('home.courses.viewAll')}</NavLink>\n            </div>\n            <div className={classes.itemsList}>\n                {(courses.length > 0 && courses != null && courses != undefined) ? courses : \n                    <div className={classes.empty}>\n                        <div className={classes.emptyIcon}>\n                            {empty_state_icon}\n                        </div>\n                        <span>{t(\"home.courses.empty\")}</span>\n                    </div>\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default HomeCourses;","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Home/Activities/HomeActivities.jsx",["455","456","457"],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Notifications/NotificationsModal/NotificationModalItem/NotificationModalItemMenu/NotificationModalItemMenu.jsx",["458","459","460"],"import React from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport classes from './NotificationModalItemMenu.module.css';\nimport markasreadicon from '../../../../../Assets/Images/asreadicon.svg';\nimport deleteicon from '../../../../../Assets/Images/deleteicon.svg';\nimport { useTranslation } from 'react-i18next';\n\nconst StyledModal = styled.div`\n    transform: ${({ direction }) => direction === \"ltr\" ? 'translateY(0px) translateX(-166px)' : 'translateY(0px) translateX(166px);' }; \n`;\n\nconst StyledArrow = styled.div`\n    left: ${({ direction }) => direction === \"ltr\" ? \"-6px\" : \"6px\"};\n    \n    & div{\n        left: ${({ direction }) => direction === \"ltr\" ? \"-4.5px\" : \"3.5px\"};\n    }\n`;\n\nconst StyledSpan = styled.span`\n    margin-left: ${({ direction }) => direction === \"ltr\" ? \"12px\" : \"0\"};\n    margin-right: ${({ direction }) => direction === \"rtl\" ? \"12px\" : \"0\"};\n`;\n\n\nconst NotificationModalItemMenu = (props) => {\n    const {t, i18n} = useTranslation();\n\n    return(\n        <StyledModal className={classes.main   + \" \" + classes.detectClick} direction={props.direction}>\n            <StyledArrow className={classes.arrow   + \" \" + classes.detectClick} direction={props.direction}>\n                <div className={classes.innerArrow   + \" \" + classes.detectClick}></div>\n            </StyledArrow>\n            <div className={classes.body   + \" \" + classes.detectClick}>\n                <button className={classes.detectClick}>\n                    <div className={classes.image   + \" \" + classes.detectClick}>\n                        <img src={markasreadicon} className={classes.detectClick}/>\n                    </div>\n                    <StyledSpan direction={props.direction} className={classes.detectClick}>{t(\"notificationsModal.menu.asRead\")}</StyledSpan>\n                </button>\n                <button className={classes.detectClick}>\n                    <div className={classes.image  + \" \" + classes.detectClick}>\n                        <img src={deleteicon} className={classes.detectClick}/>\n                    </div>\n                    <StyledSpan direction={props.direction} className={classes.detectClick}>{t(\"notificationsModal.menu.delete\")}</StyledSpan>\n                </button>\n            </div>\n        </StyledModal>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n    direction: state.common.direction\n})\n\nexport default connect(mapStateToProps, {\n\n})(NotificationModalItemMenu);\n\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Notifications/NotificationsModal/NotificationModalItem/NotificationModalItem.jsx",["461","462","463","464","465","466"],"import React, { Fragment, useEffect, useRef, useState } from 'react';\nimport classes from './NotificationModalItem.module.css';\nimport { notificationicon } from '../../../../Assets/Images/notification.js';\nimport showmoreicon from \"../../../../Assets/Images/showmoreicon.svg\";\nimport parse from 'html-react-parser';\nimport { useTranslation } from 'react-i18next';\nimport NotificationModalItemMenu from './NotificationModalItemMenu/NotificationModalItemMenu';\n\nconst NotificationModalItem = (props) => {\n    let sendTime = new Date(props.item.generated);\n    let now = new Date();\n\n    const [isOpenMenu, setIsOpenMenu] = useState(false);\n\n    const {t, i18n} = useTranslation();\n    \n    const divRef = useRef(null);\n    const pRef = useRef(null);\n\n    useEffect(()=>{\n        divRef.current.querySelector('svg').classList.add('detectClick')\n        pRef.current.querySelector('strong').classList.add('detectClick')\n    },[]);\n\n    useEffect(()=>{\n        if(props.isScroll){\n            setIsOpenMenu(false);\n        }\n    },[props.isScroll]);\n\n    function secondsToDhms(seconds) {\n        seconds = Number(seconds);\n        let d = Math.floor(seconds / (3600*24));\n        let h = Math.floor(seconds % (3600*24) / 3600);\n        let m = Math.floor(seconds % 3600 / 60);\n        let s = Math.floor(seconds % 60);\n        \n        let dDisplay = d > 0 ? d + (t(\"notificationItem.days\")) : \"\";\n        let hDisplay = h > 0 ? h + (t(\"notificationItem.hours\")) : \"\";\n        let mDisplay = m > 0 ? m + (t(\"notificationItem.minutes\")) : \"\";\n        let sDisplay = s > 0 ? s + (t(\"notificationItem.seconds\")) : \"\";\n\n        if(dDisplay != \"\"){\n            return dDisplay;\n        }else if(hDisplay != \"\"){\n            return hDisplay;\n        }else if(mDisplay != \"\"){\n            return mDisplay;\n        }else{\n            return sDisplay;\n        }\n    }\n\n    let agoTime = secondsToDhms((now.getTime() - sendTime.getTime()) / 1000);\n\n    return(\n        <div className={classes.main  + \" \" + classes.detectClick}>\n            <div ref={divRef} className={classes.image  + \" \" + classes.detectClick}>\n                {notificationicon}\n            </div>\n            <div className={classes.info  + \" \" + classes.detectClick}>\n                <p ref={pRef} className={classes.detectClick}>{parse(props.item.text)}</p>\n                <span className={classes.detectClick}>{agoTime} {t(\"notificationItem.ago\")}</span>\n            </div>\n            <div className={classes.menu   + \" \" + classes.detectClick} onClick={()=>{setIsOpenMenu(!isOpenMenu)}}>\n                <img src={showmoreicon} className={classes.detectClick}/>\n                {isOpenMenu && <NotificationModalItemMenu/>}\n            </div>\n        </div>    \n    );\n}\n\nexport default NotificationModalItem;","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Reports/Filter/Filter.jsx",["467","468"],"import React, { useEffect, useState } from 'react';\nimport classes from './Filter.module.css';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { useTranslation } from 'react-i18next';\n\nconst StyledSelect = styled.div`\n\n`;\n\nconst Filter = (props) => {\n    const { t, i18n } = useTranslation();\n\n    const [isOpenDropdown, setIsOpenDropdown] = useState(false);\n    const [isCourses, setIsCourses] = useState(false)\n    const [isActivities, setIsActivities] = useState(false)\n\n    return (\n        <StyledSelect className={classes.main} width={props.width}>\n            <input hidden type=\"checkout\" defaultValue={isOpenDropdown} checked={isOpenDropdown} />\n            <div className={classes.view} onClick={() => setIsOpenDropdown(!isOpenDropdown)}>\n                <span> {t(\"filterReports.filter\")} </span>\n                <div className={classes.arrow + \" \" + (isOpenDropdown && classes.open)}></div>\n            </div>\n            {isOpenDropdown &&\n                <div className={classes.dropdown + \" \" + (isOpenDropdown && classes.openDropdown)}>\n                    <span className={`${classes.option} ${classes.margin0}`}>\n                        {t(\"filterReports.filteredBy\")}\n                    </span>\n                    <div onClick={() => setIsCourses(!isCourses)} className={`${classes.margin0} ${classes.filter}`}>\n                        <span className={classes.filterText}>{t(\"filterReports.courses\")}</span>\n                        <input type=\"checkbox\" checked={isCourses} value={isCourses}  defaultChecked={isCourses} defaultValue={isCourses}/>\n                        <span className={classes.checkmark}></span>\n                    </div>\n                    <div onClick={() => setIsActivities(!isActivities)} className={`${classes.margin0} ${classes.filter}`}>\n                        <span className={classes.filterText}>{t(\"filterReports.activities\")}</span>\n                        <input type=\"checkbox\" checked={isActivities} value={isActivities}  defaultChecked={isActivities} defaultValue={isActivities}/>\n                        <span className={classes.checkmark}></span>\n                    </div>\n                </div>}\n        </StyledSelect>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n    direction: state.common.direction\n});\n\nexport default connect(mapStateToProps, null)(Filter);","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Navbar/Burger/BurgerMenu.jsx",["469","470"],"import React from 'react';\nimport styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport classes from '../Navbar.module.css';\nimport { useTranslation } from 'react-i18next';\nimport {planeticon} from '../../../Assets/Images/planet_icon'\n\nconst Menu = styled.div`\n    width: 100%;\n    height: 100vh;\n    transform: ${({ open }) => open ? 'translateX(0)' : 'translateX(100%)'};\n    position: fixed;\n    top: 0;\n    left: 0;\n    background-color: #59bcabe3;\n    transition-duration: 0.4s;\n    z-index: 100;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    a{\n        font-size: 35px;\n    }\n    a.active{\n        color: white;\n    }\n\n`;\n\n\nconst BurgerMenu = ({open, setOpen, changeLanguage, language, currentLanguage}) => {\n    const {t, i18n} = useTranslation();\n    return(\n        <Menu open={open}>\n            <nav className={\"nav\"}>\n                <div className={classes.menuItem}>\n                    <NavLink to=\"/home\" activeClassName={\"active\"} onClick={()=>{setOpen(false)}}>{t(\"navbar.home\")}</NavLink>\n                </div>\n                <div className={classes.menuItem}>\n                    <NavLink to=\"/programs\" activeClassName={\"active\"} onClick={()=>{setOpen(false)}}>{t(\"navbar.programs\")}</NavLink>\n                </div>\n                <div className={classes.menuItem}>\n                    <NavLink to=\"/courses\" activeClassName={\"active\"} onClick={()=>{setOpen(false)}}>{t(\"navbar.courses\")}</NavLink>\n                </div>\n                <div className={classes.menuItem}>\n                    <NavLink to=\"/activities\" activeClassName={\"active\"} onClick={()=>{setOpen(false)}}>{t(\"navbar.activities\")}</NavLink>\n                </div>\n                <div className={classes.menuItem}>\n                    <NavLink to=\"/library\" activeClassName={\"active\"} onClick={()=>{setOpen(false)}}>{t(\"navbar.library\")}</NavLink>\n                </div>\n                <div className={classes.menuItem}>\n                    <NavLink to=\"/report\" activeClassName={\"active\"} onClick={()=>{setOpen(false)}}>{t(\"navbar.myreport\")}</NavLink>\n                </div>\n                <div className={classes.langBurgerMenu}>\n                    <button onClick={()=>{changeLanguage(language())}}>\n                            <span className={currentLanguage === \"en\" ? classes.langBurgerMenuActive : \"\"}>\n                                EN\n                            </span>\n                            <span className={currentLanguage === \"ar\" ? classes.langBurgerMenuActive : \"\"}>\n                                AR\n                            </span>\n                    </button>\n                </div>\n            </nav>\n        </Menu>\n    )\n    \n}\n\nexport default BurgerMenu;","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Home/Courses/CourseItem/CourseItem.jsx",["471","472","473"],"import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classes from './CourseItem.module.css';\nimport { useTranslation } from 'react-i18next';\n\n\nconst CourseItem = (props) => {\n    const {t, i18n} = useTranslation();\n\n    return(\n        <div className={classes.main}>\n            <NavLink to={`/courses/${props.item.courseId}`}>\n                {(props.item.image != \"null\") ? <img src={props.item.image}/> : <div className={classes.defaultImg}></div>}\n                \n                <div className={classes.itemInfo}>\n                    <label>{props.item.description}</label>\n                    <h2>{props.item.name}</h2>\n                    <div className={classes.itemFoot}>\n                        <span className={classes.status + \" \" + \n                            ((props.item.inProgress && classes.inProgress) ||\n                            (!props.item.inProgress && classes.completed))}>\n                                {((props.item.inProgress && t('courseMini.inProgress')) ||\n                                (!props.item.inProgress && t('courseMini.progressComplete')))}</span>\n                        <span className={classes.time}>{props.item.startingDate ? props.item.startingDate : t('courseMini.overdue')}</span>\n                    </div>\n                </div>\n                \n            </NavLink>\n        </div>\n    );\n}\n\nexport default CourseItem;","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Services/axios.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Services/index.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Services/activities.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Services/courses.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Services/notifications.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Services/programs.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Services/user.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/index.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/ErrorBoundry.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/index.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Activities/ActivitiesContainer.jsx",["474"],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Library/LibraryContainer.jsx",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Activities/Activities.jsx",["475","476","477"],"import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport classes from './Activities.module.css';\nimport { useTranslation } from 'react-i18next';\nimport ActivityItem from './ActivityItem/ActivityItem';\nimport { NavLink } from 'react-router-dom';\n\nconst StyledLabel = styled.label`\n  margin-left: ${({ direction }) => (direction === 'rtl' ? '56px' : '0')};\n  margin-right: ${({ direction }) => (direction === 'ltr' ? '56px' : '0')};\n`;\n\nconst Activities = props => {\n  const { t, i18n } = useTranslation();\n\n  props.activities.sort(function (a, b) {\n    return new Date(b.end) - new Date(a.end);\n  });\n\n  let activities = props.activities.map(item => {\n    return <ActivityItem item={item} key={item.activityId} width={props.blockWidth} />;\n  });\n\n  return (\n    <div className={classes.main}>\n      <div className={classes.header}>\n        <div className={classes.headerContainer}>\n          <div className={classes.headerHeader}>\n            <h1>{t('activities.title')}</h1>\n            <NavLink to=\"/activities/add\">\n              <div>+</div>\n              {t('activities.addActivityBut')}\n            </NavLink>\n          </div>\n          <div className={classes.filters}>\n            <StyledLabel className={classes.filter} direction={props.direction}>\n              <span className={classes.filterText}>{t('activities.filters.all')}</span>\n              <input\n                type=\"checkbox\"\n                onChange={() => {\n                  props.setAll();\n                }}\n                value={props.all}\n                checked={props.all}\n              />\n              <span className={classes.checkmark}></span>\n            </StyledLabel>\n            <StyledLabel className={classes.filter} direction={props.direction}>\n              <span className={classes.filterText}>{t('activities.filters.completed')}</span>\n              <input\n                type=\"checkbox\"\n                onChange={() => {\n                  props.setCompleted(!props.completed);\n                }}\n                checked={props.completed}\n              />\n              <span className={classes.checkmark}></span>\n            </StyledLabel>\n            <StyledLabel className={classes.filter} direction={props.direction}>\n              <span className={classes.filterText}>{t('activities.filters.inProgress')}</span>\n              <input\n                type=\"checkbox\"\n                onChange={() => {\n                  props.setInProgress(!props.inProgress);\n                }}\n                checked={props.inProgress}\n              />\n              <span className={classes.checkmark}></span>\n            </StyledLabel>\n            <StyledLabel className={classes.filter} direction={props.direction}>\n              <span className={classes.filterText}>{t('activities.filters.notStarted')}</span>\n              <input\n                type=\"checkbox\"\n                onChange={() => {\n                  props.setNotStarted(!props.notStarted);\n                }}\n                checked={props.notStarted}\n              />\n              <span className={classes.checkmark}></span>\n            </StyledLabel>\n            <StyledLabel className={classes.filter} direction={props.direction}>\n              <span className={classes.filterText}>{t('activities.filters.private')}</span>\n              <input\n                type=\"checkbox\"\n                onChange={() => {\n                  props.setPrivateParam(!props.privateParam);\n                }}\n                checked={props.privateParam}\n              />\n              <span className={classes.checkmark}></span>\n            </StyledLabel>\n          </div>\n        </div>\n      </div>\n      <div className={classes.itemsList}>\n        <div className={classes.containerItems}>{activities}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Activities;\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Library/Library.jsx",["478","479"],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Activities/ActivityItem/ActivityItem.jsx",["480"],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Common/Preloader/Preloader.jsx",["481"],"import React from 'react';\nimport preloader from '../../../Assets/Common/preloader.svg';\nimport classes from './Preloader.module.css';\n\nconst Preloader = (props) => {\n    return(\n        <div className={classes.main}>\n            <img src={preloader}/>\n        </div>\n    );\n}\n\nexport default Preloader;","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Common/LoadDataRouter/LoadDataRouter.jsx",["482","483","484","485"],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Common/FormControlls/FormControlls.js",["486"],"import React, { useState } from 'react';\nimport classes from './FormControlls.module.css';\nimport { useTranslation } from 'react-i18next';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport const AuthInput = ({input, meta, ...props}) => {\n    const hasError = meta.touched && meta.error;\n    return(\n        <div className={classes.formControll + \" \" + (hasError && classes.error)}>\n            <input {...input} {...props}/>\n            {hasError && <span>{meta.error}</span>}\n        </div>\n    );\n}\n\nexport const TextAreaCustom = ({input, meta, ...props}) => {\n    const {t, i18n} = useTranslation();\n    const hasError = meta.touched && meta.error;\n    return(\n        <div className={classes.textarea + \" \" + (hasError && classes.error)}>\n            <textarea maxLength={props.maxLength} {...input} {...props} row={props.rows}/>\n            {hasError && <span>{meta.error}</span>}\n            <label>{props.left} {t(\"addActivity.charactersLeft\")}</label>\n        </div>\n    )\n}\n\nexport const Calendar = ({input, meta, ...props}) => {\n    const [startDate, setStartDate] = useState(new Date());\n\n    let handleDate = (date) => {\n        setStartDate(date);\n        input.onChange(date);\n    }\n\n    const hasError = meta.touched && meta.error;\n\n    return(\n        <div className={classes.calendar + \" \" + (hasError && classes.error)}>\n            <DatePicker selected={startDate} onChange={date => handleDate(date)}/>\n            {hasError && <span>{meta.error}</span>}\n        </div>\n    );\n}\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Common/ProgressBar/ProgressBar.jsx",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Common/Cutsom/Select/CustomSelect.jsx",["487"],"import React, { useEffect, useState } from 'react';\nimport classes from './CustomSelect.module.css';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\n\nconst StyledSelect = styled.div`\n    width: ${({ width }) => width + \"%\"};\n`;\n\nconst CustomSelect = ({input, meta, ...props}) => {\n    const [currentOption, setCurrentOption] = useState(props.disableDefValueOptionText ? props.disableDefValueOptionText : props.options[0]);\n    const [isOpenDropdown, setIsOpenDropdown] = useState(false);\n\n    useEffect(()=>{\n        if(input){\n            input.value = \"\"\n        }\n       \n    },[]);\n\n    let handleSelect = (option) => {\n        setCurrentOption(option);\n        if(input){\n            input.onChange(option);\n        }\n        props.setFunction(option);\n        setIsOpenDropdown(false);\n    }\n\n    let options = props.options.map((option, index) => {\n        return <span key={index + \"opt\"} onClick={()=>{handleSelect(option)}} className={classes.option + \" \" + classes.detectClick} {...input}>{option}</span>\n    });\n\n    let hasError = null;\n\n    if(props.disableDefValueOption){\n        hasError = meta.touched && meta.error;\n    }\n\n    return(\n            <StyledSelect className={classes.main + \" \" + (hasError && classes.error) + \" \" + classes.detectClick} width={props.width}>\n                <input hidden type=\"checkout\" value={isOpenDropdown} className={classes.detectClick} defaultValue={isOpenDropdown}/>\n                {/* <input {...input} {...props} value={321}/> */}\n                <div className={classes.view + \" \" + classes.detectClick} onClick={()=>setIsOpenDropdown(!isOpenDropdown)}>\n                    <span className={classes.detectClick}>{currentOption}</span>\n                    <div className={classes.arrow + \" \" + (isOpenDropdown && classes.open) + \" \" + classes.detectClick}></div>\n                </div>\n                {isOpenDropdown && \n                <div className={classes.dropdown + \" \" + (isOpenDropdown && classes.openDropdown) + \" \" + classes.detectClick}>\n                    {props.disableDefValueOption && <span className={classes.option + \" \" + classes.disabled + \" \" + classes.detectClick}>{props.disableDefValueOptionText}</span>}\n                    {options}\n                </div>}\n                {props.disableDefValueOption && \n                    <>\n                        {hasError && <span>{meta.error}</span>}\n                    </>\n                }\n            </StyledSelect>  \n    );\n}\n\nlet mapStateToProps = (state) => ({\n    direction: state.common.direction\n});\n\nexport default connect(mapStateToProps, null)(CustomSelect);","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Common/SearchModal/SearchModal.jsx",["488","489","490","491","492","493"],"import React, { useEffect, useRef, useState } from 'react';\nimport CustomSelect from '../Cutsom/Select/CustomSelect';\nimport classes from './SearchModal.module.css';\nimport { searchicon } from '../../../Assets/Images/searchicon.js';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport { setSearchValue } from '../../../Store/Reducers/common';\n\nconst StyledModal = styled.div`\n  transform: ${({ direction }) => (direction === 'ltr' ? 'translateY(100px) translateX(-647px)' : 'translateY(100px) translateX(647px)')};\n  ../..media screen and (max-width: 1000px) {\n    width: 620px;\n    transform: ${({ direction }) => (direction === 'ltr' ? 'translateY(100px) translateX(-543px)' : 'translateY(100px) translateX(543px)')};\n  }\n  ../..media screen and (max-width: 822px) {\n    width: 520px;\n    transform: ${({ direction }) => (direction === 'ltr' ? 'translateY(100px) translateX(-443px)' : 'translateY(100px) translateX(443px)')};\n  }\n  ../..media screen and (max-width: 693px) {\n    width: 420px;\n    transform: ${({ direction }) => (direction === 'ltr' ? 'translateY(160px) translateX(-343px)' : 'translateY(160px) translateX(343px)')};\n  }\n`;\n\nconst StyledArrow = styled.div`\n  left: ${({ direction }) => (direction === 'ltr' ? '-50px' : '50px')};\n\n  & div {\n    left: ${({ direction }) => (direction === 'ltr' ? '-4.5px' : '3.5px')};\n  }\n`;\n\nconst SearchModal = props => {\n  const [searchValue, setSearchValue] = useState('');\n\n  let filerOne = ['Search everything', 'option1', 'option2'];\n  let filerTwo = ['By anyone', 'option1', 'option2'];\n  let filerThree = ['In all segments', 'option1', 'option2'];\n\n  const linkRef = useRef(null);\n\n  const handleSearch = () => {\n    props.setSearchValue(searchValue);\n    props.setIsOpenSearchModal(false);\n  };\n\n  useEffect(() => {\n    linkRef.current.querySelector('svg').classList.add('detectClick');\n    window.addEventListener('mousedown', event => {\n      if (event.target.classList.value.includes('detectClick')) {\n        return;\n      }\n      props.setIsOpenSearchModal(false);\n    });\n  }, []);\n\n  const [filterOneValue, setFilterOneValue] = useState(filerOne[0]);\n  const [filterTwoValue, setFilterTwoValue] = useState(filerTwo[0]);\n  const [filterThreeValue, setFilterThreeValue] = useState(filerThree[0]);\n\n  return (\n    <StyledModal className={classes.main + ' ' + classes.detectClick} direction={props.direction} direction={props.direction}>\n      <StyledArrow className={classes.arrow + ' ' + classes.detectClick} direction={props.direction} direction={props.direction}>\n        <div class={classes.innerArrow + ' ' + classes.detectClick} direction={props.direction}></div>\n      </StyledArrow>\n      <div className={classes.body + ' ' + classes.detectClick} direction={props.direction}>\n        <div className={classes.searchField + ' ' + classes.detectClick} direction={props.direction}>\n          <NavLink\n            ref={linkRef}\n            to={`/search?value=${searchValue}`}\n            className={classes.detectClick}\n            onClick={() => {\n              handleSearch();\n            }}\n          >\n            {searchicon}\n          </NavLink>\n          <input\n            placeholder=\"Search...\"\n            name={'value'}\n            className={classes.detectClick}\n            onChange={e => {\n              setSearchValue(e.target.value);\n            }}\n          />\n        </div>\n        <div className={classes.filters + ' ' + classes.detectClick} direction={props.direction}>\n          <CustomSelect options={filerOne} setFunction={setFilterOneValue} width={32} />\n          <CustomSelect options={filerTwo} setFunction={setFilterTwoValue} width={32} />\n          <CustomSelect options={filerThree} setFunction={setFilterThreeValue} width={32} />\n        </div>\n      </div>\n    </StyledModal>\n  );\n};\n\nlet mapStateToProps = state => ({\n  direction: state.common.direction,\n  searchValue: state.common.searchValue,\n});\n\nexport default connect(mapStateToProps, {\n  setSearchValue,\n})(SearchModal);\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Activities/index.js",[],{"ruleId":"494","replacedBy":"495"},{"ruleId":"496","replacedBy":"497"},{"ruleId":"498","severity":1,"message":"499","line":31,"column":11,"nodeType":"500","messageId":"501","endLine":31,"endColumn":12},{"ruleId":"502","severity":1,"message":"503","line":10,"column":21,"nodeType":"504","messageId":"505","endLine":10,"endColumn":22,"suggestions":"506"},{"ruleId":"507","severity":1,"message":"508","line":12,"column":6,"nodeType":"509","endLine":12,"endColumn":8,"suggestions":"510"},{"ruleId":"507","severity":1,"message":"508","line":13,"column":6,"nodeType":"509","endLine":13,"endColumn":29,"suggestions":"511"},{"ruleId":"507","severity":1,"message":"508","line":17,"column":6,"nodeType":"509","endLine":17,"endColumn":32,"suggestions":"512"},{"ruleId":"507","severity":1,"message":"508","line":13,"column":6,"nodeType":"509","endLine":13,"endColumn":41,"suggestions":"513"},{"ruleId":"514","severity":1,"message":"515","line":19,"column":27,"nodeType":"516","messageId":"517","endLine":19,"endColumn":29},{"ruleId":"514","severity":1,"message":"515","line":19,"column":61,"nodeType":"516","messageId":"517","endLine":19,"endColumn":63},{"ruleId":"498","severity":1,"message":"518","line":1,"column":28,"nodeType":"500","messageId":"501","endLine":1,"endColumn":36},{"ruleId":"507","severity":1,"message":"508","line":13,"column":6,"nodeType":"509","endLine":13,"endColumn":29,"suggestions":"519"},{"ruleId":"507","severity":1,"message":"508","line":17,"column":6,"nodeType":"509","endLine":17,"endColumn":32,"suggestions":"520"},{"ruleId":"507","severity":1,"message":"508","line":12,"column":6,"nodeType":"509","endLine":12,"endColumn":8,"suggestions":"521"},{"ruleId":"507","severity":1,"message":"508","line":10,"column":6,"nodeType":"509","endLine":10,"endColumn":41,"suggestions":"522"},{"ruleId":"498","severity":1,"message":"523","line":12,"column":15,"nodeType":"500","messageId":"501","endLine":12,"endColumn":19},{"ruleId":"498","severity":1,"message":"524","line":8,"column":10,"nodeType":"500","messageId":"501","endLine":8,"endColumn":21},{"ruleId":"498","severity":1,"message":"525","line":8,"column":23,"nodeType":"500","messageId":"501","endLine":8,"endColumn":37},{"ruleId":"507","severity":1,"message":"508","line":41,"column":6,"nodeType":"509","endLine":41,"endColumn":8,"suggestions":"526"},{"ruleId":"498","severity":1,"message":"523","line":13,"column":14,"nodeType":"500","messageId":"501","endLine":13,"endColumn":18},{"ruleId":"498","severity":1,"message":"523","line":47,"column":14,"nodeType":"500","messageId":"501","endLine":47,"endColumn":18},{"ruleId":"507","severity":1,"message":"508","line":51,"column":6,"nodeType":"509","endLine":51,"endColumn":8,"suggestions":"527"},{"ruleId":"498","severity":1,"message":"523","line":12,"column":14,"nodeType":"500","messageId":"501","endLine":12,"endColumn":18},{"ruleId":"498","severity":1,"message":"523","line":55,"column":14,"nodeType":"500","messageId":"501","endLine":55,"endColumn":18},{"ruleId":"507","severity":1,"message":"508","line":63,"column":6,"nodeType":"509","endLine":63,"endColumn":8,"suggestions":"528"},{"ruleId":"498","severity":1,"message":"529","line":1,"column":17,"nodeType":"500","messageId":"501","endLine":1,"endColumn":26},{"ruleId":"498","severity":1,"message":"518","line":1,"column":28,"nodeType":"500","messageId":"501","endLine":1,"endColumn":36},{"ruleId":"498","severity":1,"message":"523","line":13,"column":15,"nodeType":"500","messageId":"501","endLine":13,"endColumn":19},{"ruleId":"530","severity":1,"message":"531","line":25,"column":3,"nodeType":"532","messageId":"533","endLine":47,"endColumn":5},{"ruleId":"498","severity":1,"message":"523","line":43,"column":14,"nodeType":"500","messageId":"501","endLine":43,"endColumn":18},{"ruleId":"534","severity":1,"message":"535","line":158,"column":15,"nodeType":"536","endLine":158,"endColumn":82},{"ruleId":"498","severity":1,"message":"523","line":16,"column":15,"nodeType":"500","messageId":"501","endLine":16,"endColumn":19},{"ruleId":"498","severity":1,"message":"523","line":9,"column":15,"nodeType":"500","messageId":"501","endLine":9,"endColumn":19},{"ruleId":"537","severity":1,"message":"538","line":14,"column":55,"nodeType":"539","messageId":"540","endLine":14,"endColumn":57},{"ruleId":"537","severity":1,"message":"538","line":20,"column":52,"nodeType":"539","messageId":"540","endLine":20,"endColumn":54},{"ruleId":"534","severity":1,"message":"535","line":36,"column":29,"nodeType":"536","endLine":36,"endColumn":56},{"ruleId":"498","severity":1,"message":"541","line":2,"column":10,"nodeType":"500","messageId":"501","endLine":2,"endColumn":17},{"ruleId":"498","severity":1,"message":"518","line":1,"column":17,"nodeType":"500","messageId":"501","endLine":1,"endColumn":25},{"ruleId":"498","severity":1,"message":"523","line":13,"column":16,"nodeType":"500","messageId":"501","endLine":13,"endColumn":20},{"ruleId":"537","severity":1,"message":"542","line":19,"column":43,"nodeType":"539","messageId":"543","endLine":19,"endColumn":45},{"ruleId":"514","severity":1,"message":"515","line":54,"column":75,"nodeType":"516","messageId":"517","endLine":54,"endColumn":77},{"ruleId":"498","severity":1,"message":"523","line":7,"column":15,"nodeType":"500","messageId":"501","endLine":7,"endColumn":19},{"ruleId":"498","severity":1,"message":"523","line":13,"column":14,"nodeType":"500","messageId":"501","endLine":13,"endColumn":18},{"ruleId":"507","severity":1,"message":"508","line":19,"column":6,"nodeType":"509","endLine":19,"endColumn":8,"suggestions":"544"},{"ruleId":"534","severity":1,"message":"535","line":37,"column":9,"nodeType":"536","endLine":41,"endColumn":11},{"ruleId":"498","severity":1,"message":"545","line":61,"column":7,"nodeType":"500","messageId":"501","endLine":61,"endColumn":22},{"ruleId":"498","severity":1,"message":"523","line":11,"column":14,"nodeType":"500","messageId":"501","endLine":11,"endColumn":18},{"ruleId":"507","severity":1,"message":"508","line":17,"column":6,"nodeType":"509","endLine":17,"endColumn":8,"suggestions":"546"},{"ruleId":"498","severity":1,"message":"523","line":13,"column":14,"nodeType":"500","messageId":"501","endLine":13,"endColumn":18},{"ruleId":"507","severity":1,"message":"508","line":32,"column":6,"nodeType":"509","endLine":32,"endColumn":18,"suggestions":"547"},{"ruleId":"534","severity":1,"message":"535","line":43,"column":11,"nodeType":"536","endLine":46,"endColumn":13},{"ruleId":"534","severity":1,"message":"535","line":47,"column":11,"nodeType":"536","endLine":47,"endColumn":63},{"ruleId":"498","severity":1,"message":"523","line":7,"column":15,"nodeType":"500","messageId":"501","endLine":7,"endColumn":19},{"ruleId":"514","severity":1,"message":"515","line":11,"column":36,"nodeType":"516","messageId":"517","endLine":11,"endColumn":38},{"ruleId":"534","severity":1,"message":"535","line":11,"column":49,"nodeType":"536","endLine":11,"endColumn":78},{"ruleId":"498","severity":1,"message":"523","line":8,"column":14,"nodeType":"500","messageId":"501","endLine":8,"endColumn":18},{"ruleId":"498","severity":1,"message":"548","line":2,"column":16,"nodeType":"500","messageId":"501","endLine":2,"endColumn":27},{"ruleId":"498","severity":1,"message":"523","line":9,"column":16,"nodeType":"500","messageId":"501","endLine":9,"endColumn":20},{"ruleId":"498","severity":1,"message":"523","line":22,"column":15,"nodeType":"500","messageId":"501","endLine":22,"endColumn":19},{"ruleId":"498","severity":1,"message":"523","line":27,"column":15,"nodeType":"500","messageId":"501","endLine":27,"endColumn":19},{"ruleId":"514","severity":1,"message":"515","line":47,"column":21,"nodeType":"516","messageId":"517","endLine":47,"endColumn":23},{"ruleId":"514","severity":1,"message":"515","line":49,"column":27,"nodeType":"516","messageId":"517","endLine":49,"endColumn":29},{"ruleId":"514","severity":1,"message":"515","line":51,"column":27,"nodeType":"516","messageId":"517","endLine":51,"endColumn":29},{"ruleId":"534","severity":1,"message":"535","line":71,"column":17,"nodeType":"536","endLine":71,"endColumn":42},{"ruleId":"498","severity":1,"message":"549","line":2,"column":16,"nodeType":"500","messageId":"501","endLine":2,"endColumn":23},{"ruleId":"498","severity":1,"message":"523","line":9,"column":16,"nodeType":"500","messageId":"501","endLine":9,"endColumn":20},{"ruleId":"498","severity":1,"message":"523","line":6,"column":16,"nodeType":"500","messageId":"501","endLine":6,"endColumn":20},{"ruleId":"498","severity":1,"message":"523","line":43,"column":15,"nodeType":"500","messageId":"501","endLine":43,"endColumn":19},{"ruleId":"507","severity":1,"message":"550","line":64,"column":8,"nodeType":"509","endLine":64,"endColumn":26,"suggestions":"551"},{"ruleId":"498","severity":1,"message":"552","line":1,"column":28,"nodeType":"500","messageId":"501","endLine":1,"endColumn":38},{"ruleId":"507","severity":1,"message":"508","line":45,"column":6,"nodeType":"509","endLine":45,"endColumn":8,"suggestions":"553"},{"ruleId":"498","severity":1,"message":"523","line":10,"column":15,"nodeType":"500","messageId":"501","endLine":10,"endColumn":19},{"ruleId":"537","severity":1,"message":"538","line":14,"column":51,"nodeType":"539","messageId":"540","endLine":14,"endColumn":53},{"ruleId":"514","severity":1,"message":"515","line":31,"column":68,"nodeType":"516","messageId":"517","endLine":31,"endColumn":70},{"ruleId":"498","severity":1,"message":"523","line":11,"column":14,"nodeType":"500","messageId":"501","endLine":11,"endColumn":18},{"ruleId":"537","severity":1,"message":"538","line":21,"column":51,"nodeType":"539","messageId":"540","endLine":21,"endColumn":53},{"ruleId":"514","severity":1,"message":"515","line":36,"column":68,"nodeType":"516","messageId":"517","endLine":36,"endColumn":70},{"ruleId":"498","severity":1,"message":"523","line":28,"column":15,"nodeType":"500","messageId":"501","endLine":28,"endColumn":19},{"ruleId":"534","severity":1,"message":"535","line":38,"column":25,"nodeType":"536","endLine":38,"endColumn":84},{"ruleId":"534","severity":1,"message":"535","line":44,"column":25,"nodeType":"536","endLine":44,"endColumn":80},{"ruleId":"498","severity":1,"message":"554","line":1,"column":17,"nodeType":"500","messageId":"501","endLine":1,"endColumn":25},{"ruleId":"498","severity":1,"message":"523","line":15,"column":15,"nodeType":"500","messageId":"501","endLine":15,"endColumn":19},{"ruleId":"514","severity":1,"message":"515","line":43,"column":21,"nodeType":"516","messageId":"517","endLine":43,"endColumn":23},{"ruleId":"514","severity":1,"message":"515","line":45,"column":27,"nodeType":"516","messageId":"517","endLine":45,"endColumn":29},{"ruleId":"514","severity":1,"message":"515","line":47,"column":27,"nodeType":"516","messageId":"517","endLine":47,"endColumn":29},{"ruleId":"534","severity":1,"message":"535","line":66,"column":17,"nodeType":"536","endLine":66,"endColumn":74},{"ruleId":"498","severity":1,"message":"529","line":1,"column":17,"nodeType":"500","messageId":"501","endLine":1,"endColumn":26},{"ruleId":"498","severity":1,"message":"523","line":12,"column":16,"nodeType":"500","messageId":"501","endLine":12,"endColumn":20},{"ruleId":"498","severity":1,"message":"555","line":6,"column":9,"nodeType":"500","messageId":"501","endLine":6,"endColumn":19},{"ruleId":"498","severity":1,"message":"523","line":33,"column":15,"nodeType":"500","messageId":"501","endLine":33,"endColumn":19},{"ruleId":"498","severity":1,"message":"523","line":8,"column":15,"nodeType":"500","messageId":"501","endLine":8,"endColumn":19},{"ruleId":"514","severity":1,"message":"515","line":13,"column":36,"nodeType":"516","messageId":"517","endLine":13,"endColumn":38},{"ruleId":"534","severity":1,"message":"535","line":13,"column":49,"nodeType":"536","endLine":13,"endColumn":78},{"ruleId":"507","severity":1,"message":"508","line":13,"column":6,"nodeType":"509","endLine":13,"endColumn":29,"suggestions":"556"},{"ruleId":"498","severity":1,"message":"529","line":1,"column":17,"nodeType":"500","messageId":"501","endLine":1,"endColumn":26},{"ruleId":"498","severity":1,"message":"518","line":1,"column":28,"nodeType":"500","messageId":"501","endLine":1,"endColumn":36},{"ruleId":"498","severity":1,"message":"523","line":14,"column":14,"nodeType":"500","messageId":"501","endLine":14,"endColumn":18},{"ruleId":"498","severity":1,"message":"523","line":13,"column":14,"nodeType":"500","messageId":"501","endLine":13,"endColumn":18},{"ruleId":"514","severity":1,"message":"515","line":77,"column":88,"nodeType":"516","messageId":"517","endLine":77,"endColumn":90},{"ruleId":"498","severity":1,"message":"523","line":33,"column":14,"nodeType":"500","messageId":"501","endLine":33,"endColumn":18},{"ruleId":"534","severity":1,"message":"535","line":8,"column":13,"nodeType":"536","endLine":8,"endColumn":35},{"ruleId":"498","severity":1,"message":"518","line":1,"column":28,"nodeType":"500","messageId":"501","endLine":1,"endColumn":36},{"ruleId":"498","severity":1,"message":"557","line":6,"column":10,"nodeType":"500","messageId":"501","endLine":6,"endColumn":15},{"ruleId":"507","severity":1,"message":"558","line":31,"column":6,"nodeType":"509","endLine":31,"endColumn":18,"suggestions":"559"},{"ruleId":"507","severity":1,"message":"560","line":35,"column":6,"nodeType":"509","endLine":35,"endColumn":32,"suggestions":"561"},{"ruleId":"498","severity":1,"message":"523","line":18,"column":15,"nodeType":"500","messageId":"501","endLine":18,"endColumn":19},{"ruleId":"507","severity":1,"message":"562","line":19,"column":7,"nodeType":"509","endLine":19,"endColumn":9,"suggestions":"563"},{"ruleId":"507","severity":1,"message":"508","line":56,"column":7,"nodeType":"509","endLine":56,"endColumn":9,"suggestions":"564"},{"ruleId":"498","severity":1,"message":"565","line":58,"column":12,"nodeType":"500","messageId":"501","endLine":58,"endColumn":26},{"ruleId":"498","severity":1,"message":"566","line":59,"column":12,"nodeType":"500","messageId":"501","endLine":59,"endColumn":26},{"ruleId":"498","severity":1,"message":"567","line":60,"column":12,"nodeType":"500","messageId":"501","endLine":60,"endColumn":28},{"ruleId":"568","severity":1,"message":"569","line":63,"column":103,"nodeType":"570","endLine":63,"endColumn":130},{"ruleId":"568","severity":1,"message":"569","line":64,"column":108,"nodeType":"570","endLine":64,"endColumn":135},"no-native-reassign",["571"],"no-negated-in-lhs",["572"],"no-unused-vars","'t' is assigned a value but never used.","Identifier","unusedVar","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["573","574"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["575"],["576"],["577"],["578"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useState' is defined but never used.",["579"],["580"],["581"],["582"],"'i18n' is assigned a value but never used.","'searchValue' is assigned a value but never used.","'setSearchValue' is assigned a value but never used.",["583"],["584"],["585"],"'useEffect' is defined but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'connect' is defined but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside",["586"],"'ProfilePassword' is assigned a value but never used.",["587"],["588"],"'useLocation' is defined but never used.","'NavLink' is defined but never used.","React Hook useEffect has missing dependencies: 'logit' and 'props'. Either include them or remove the dependency array. Mutable values like 'modalRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["589"],"'useReducer' is defined but never used.",["590"],"'Fragment' is defined but never used.","'planeticon' is defined but never used.",["591"],"'Login' is defined but never used.","React Hook useEffect has missing dependencies: 'getProfile', 'getUnreadNotifications', 'getUserProfile', 'isStartData', 'limit', and 'user.organizationId'. Either include them or remove the dependency array. If 'getUnreadNotifications' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["592"],"React Hook useEffect has a missing dependency: 'setCurrentRoute'. Either include it or remove the dependency array. Outer scope values like 'window.location.pathname' aren't valid dependencies because mutating them doesn't re-render the component.",["593"],"React Hook useEffect has a missing dependency: 'input'. Either include it or remove the dependency array.",["594"],["595"],"'filterOneValue' is assigned a value but never used.","'filterTwoValue' is assigned a value but never used.","'filterThreeValue' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"messageId":"596","fix":"597","desc":"598"},{"messageId":"599","fix":"600","desc":"601"},{"desc":"602","fix":"603"},{"desc":"604","fix":"605"},{"desc":"606","fix":"607"},{"desc":"608","fix":"609"},{"desc":"604","fix":"610"},{"desc":"606","fix":"611"},{"desc":"602","fix":"612"},{"desc":"613","fix":"614"},{"desc":"602","fix":"615"},{"desc":"602","fix":"616"},{"desc":"602","fix":"617"},{"desc":"602","fix":"618"},{"desc":"602","fix":"619"},{"desc":"620","fix":"621"},{"desc":"622","fix":"623"},{"desc":"602","fix":"624"},{"desc":"604","fix":"625"},{"desc":"626","fix":"627"},{"desc":"628","fix":"629"},{"desc":"630","fix":"631"},{"desc":"602","fix":"632"},"removeEscape",{"range":"633","text":"634"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"635","text":"636"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [props]",{"range":"637","text":"638"},"Update the dependencies array to be: [props, props.user.employeeId]",{"range":"639","text":"640"},"Update the dependencies array to be: [props, props.user.joinedCourses]",{"range":"641","text":"642"},"Update the dependencies array to be: [props, props.currentPage, props.pageSize]",{"range":"643","text":"644"},{"range":"645","text":"640"},{"range":"646","text":"642"},{"range":"647","text":"638"},"Update the dependencies array to be: [props.pageSize, props.currentPage, props]",{"range":"648","text":"649"},{"range":"650","text":"638"},{"range":"651","text":"638"},{"range":"652","text":"638"},{"range":"653","text":"638"},{"range":"654","text":"638"},"Update the dependencies array to be: [props, props.user]",{"range":"655","text":"656"},"Update the dependencies array to be: [logit, props]",{"range":"657","text":"658"},{"range":"659","text":"638"},{"range":"660","text":"640"},"Update the dependencies array to be: [employeeId, getProfile, getUnreadNotifications, getUserProfile, isStartData, limit, user.organizationId]",{"range":"661","text":"662"},"Update the dependencies array to be: [setCurrentRoute]",{"range":"663","text":"664"},"Update the dependencies array to be: [input]",{"range":"665","text":"666"},{"range":"667","text":"638"},[202,203],"",[202,202],"\\",[408,410],"[props]",[490,513],"[props, props.user.employeeId]",[596,622],"[props, props.user.joinedCourses]",[536,571],"[props, props.currentPage, props.pageSize]",[497,520],[603,629],[420,422],[374,409],"[props.pageSize, props.currentPage, props]",[1232,1234],[2017,2019],[2074,2076],[670,672],[568,570],[994,1006],"[props, props.user]",[2261,2279],"[logit, props]",[1603,1605],[482,505],[935,947],"[employeeId, getProfile, getUnreadNotifications, getUserProfile, isStartData, limit, user.organizationId]",[1023,1049],"[setCurrentRoute]",[612,614],"[input]",[2207,2209]]