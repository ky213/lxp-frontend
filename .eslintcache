[{"/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/index.js":"1","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/reportWebVitals.js":"2","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/App.js":"3","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Redux/reduxStore.js":"4","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Utils/i18n.js":"5","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Common/Preloader/Preloader.jsx":"6","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Redux/commonReducer.js":"7","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Redux/coursesReducer.js":"8","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Redux/activitiesReducer.js":"9","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Redux/programsReducer.js":"10","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Redux/userReducer.js":"11","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Redux/notificationsReducer.js":"12","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Home/HomeContainer.jsx":"13","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Courses/CoursesContainer.jsx":"14","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Common/LoadDataRouter/LoadDataRouter.jsx":"15","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Navbar/NavbarContainer.jsx":"16","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Reports/ReportsContainer.jsx":"17","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Programs/ProgramsContainer.jsx":"18","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/SearchResult/SearchResultContainer.jsx":"19","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Lessons/LessonsContainer.jsx":"20","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Notifications/NotificationsContainer.jsx":"21","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Profile/Profile.jsx":"22","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Activites/ActivitiesContainer.jsx":"23","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Activity/AddActivity/AddActivity.jsx":"24","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Activity/EditActivity/EditActivity.jsx":"25","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Auth/Login/Login.jsx":"26","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Auth/Forgot/ForgotPassword.jsx":"27","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Activity/Activity.jsx":"28","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Api/api.js":"29","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Utils/validators.js":"30","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Common/FormControlls/FormControlls.js":"31","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Home/Home.jsx":"32","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Reports/Reports.jsx":"33","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Lessons/Lessons.jsx":"34","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Courses/Courses.jsx":"35","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Programs/Programs.jsx":"36","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Notifications/Notifications.jsx":"37","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Navbar/Navbar.jsx":"38","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/SearchResult/SearchResult.jsx":"39","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Profile/Notifications/ProfileNotifications.jsx":"40","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Activites/Activities.jsx":"41","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Profile/Email/ProfileEmail.jsx":"42","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Profile/Password/ProfilePassword.jsx":"43","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Profile/Info/ProfileInfo.jsx":"44","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Activity/DeleteActivity/DeleteActivity.jsx":"45","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Common/ProgressBar/ProgressBar.jsx":"46","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Common/Cutsom/Select/CustomSelect.jsx":"47","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Assets/Images/empty_state_icon.js":"48","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Assets/Images/notification.js":"49","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Assets/Images/planet_icon.js":"50","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Assets/Images/searchicon.js":"51","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Assets/Images/homeicon.js":"52","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Assets/Images/courses.js":"53","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Assets/Images/activities.js":"54","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Assets/Images/myreport.js":"55","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Assets/Images/programicon.js":"56","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Home/Statistic/Statistic.jsx":"57","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Courses/CourseItemView/CourseItemView.jsx":"58","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Reports/ReportDetails/ReportDetails.jsx":"59","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Notifications/NotificationItem/NotificationItem.jsx":"60","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Activites/ActivityItem/ActivityItem.jsx":"61","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Notifications/NotificationsModal/NotificationsModal.jsx":"62","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Navbar/Burger/Burger.jsx":"63","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Navbar/ProfileMenu/ProfileMenu.jsx":"64","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Common/SearchModal/SearchModal.jsx":"65","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Reports/UserInfo/UserInfo.jsx":"66","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Home/Courses/Courses.jsx":"67","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Reports/ReportMain/ReportMain.jsx":"68","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Home/Activities/HomeActivities.jsx":"69","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Assets/Images/clock.js":"70","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Notifications/NotificationsModal/NotificationModalItem/NotificationModalItemMenu/NotificationModalItemMenu.jsx":"71","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Assets/Images/logout_icon.js":"72","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Assets/Images/profile_settings_icon.js":"73","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Notifications/NotificationsModal/NotificationModalItem/NotificationModalItem.jsx":"74","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Navbar/Burger/BurgerMenu.jsx":"75","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Home/Courses/CourseItem/CourseItem.jsx":"76","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Reports/Filter/Filter.jsx":"77"},{"size":731,"mtime":1609773052234,"results":"78","hashOfConfig":"79"},{"size":362,"mtime":1608556637827,"results":"80","hashOfConfig":"79"},{"size":4349,"mtime":1610359876055,"results":"81","hashOfConfig":"79"},{"size":863,"mtime":1609758262545,"results":"82","hashOfConfig":"79"},{"size":532,"mtime":1609236007438,"results":"83","hashOfConfig":"79"},{"size":303,"mtime":1608556637827,"results":"84","hashOfConfig":"79"},{"size":1720,"mtime":1610359876059,"results":"85","hashOfConfig":"79"},{"size":1295,"mtime":1609843282850,"results":"86","hashOfConfig":"79"},{"size":1639,"mtime":1609773166160,"results":"87","hashOfConfig":"79"},{"size":1341,"mtime":1609930462737,"results":"88","hashOfConfig":"79"},{"size":2893,"mtime":1609843093110,"results":"89","hashOfConfig":"79"},{"size":3272,"mtime":1610105622758,"results":"90","hashOfConfig":"79"},{"size":1554,"mtime":1610104080239,"results":"91","hashOfConfig":"79"},{"size":1954,"mtime":1610089985064,"results":"92","hashOfConfig":"79"},{"size":1618,"mtime":1609843112742,"results":"93","hashOfConfig":"79"},{"size":1896,"mtime":1610359876059,"results":"94","hashOfConfig":"79"},{"size":1519,"mtime":1610095276193,"results":"95","hashOfConfig":"79"},{"size":1999,"mtime":1610089509124,"results":"96","hashOfConfig":"79"},{"size":2213,"mtime":1610089060151,"results":"97","hashOfConfig":"79"},{"size":352,"mtime":1609925955834,"results":"98","hashOfConfig":"79"},{"size":909,"mtime":1610362356800,"results":"99","hashOfConfig":"79"},{"size":2439,"mtime":1609856599650,"results":"100","hashOfConfig":"79"},{"size":3078,"mtime":1610371545067,"results":"101","hashOfConfig":"79"},{"size":7017,"mtime":1610443089852,"results":"102","hashOfConfig":"79"},{"size":7445,"mtime":1610443581203,"results":"103","hashOfConfig":"79"},{"size":3111,"mtime":1609757838200,"results":"104","hashOfConfig":"79"},{"size":2901,"mtime":1610088234463,"results":"105","hashOfConfig":"79"},{"size":7807,"mtime":1609925313821,"results":"106","hashOfConfig":"79"},{"size":2117,"mtime":1610103765484,"results":"107","hashOfConfig":"79"},{"size":634,"mtime":1610376139775,"results":"108","hashOfConfig":"79"},{"size":1552,"mtime":1610442664031,"results":"109","hashOfConfig":"79"},{"size":1870,"mtime":1609755554292,"results":"110","hashOfConfig":"79"},{"size":854,"mtime":1610359876059,"results":"111","hashOfConfig":"79"},{"size":512,"mtime":1609926909470,"results":"112","hashOfConfig":"79"},{"size":2935,"mtime":1610090105702,"results":"113","hashOfConfig":"79"},{"size":3315,"mtime":1610095539491,"results":"114","hashOfConfig":"79"},{"size":1963,"mtime":1610368650940,"results":"115","hashOfConfig":"79"},{"size":7221,"mtime":1610444850343,"results":"116","hashOfConfig":"79"},{"size":5909,"mtime":1610448851792,"results":"117","hashOfConfig":"79"},{"size":1473,"mtime":1609857572238,"results":"118","hashOfConfig":"79"},{"size":3930,"mtime":1610090651482,"results":"119","hashOfConfig":"79"},{"size":2117,"mtime":1609854738403,"results":"120","hashOfConfig":"79"},{"size":2601,"mtime":1609920422765,"results":"121","hashOfConfig":"79"},{"size":2679,"mtime":1610094331612,"results":"122","hashOfConfig":"79"},{"size":1222,"mtime":1609925190026,"results":"123","hashOfConfig":"79"},{"size":774,"mtime":1610372806121,"results":"124","hashOfConfig":"79"},{"size":2601,"mtime":1610447742492,"results":"125","hashOfConfig":"79"},{"size":1071,"mtime":1609766236474,"results":"126","hashOfConfig":"79"},{"size":1007,"mtime":1608556637827,"results":"127","hashOfConfig":"79"},{"size":645,"mtime":1610372806121,"results":"128","hashOfConfig":"79"},{"size":728,"mtime":1609339730930,"results":"129","hashOfConfig":"79"},{"size":1250,"mtime":1608556637827,"results":"130","hashOfConfig":"79"},{"size":1441,"mtime":1608556637827,"results":"131","hashOfConfig":"79"},{"size":1762,"mtime":1608556637827,"results":"132","hashOfConfig":"79"},{"size":657,"mtime":1608556637827,"results":"133","hashOfConfig":"79"},{"size":1534,"mtime":1608556637827,"results":"134","hashOfConfig":"79"},{"size":2950,"mtime":1609841355377,"results":"135","hashOfConfig":"79"},{"size":1386,"mtime":1609926494157,"results":"136","hashOfConfig":"79"},{"size":2794,"mtime":1610095539491,"results":"137","hashOfConfig":"79"},{"size":3023,"mtime":1610371443489,"results":"138","hashOfConfig":"79"},{"size":3123,"mtime":1610377825855,"results":"139","hashOfConfig":"79"},{"size":4057,"mtime":1610448545024,"results":"140","hashOfConfig":"79"},{"size":1654,"mtime":1610367993999,"results":"141","hashOfConfig":"79"},{"size":3122,"mtime":1610448498575,"results":"142","hashOfConfig":"79"},{"size":4122,"mtime":1610448382088,"results":"143","hashOfConfig":"79"},{"size":1204,"mtime":1609860279900,"results":"144","hashOfConfig":"79"},{"size":1590,"mtime":1609930719062,"results":"145","hashOfConfig":"79"},{"size":5398,"mtime":1610377825859,"results":"146","hashOfConfig":"79"},{"size":1775,"mtime":1610374499262,"results":"147","hashOfConfig":"79"},{"size":573,"mtime":1608556637827,"results":"148","hashOfConfig":"79"},{"size":2471,"mtime":1610446187754,"results":"149","hashOfConfig":"79"},{"size":1568,"mtime":1609766251634,"results":"150","hashOfConfig":"79"},{"size":1206,"mtime":1609766268418,"results":"151","hashOfConfig":"79"},{"size":2772,"mtime":1610448685980,"results":"152","hashOfConfig":"79"},{"size":2544,"mtime":1610374123951,"results":"153","hashOfConfig":"79"},{"size":1401,"mtime":1609926518538,"results":"154","hashOfConfig":"79"},{"size":2225,"mtime":1610377825855,"results":"155","hashOfConfig":"79"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},"1kufze2",{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"158"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"158"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"158"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"158"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"158"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"158"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"158"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"158"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"158"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"158"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"158"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"158"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"158"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"218","messages":"219","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"220","messages":"221","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"158"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"158"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"158"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"158"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"158"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"158"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"158"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"158"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"256","messages":"257","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"158"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"158"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"158"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"158"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"158"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"158"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"158"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"158"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"158"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"158"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"158"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"317","messages":"318","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"319","messages":"320","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"158"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"158"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"158"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"158"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"341","messages":"342","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"158"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"158"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"158"},"/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/index.js",[],["350","351"],"/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/reportWebVitals.js",[],"/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/App.js",["352"],"import React from \"react\";\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Activity from \"./Components/Activity/Activity\";\nimport LoadDataRouter from \"./Components/Common/LoadDataRouter/LoadDataRouter\";\nimport CoursesContainer from \"./Components/Courses/CoursesContainer\";\nimport HomeContainer from \"./Components/Home/HomeContainer\";\nimport NavbarContainer from \"./Components/Navbar/NavbarContainer\";\nimport styled from \"styled-components\";\nimport { useTranslation } from \"react-i18next\";\nimport { connect } from \"react-redux\";\nimport { setDirection, setCurrentLanguage } from \"./Redux/commonReducer\";\nimport ActivitiesContainer from \"./Components/Activites/ActivitiesContainer\";\nimport Login from \"./Components/Auth/Login/Login\";\nimport AddActivity from \"./Components/Activity/AddActivity/AddActivity\";\nimport ForgotPassword from \"./Components/Auth/Forgot/ForgotPassword\";\nimport ReportsContainer from \"./Components/Reports/ReportsContainer\";\nimport Profile from \"./Components/Profile/Profile\";\nimport EditActivity from \"./Components/Activity/EditActivity/EditActivity\";\nimport LessonsContainer from \"./Components/Lessons/LessonsContainer\";\nimport ProgramsContainer from \"./Components/Programs/ProgramsContainer\";\nimport SearchResultContainer from \"./Components/SearchResult/SearchResultContainer\";\nimport NotificationsContainer from \"./Components/Notifications/NotificationsContainer\";\n\nconst StyledContentContainer = styled.div`\n  width: 100%;\n  direction: ${({ direction }) => direction};\n`;\n\nconst App = (props) => {\n  const { t, i18n } = useTranslation();\n\n  const changeLanguage = (language) => {\n    switch (language) {\n      case \"en\": {\n        props.setDirection(\"ltr\");\n        break;\n      }\n      case \"ar\": {\n        props.setDirection(\"rtl\");\n        break;\n      }\n      default: {\n        props.setDirection(\"ltr\");\n        break;\n      }\n    }\n    i18n.changeLanguage(language);\n  };\n\n  return (\n    <BrowserRouter>\n      <StyledContentContainer direction={props.direction}>\n        <NavbarContainer changeLanguage={changeLanguage} />\n        <Switch>\n          <Route exact path=\"/\">\n            <Redirect to=\"/home\" />\n          </Route>\n          <Route\n            exact\n            path=\"/home\"\n            render={() => <LoadDataRouter Component={HomeContainer} />}\n          />\n          <Route\n            exact\n            path=\"/courses\"\n            render={() => <LoadDataRouter Component={CoursesContainer} />}\n          />\n          <Route\n            path=\"/courses/:courseId\"\n            render={() => <LoadDataRouter Component={LessonsContainer} />}\n          />\n          <Route\n            path=\"/activities/view/:activityId\"\n            render={() => <LoadDataRouter Component={Activity} />}\n          />\n          <Route\n            exact\n            path=\"/activities\"\n            render={() => <LoadDataRouter Component={ActivitiesContainer} />}\n          />\n          <Route\n            path=\"/activities/add\"\n            render={() => <LoadDataRouter Component={AddActivity} />}\n          />\n          <Route\n            path=\"/activities/edit/:activityId\"\n            render={() => <LoadDataRouter Component={EditActivity} />}\n          />\n          <Route\n            path=\"/programs\"\n            render={() => <LoadDataRouter Component={ProgramsContainer} />}\n          />\n          <Route\n            path=\"/profile\"\n            render={() => <LoadDataRouter Component={Profile} />}\n          />\n          <Route path=\"/login\" render={() => <Login />} />\n          <Route path=\"/forgot_password\" render={() => <ForgotPassword />} />\n          <Route\n            path=\"/report\"\n            render={() => <LoadDataRouter Component={ReportsContainer} />}\n          />\n          <Route\n            path=\"/search\"\n            render={() => <LoadDataRouter Component={SearchResultContainer} />}\n          />\n          <Route\n            path=\"/home/notifications\"\n            render={() => <LoadDataRouter Component={NotificationsContainer} />}\n          />\n        </Switch>\n      </StyledContentContainer>\n    </BrowserRouter>\n  );\n};\n\nlet mapStateToProps = (state) => ({\n  direction: state.common.direction,\n  currentLanguage: state.common.currentLanguage,\n});\n\nexport default connect(mapStateToProps, {\n  setDirection,\n  setCurrentLanguage,\n})(App);\n","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Redux/reduxStore.js",[],"/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Utils/i18n.js",[],"/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Common/Preloader/Preloader.jsx",["353"],"import React from 'react';\nimport preloader from '../../../Assets/Common/preloader.svg';\nimport classes from './Preloader.module.css';\n\nconst Preloader = (props) => {\n    return(\n        <div className={classes.main}>\n            <img src={preloader}/>\n        </div>\n    );\n}\n\nexport default Preloader;","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Redux/commonReducer.js",[],"/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Redux/coursesReducer.js",["354","355"],"import { coursesApi } from '../Api/api';\nimport img1 from '../Assets/Images/Mocks/img1.jpg';\nimport img2 from '../Assets/Images/Mocks/img2.jpg';\nimport { setIsFetching } from './commonReducer';\n\nconst SET_COURSES_DATA = 'SET_COURSES_DATA';\nconst SET_JOINED_COURSES = 'SET_JOINED_COURSES';\n\nlet initialState = {\n    courses: [],\n    page: 1,\n    take: 20,\n    joinedCourses: []\n}\n\nconst coursesReducer = (state = initialState, action) => {\n    switch(action.type){\n        case SET_COURSES_DATA: {\n            return { ...state, courses: action.courses }\n        }\n        case SET_JOINED_COURSES: {\n            return { ...state, joinedCourses: action.joinedCourses }\n        }\n        default:\n            return state;\n    }\n}\n\nexport const setCoursesData = (courses) => ({\n    type: SET_COURSES_DATA, courses\n});\nexport const setJoinedCourses = (joinedCourses) => ({\n    type: SET_JOINED_COURSES, joinedCourses\n});\n\nexport const getCourses = (organizationId, page, take) => async (dispatch) => {\n    dispatch(setIsFetching(true));\n    try{\n        let respnose = await coursesApi.getCourses(organizationId, page, take);\n        dispatch([setCoursesData(respnose.courses), setIsFetching(false)]);\n    }catch(err){\n        dispatch(setIsFetching(false));\n    }\n}\n\nexport default coursesReducer;","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Redux/activitiesReducer.js",[],"/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Redux/programsReducer.js",[],"/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Redux/userReducer.js",[],"/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Redux/notificationsReducer.js",[],"/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Home/HomeContainer.jsx",["356","357","358"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Preloader from '../Common/Preloader/Preloader';\nimport Home from './Home';\nimport { getCourses, setJoinedCourses } from '../../Redux/coursesReducer';\nimport { getActivities } from '../../Redux/activitiesReducer';\n\nconst HomeContainer = (props) => {\n    useEffect(()=>{\n        if(props.user.employeeId){\n            props.getActivities(props.user.employeeId, props.user.userId, props.user.organizationId);\n        }\n    },[props.user.employeeId]);\n\n    useEffect(()=>{\n        props.setJoinedCourses(props.user.joinedCourses);\n    },[props.user.joinedCourses]);\n    \n    return(\n        <>\n            {props.isFetching && <Preloader/>}\n            {props.isAuth && <Home user={props.user}\n                                    courses={props.courses}\n                                    activities={props.activities}\n                                    direction={props.direction}\n                                    programs={props.programs}/>}\n        </>\n        \n    );\n}\n\nlet mapStateToProps = (state) => ({\n    isFetching: state.common.isFetching,\n    user: state.user.user,\n    isAuth: state.user.isAuth,\n    courses: state.courses.joinedCourses,\n    activities: state.activities.activities,\n    page: state.courses.page,\n    take: state.courses.take,\n    direction: state.common.direction,\n    programs: state.programs.programs\n});\n\nexport default connect(mapStateToProps, {\n    getCourses,\n    getActivities,\n    setJoinedCourses\n})(HomeContainer);","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Courses/CoursesContainer.jsx",["359"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Courses from './Courses';\nimport { getCourses } from '../../Redux/coursesReducer';\nimport Preloader from '../Common/Preloader/Preloader';\n\nconst CoursesContainer = (props) => {\n    useEffect(()=>{\n        if(props.page && props.take){\n            props.getCourses(props.user.organizationId, props.page, props.take);\n        }\n    },[]);\n\n    const [all, setAll] = useState(true);\n    const [completed, setCompleted] = useState(true);\n    const [inProgress, setInProgress] = useState(true);\n    const [notStarted, setNotStarted] = useState(true);\n\n    const handleAll = () => {\n        let newAll = !all;\n        setAll(!all);\n        if(newAll){\n            setCompleted(true);\n            setInProgress(true);\n            setNotStarted(true);\n            return;\n        }else{\n            setCompleted(false);\n            setInProgress(false);\n            setNotStarted(false);\n        }\n    } \n\n    useEffect(()=>{\n        if(completed && inProgress && notStarted){\n            setAll(true);\n        }else{\n            setAll(false)\n        }\n    },[completed, inProgress, notStarted]);\n\n    return(\n        <>\n            {props.isFetching ? <Preloader/> :\n            <Courses courses={props.courses} direction={props.direction}\n                    all={all} setAll={handleAll}\n                    completed={completed} setCompleted={setCompleted}\n                    inProgress={inProgress} setInProgress={setInProgress}\n                    notStarted={notStarted} setNotStarted={setNotStarted}/>}\n        </>\n        \n    );\n}\n\nlet mapStateToProps = (state) => ({\n    courses: state.courses.courses,\n    user: state.user.user,\n    isFetching: state.common.isFetching,\n    page: state.courses.page,\n    take: state.courses.take,\n    direction: state.common.direction\n});\n\nexport default connect(mapStateToProps, {\n    getCourses\n})(CoursesContainer);","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Common/LoadDataRouter/LoadDataRouter.jsx",["360","361","362"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { setCurrentRoute } from '../../../Redux/commonReducer';\nimport { getUserProfile, getProfile } from '../../../Redux/userReducer';\nimport Login from '../../Auth/Login/Login';\nimport { getUnreadNotifications } from '../../../Redux/notificationsReducer';\n\nconst LoadDataRouter = ({Component, isAuth, setCurrentRoute,\n                        currentRoute, getUserProfile, getProfile, isStartData,\n                        getUnreadNotifications, user, limit, employeeId}) => {\n    useEffect(()=>{\n        setCurrentRoute(window.location.pathname);\n        if((localStorage.usertoken || sessionStorage.usertoken) && !isStartData){\n            if(employeeId){\n                getUserProfile(employeeId);\n            }else{\n                getProfile(localStorage.usertoken || sessionStorage.usertoken);\n            }\n            getUnreadNotifications(limit, user.organizationId);\n        }   \n    },[employeeId]);\n    return(\n        <>\n            {(localStorage.usertoken || sessionStorage.usertoken) ? <Component/> : <Redirect to=\"/login\"/>}\n        </>\n        \n    )\n}\n\nlet mapStateToProps = (state) => ({\n    isAuth: state.user.isAuth,\n    currentRoute: state.common.currentRoute,\n    isStartData: state.user.isStartData,\n    user: state.user.user,\n    limit: state.notifications.limit,\n    employeeId: state.user.employeeId\n});\n\nexport default connect(mapStateToProps, {\n    setCurrentRoute,\n    getUserProfile,\n    getProfile,\n    getUnreadNotifications\n})(LoadDataRouter);","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Navbar/NavbarContainer.jsx",["363","364","365"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Navbar from './Navbar';\nimport { getNotifications } from '../../Redux/notificationsReducer';\nimport { setCurrentLanguage } from '../../Redux/commonReducer';\n\nconst NavbarContainer = (props) => {\n    const [isOpenSearchModal, setIsOpenSearchModal] = useState(false);\n    const [isOpenNotificationsModal, setIsOpenNotificationsModal] = useState(false);\n    \n    useEffect(()=>{\n        props.getNotifications(props.currentPage, props.pageSize)\n    },[props.currentPage, props.pageSize]);\n\n    return(\n        <>\n        {(props.currentRoute != \"/login\" && props.currentRoute != \"/forgot_password\") &&\n        <Navbar user={props.user} \n                changeLanguage={props.changeLanguage}\n                direction={props.direction}\n                setIsOpenSearchModal={setIsOpenSearchModal}\n                isOpenSearchModal={isOpenSearchModal}\n                totalUnreadNotificationsCount={props.totalUnreadNotificationsCount}\n                unreadNotifications={props.unreadNotifications}\n                setIsOpenNotificationsModal={setIsOpenNotificationsModal}\n                isOpenNotificationsModal={isOpenNotificationsModal}\n                setCurrentLanguage={props.setCurrentLanguage}\n                />}\n        </>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n    user: state.user.user,\n    direction: state.common.direction,\n    currentRoute: state.common.currentRoute,\n    unreadNotifications: state.notifications.unreadNotifications,\n    totalUnreadNotificationsCount: state.notifications.totalUnreadNotificationsCount,\n    currentPage: state.notifications.currentPage,\n    pageSize: state.notifications.pageSize,\n    notifications: state.notifications.notifications\n});\n\nexport default connect(mapStateToProps, {\n    getNotifications,\n    setCurrentLanguage\n})(NavbarContainer);","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Reports/ReportsContainer.jsx",["366","367","368"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Preloader from '../Common/Preloader/Preloader';\nimport Reports from './Reports';\nimport { getActivities } from '../../Redux/activitiesReducer';\nimport { setJoinedCourses } from '../../Redux/coursesReducer';\n\nconst ReportsContainer = (props) => {\n    useEffect(()=>{\n        if(props.user.employeeId){\n            props.getActivities(props.user.employeeId, props.user.userId, props.user.organizationId);\n            \n        }\n    },[props.user.employeeId]);\n\n    useEffect(()=>{\n        props.setJoinedCourses(props.user.joinedCourses);\n    },[props.user.joinedCourses]);\n\n\n    return(\n        <>\n            {props.isFetching ? <Preloader/> : <>\n            {   <Reports user={props.user}\n                            courses={props.courses}\n                            activities={props.activities}\n                            direction={props.direction}\n                            programs={props.programs}/>} </>}\n        </>\n        \n    );\n}\n\nlet mapStateToProps = (state) => ({\n    isFetching: state.common.isFetching,\n    user: state.user.user,\n    isAuth: state.user.isAuth,\n    courses: state.courses.joinedCourses,\n    activities: state.activities.currentActivity,\n    page: state.courses.page,\n    take: state.courses.take,\n    direction: state.common.direction,\n    programs: state.programs.programs\n});\n\nexport default connect(mapStateToProps, {\n    getActivities,\n    setJoinedCourses\n})(ReportsContainer);","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Programs/ProgramsContainer.jsx",["369"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Programs from './Programs';\nimport { getPrograms } from '../../Redux/programsReducer';\nimport Preloader from '../Common/Preloader/Preloader';\n\n\nconst ProgramsContainer = (props) => {\n    useEffect(()=>{\n        if(props.user.organizationId){\n            props.getPrograms(props.user.organizationId, props.pageId, props.perPage);\n        }\n    },[]);\n\n    const [all, setAll] = useState(true);\n    const [completed, setCompleted] = useState(true);\n    const [inProgress, setInProgress] = useState(true);\n    const [notStarted, setNotStarted] = useState(true);\n\n    const handleAll = () => {\n        let newAll = !all;\n        setAll(!all);\n        if(newAll){\n            setCompleted(true);\n            setInProgress(true);\n            setNotStarted(true);\n            return;\n        }else{\n            setCompleted(false);\n            setInProgress(false);\n            setNotStarted(false);\n        }\n    } \n\n    useEffect(()=>{\n        if(completed && inProgress && notStarted){\n            setAll(true);\n        }else{\n            setAll(false)\n        }\n    },[completed, inProgress, notStarted]);\n\n    return(\n        <>\n            {props.isFetching ? <Preloader/> :\n            <Programs programs={props.programs} \n                    direction={props.direction}\n                    all={all} setAll={handleAll}\n                    completed={completed} setCompleted={setCompleted}\n                    inProgress={inProgress} setInProgress={setInProgress}\n                    notStarted={notStarted} setNotStarted={setNotStarted}/>}\n        </>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n    user: state.user.user,\n    programs: state.programs.programs,\n    isFetching: state.common.isFetching,\n    direction: state.common.direction,\n    pageId: state.programs.pageId,\n    perPage: state.programs.perPage\n});\n\nexport default connect(mapStateToProps, {\n    getPrograms\n})(ProgramsContainer);","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/SearchResult/SearchResultContainer.jsx",["370","371","372"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Preloader from '../Common/Preloader/Preloader';\nimport SearchResult from './SearchResult';\nimport { setSearchValue } from '../../Redux/commonReducer'\n\nconst SearchResultContainer = (props) => {\n    const [searchValue, setSearchValue] = useState(\"\");\n\n    const [viewAll, setViewAll] = useState(true);\n    const [viewPrograms, setViewPrograms] = useState(true);\n    const [viewCourses, setViewCourses] = useState(true);\n    const [viewActivities, setViewActivities] = useState(true);\n\n    const handleViewAll = () => {\n        let newViewAll = !viewAll;\n        setViewAll(!viewAll);\n        if(newViewAll){\n            setViewPrograms(true);\n            setViewCourses(true);\n            setViewActivities(true);\n            return;\n        }else{\n            setViewPrograms(false);\n            setViewCourses(false);\n            setViewActivities(false);\n        }\n    }\n\n    useEffect(()=>{\n        if(viewActivities && viewCourses && viewPrograms){\n            setViewAll(true);\n        }else{\n            setViewAll(false)\n        }\n    },[viewPrograms, viewCourses, viewActivities]);\n\n\n\n    useEffect(()=>{\n        const urlParams = new URLSearchParams(window.location.search);\n        props.setSearchValue(urlParams.get(\"value\"));\n    },[]);\n\n    useEffect(()=>{\n        console.log(\"search\")\n    },[props.searchValue]);\n\n    return(\n        <>\n            {props.isFetching ? <Preloader/> :\n            <SearchResult searchValue={props.searchValue}\n                        viewAll={viewAll} setViewAll={handleViewAll}\n                        viewCourses={viewCourses} setViewCourses={setViewCourses}\n                        viewPrograms={viewPrograms} setViewPrograms={setViewPrograms}\n                        viewActivities={viewActivities} setViewActivities={setViewActivities}\n                        direction={props.direction}/>}\n        </>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n    isFetching: state.common.isFetching,\n    searchValue: state.common.searchValue,\n    direction: state.common.direction\n});\n\nexport default connect(mapStateToProps, {\n    setSearchValue\n})(SearchResultContainer);","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Lessons/LessonsContainer.jsx",[],"/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Notifications/NotificationsContainer.jsx",["373"],"import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Preloader from '../Common/Preloader/Preloader';\nimport Notifications from './Notifications';\nimport { getNotifications } from '../../Redux/notificationsReducer';\n\nconst NotificationsContainer = (props) => {\n    useEffect(()=>{\n        props.getNotifications(props.currentPage, props.pageSize);\n    },[props.pageSize, props.currentPage]);\n\n    return(\n        <>\n            {props.isFetching ? <Preloader/> :\n            <Notifications notifications={props.notifications}/>}\n        </>\n    )\n}\n\nlet mapStateToProps = (state) => ({\n    isFetching: state.common.isFetching,\n    notifications: state.notifications.notifications,\n    currentPage: state.notifications.currentPage,\n    pageSize: state.notifications.pageSize,\n    \n});\n\nexport default connect(mapStateToProps, {\n    getNotifications\n})(NotificationsContainer);","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Profile/Profile.jsx",["374"],"import React from 'react';\nimport { connect } from 'react-redux';\nimport classes from './Profile.module.css';\nimport { useTranslation } from 'react-i18next';\nimport { NavLink, Redirect, Route } from 'react-router-dom';\nimport ProfileInfo from './Info/ProfileInfo';\nimport ProfileEmail from './Email/ProfileEmail';\nimport ProfilePassword from './Password/ProfilePassword';\nimport ProfileNotifications from './Notifications/ProfileNotifications';\n\nconst Profile = (props) => {\n    const {t, i18n} = useTranslation();\n    return(\n        <div className={classes.main}>\n            <div className={classes.container}>\n                <h1>{t(\"profile.title\")}</h1>\n                <div className={classes.body}>\n                    <div className={classes.menu}>\n                        <div className={classes.menuItem}>\n                            <NavLink to=\"/profile/info\" activeClassName={classes.active}>{t(\"profile.tabs.info\")}</NavLink>\n                        </div>\n                        <div className={classes.menuItem}>\n                            <NavLink to=\"/profile/email\" activeClassName={classes.active}>{t(\"profile.tabs.email\")}</NavLink>\n                        </div>\n                        <div className={classes.menuItem}>\n                            <NavLink to=\"/profile/password\" activeClassName={classes.active}>{t(\"profile.tabs.password\")}</NavLink>\n                        </div>\n                        <div className={classes.menuItem}>\n                            <NavLink to=\"/profile/notifications\" activeClassName={classes.active}>{t(\"profile.tabs.notifications\")}</NavLink>\n                        </div>\n                    </div>\n                    <div className={classes.content}>\n                        <Route exact path=\"/profile\">\n                            <Redirect to=\"/profile/info\"/>\n                        </Route>\n                        <Route path=\"/profile/info\" render={()=><ProfileInfo/>}/>\n                        <Route path=\"/profile/email\" render={()=><ProfileEmail/>}/>\n                        <Route path=\"/profile/password\" render={()=><ProfilePassword/>}/>\n                        <Route path=\"/profile/notifications\" render={()=><ProfileNotifications/>}/>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n    user: state.user.user\n});\n\nexport default connect(mapStateToProps, {})(Profile);","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Activites/ActivitiesContainer.jsx",["375"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Activities from './Activities';\nimport { getActivities } from '../../Redux/activitiesReducer';\nimport Preloader from '../Common/Preloader/Preloader';\nimport { useLayoutEffect } from 'react';\n\nconst ActivitiesContainer = (props) => {\n    useEffect(()=>{\n        if(props.user.employeeId){\n            props.getActivities(props.user.employeeId, props.user.userId, props.user.organizationId);\n        }  \n    },[props.user.employeeId]);\n\n    const [all, setAll] = useState(true);\n    const [completed, setCompleted] = useState(true);\n    const [inProgress, setInProgress] = useState(true);\n    const [notStarted, setNotStarted] = useState(true);\n    const [privateParam, setPrivateParam] = useState(true);\n\n    const handleAll = () => {\n        let newAll = !all;\n        setAll(!all);\n        if(newAll){\n            setCompleted(true);\n            setInProgress(true);\n            setNotStarted(true);\n            setPrivateParam(true);\n            return;\n        }else{\n            setCompleted(false);\n            setInProgress(false);\n            setNotStarted(false);\n            setPrivateParam(false);\n        }\n    } \n\n    useEffect(()=>{\n        if(completed && inProgress && notStarted && privateParam){\n            setAll(true);\n        }else{\n            setAll(false)\n        }\n    },[completed, inProgress, notStarted, privateParam]);\n\n\n    const [size, setSize] = useState([window.outerWidth, window.innerHeight]);\n    const [blockWidth, setBlockWidth] = useState(49);\n\n    useLayoutEffect(()=>{\n        function updateSize(){\n            setSize([window.outerWidth, window.innerHeight]);\n        }\n        window.addEventListener('resize', updateSize);\n        updateSize();\n        return () => window.removeEventListener('resize', updateSize);\n    },[]);\n\n    useEffect(()=>{\n        if(size[0] > 700){\n            setBlockWidth(49);\n        }else{\n            setBlockWidth(100);\n        }\n    },[size]);\n\n\n    return(\n        <>\n            {props.isFetching ? <Preloader/> :\n            <>\n                {props.isAuth && \n                    <Activities activities={props.activities}\n                                direction={props.direction}\n                                blockWidth={blockWidth}\n                                all={all} setAll={handleAll}\n                                completed={completed} setCompleted={setCompleted}\n                                inProgress={inProgress} setInProgress={setInProgress}\n                                notStarted={notStarted} setNotStarted={setNotStarted}\n                                privateParam={privateParam} setPrivateParam={setPrivateParam}/>}\n            </>}\n        </>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n    isFetching: state.common.isFetching,\n    user: state.user.user,\n    activities: state.activities.activities,\n    isAuth: state.user.isAuth,\n    direction: state.common.direction\n});\n\nexport default connect(mapStateToProps, {\n    getActivities\n})(ActivitiesContainer);","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Activity/AddActivity/AddActivity.jsx",["376","377","378","379","380"],"/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Activity/EditActivity/EditActivity.jsx",["381","382","383","384","385"],"/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Auth/Login/Login.jsx",["386","387","388"],"import React, { useEffect, useState } from 'react';\nimport classes from '../Auth.module.css';\nimport { reduxForm, Field } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport Preloader from '../../Common/Preloader/Preloader';\nimport { AuthInput } from '../../Common/FormControlls/FormControlls';\nimport { useTranslation } from 'react-i18next';\nimport { login } from '../../../Redux/userReducer';\nimport { setCurrentRoute } from '../../../Redux/commonReducer';\nimport { isEmail, required } from '../../../Utils/validators';\n\nconst LoginForm = (props) => {\n    const {t, i18n} = useTranslation();\n    return(\n        <form className={classes.form} onSubmit={props.handleSubmit}>\n            <h3>{t(\"login.title\")}</h3>\n            <div className={classes.field}>\n                <label>{t(\"login.username\")}</label>\n                <Field component={AuthInput} placeholder={t(\"login.usernamePlaceholder\")} name=\"email\"\n                        validate={[required, isEmail]}/>\n            </div>\n            <div className={classes.field}>\n                <label>{t(\"login.password\")}</label>\n                <Field component={AuthInput} placeholder={t(\"login.passwordPlaceholder\")} name=\"password\" type=\"password\"\n                        validate={[required]}/>\n            </div>\n            <label className={classes.checkbox}>\n                <span className={classes.checkText}>{t(\"login.rememberMe\")}</span>\n                <input type=\"checkbox\"  onChange={()=>{props.setIsRememberMe(!props.isRememberMe)}} value={props.isRememberMe}/>\n                <span className={classes.checkmark}></span>\n            </label>\n            <NavLink to=\"/forgot_password\">{t(\"login.forgotPassword\")}</NavLink>\n            {props.error && <div className={classes.error}>{props.error}</div>}\n            <button>{t(\"login.login\")}</button>\n        </form>\n    );\n}\n\nconst LoginReduxForm = reduxForm({form:'login'})(LoginForm);\n\nconst Login = (props) => {\n    const [isRememberMe, setIsRememberMe] = useState(false);\n    const {t, i18n} = useTranslation();\n\n    useEffect(()=>{\n        props.setCurrentRoute(window.location.pathname);\n    },[]);\n\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, isRememberMe);\n    }\n    return(\n        <div className={classes.main}>\n            {(localStorage.usertoken || sessionStorage.usertoken) && <Redirect to=\"/\"/>}\n            <div className={classes.login}>\n                <h1>{t(\"login.header\")}</h1>\n                {props.isFetching && <Preloader/>}\n                <LoginReduxForm onSubmit={onSubmit} isRememberMe={isRememberMe} setIsRememberMe={setIsRememberMe}/>\n            </div>\n            <div className={classes.back}>\n                <div></div>\n                <div className={classes.green}></div>\n            </div>\n            \n        </div>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n    isFetching: state.common.isFetching,\n    isAuth: state.user.isAuth\n});\n\nexport default connect(mapStateToProps, {\n    login,\n    setCurrentRoute\n})(Login);\n\n\n\n","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Auth/Forgot/ForgotPassword.jsx",["389","390","391"],"import React, { useEffect } from 'react';\nimport classes from '../Auth.module.css';\nimport { useTranslation } from 'react-i18next';\nimport { Field, reduxForm } from 'redux-form';\nimport { AuthInput } from '../../Common/FormControlls/FormControlls';\nimport { required, passValidationMatch } from '../../../Utils/validators';\nimport Preloader from '../../Common/Preloader/Preloader';\nimport { connect } from 'react-redux';\nimport { setCurrentRoute } from '../../../Redux/commonReducer';\nimport { Redirect } from 'react-router-dom';\n\nconst ForgotPasswordForm = (props) => {\n    const {t, i18n} = useTranslation();\n    return(\n        <form className={classes.form} onSubmit={props.handleSubmit}>\n            <h3>{t(\"forgotPassword.title\")}</h3>\n            <div className={classes.field}>\n                <label>{t(\"forgotPassword.oldPassword\")}</label>\n                <Field component={AuthInput} placeholder={t(\"forgotPassword.oldPassword\")} name=\"oldPassword\" type=\"password\"\n                    validate={[required]}/>\n            </div>\n            <div className={classes.field}>\n                <label>{t(\"forgotPassword.newPassword\")}</label>\n                <Field component={AuthInput} placeholder={t(\"forgotPassword.newPassword\")} name=\"newPassword\" type=\"password\"\n                    validate={[required]}/>\n            </div>\n            <div className={classes.field}>\n                <label>{t(\"forgotPassword.repeatPassword\")}</label>\n                <Field component={AuthInput} placeholder={t(\"forgotPassword.repeatPassword\")} name=\"repeatPassword\" type=\"password\"\n                    validate={[required, passValidationMatch]}/>\n            </div>\n            {props.error && <div className={classes.error}>{props.error}</div>}\n            <button>{t(\"forgotPassword.submit\")}</button>\n        </form>\n    )\n}\n\nconst ForgotPasswordReduxForm = reduxForm({form: 'forgotPass'})(ForgotPasswordForm);\n\nconst ForgotPassword = (props) => {\n    const {t, i18n} = useTranslation();\n\n    const onSubmit = (formData) => {\n        console.log(formData);\n    }\n\n    useEffect(()=>{\n        props.setCurrentRoute(window.location.pathname);\n    },[]);\n\n    return(\n        <div className={classes.main}>\n            {(localStorage.usertoken || sessionStorage.usertoken) && <Redirect to=\"/\"/>}\n            <div className={classes.login}>\n                <h1>{t(\"forgotPassword.header\")}</h1>\n                {props.isFetching && <Preloader/>}\n                <ForgotPasswordReduxForm onSubmit={onSubmit}/>\n            </div>\n            <div className={classes.back}>\n                <div></div>\n                <div className={classes.green}></div>\n            </div>\n            \n        </div>\n    )\n}\n\nlet mapStateToProps = (state) => ({\n    isFetching: state.common.isFetching,\n    isAuth: state.user.isAuth\n});\n\nexport default connect(mapStateToProps, {\n    setCurrentRoute\n})(ForgotPassword);","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Activity/Activity.jsx",["392","393","394"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport ProgressBar from '../Common/ProgressBar/ProgressBar';\nimport classes from './Activity.module.css';\nimport { setCurrentActivity } from '../../Redux/activitiesReducer';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport Preloader from '../Common/Preloader/Preloader';\nimport { setIsFetching } from '../../Redux/commonReducer';\nimport { getActivity } from '../../Redux/activitiesReducer';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\nimport DeleteActivity from './DeleteActivity/DeleteActivity';\n\nconst StyledMarkButton = styled.button`\n    margin-left: ${({ direction }) => direction === \"ltr\" ? \"8px\" : \"0\"};\n    margin-right: ${({ direction }) => direction === \"rtl\" ? \"8px\" : \"0\"};\n`;\n\nconst StyledLeftSide = styled.div`\n    margin-left: ${({ direction }) => direction === \"rtl\" ? \"30px\" : \"0\"};\n    margin-right: ${({ direction }) => direction === \"ltr\" ? \"30px\" : \"0\"};\n`;\n\nconst StyledProgressSpan = styled.span`\n    margin-left: ${({ direction }) => direction === \"ltr\" ? \"13px\" : \"0\"};\n    margin-right: ${({ direction }) => direction === \"rtl\" ? \"13px\" : \"0\"};\n`;\n\nconst Activity = (props) => {\n    const {t, i18n} = useTranslation();\n    let widthProgressBar = 83;\n    let heightProgressBar = 16;\n\n    const [isShowDeleteModal, setIsShowDeleteModal] = useState(false);\n    \n    useEffect(()=>{\n            let activityId = props.match.params.activityId;\n            props.getActivity(activityId, props.user.selectedOrganizationId);\n    },[]);\n\n    const [daysLag, setDaysLag] = useState(0);\n    useEffect(()=>{\n        if(props.activity){\n            const endTime = new Date(props.activity.end);\n            const now = new Date();\n\n            var newDaysLag = Math.ceil(Math.abs(endTime.getTime() - now.getTime()) / (1000 * 3600 * 24));\n            \n            if(endTime >= now){\n                newDaysLag = newDaysLag + t(\"activityMini.daysLeft\");\n            }else{\n                newDaysLag = newDaysLag + t(\"activityMini.daysAgo\");\n            }\n            setDaysLag(newDaysLag);\n        }\n        \n    },[props.activity]);\n    \n\n    return(\n        <div className={classes.main}>\n            {!props.activity ? <Preloader/> :\n            <div className={classes.container}>\n                {isShowDeleteModal && <DeleteActivity setIsShowDeleteModal={setIsShowDeleteModal}/>}\n                <StyledLeftSide className={classes.leftSide} direction={props.direction}>\n                    <div className={classes.block + \" \" + classes.withoutPadding}>\n                        <div className={classes.infoBlock}>\n                            <p>{t(\"home.statistic.infoUser.welcome\")}</p>\n                            <h3>{props.user.name}</h3>\n                        </div>\n                        <div className={classes.infoBlock}>\n                            <label>{t(\"home.statistic.infoUser.learningHours\")}</label>\n                            <span><strong>34 {t(\"home.statistic.infoUser.hours\")}</strong> {t(\"home.statistic.infoUser.and\")} <strong>54 {t(\"home.statistic.infoUser.mins\")}</strong></span>\n                        </div>\n                        <hr className={classes.line}/>\n                        <div className={classes.infoBlock}>\n                            <label>{t(\"home.statistic.infoUser.learningGoal\")}</label>\n                            <span><strong>34 {t(\"home.statistic.infoUser.hours\")}</strong></span>\n                        </div>\n                    </div>\n                    <div className={classes.block + \" \" + classes.programs}>\n                        <div className={classes.programsHeader}>\n                            <h4>{t(\"home.statistic.programs.related\")}</h4>\n                            <NavLink to=\"/programs\">{t(\"home.statistic.programs.viewAll\")}</NavLink>\n                        </div>\n                        <div className={classes.progressBlock}>\n                            <label>Sketching out ideas for securin....</label>\n                            <div className={classes.progressContainer}>\n                                <ProgressBar width={widthProgressBar} height={heightProgressBar} progress={78}/>\n                                <span>78%</span>\n                            </div>\n                        </div>\n                        <div className={classes.progressBlock}>\n                            <label>Team brainstorming</label>\n                            <div className={classes.progressContainer}>\n                                <ProgressBar width={widthProgressBar} height={heightProgressBar} progress={42}/>\n                                <span>42%</span>\n                            </div>\n                        </div>\n                    </div>\n                </StyledLeftSide>\n                <div className={classes.rightSide}>\n                    <div className={classes.tabHeader}>\n                        <h1>{t(\"activityDetails.title\")}</h1>\n                        <span>{t(\"activityDetails.label\")}</span>\n                    </div>\n                    <div className={classes.activity}>\n                        <div className={classes.activityHeader}>\n                            <span className={classes.fullPath}><span className={classes.path}>Cybersecurity awareness &gt;</span> Cybersecurity</span>\n                            <div className={classes.headerRightSide}>\n                                <NavLink to={`/activities/edit/${props.match.params.activityId}`} className={classes.editBut}>\n                                    <i className=\"far fa-edit\"></i>\n                                    {t(\"activityDetails.edit\")}\n                                </NavLink>\n                                <button className={classes.removeBut} onClick={()=>setIsShowDeleteModal(true)}>\n                                    <i className=\"far fa-trash-alt\"></i>\n                                    {t(\"activityDetails.delete\")}\n                                </button>\n                            </div>\n                        </div>\n                        <h2>{props.activity.name}</h2>\n                        <div className={classes.activityFoot}>\n                            <div className={classes.activityProgressBlock}>\n                                <ProgressBar width={widthProgressBar} height={heightProgressBar} progress={props.activity.totalPoints}/>\n                                <StyledProgressSpan direction={props.direction}>{props.activity.totalPoints}%</StyledProgressSpan>\n                            </div>\n                            <div className={classes.activityFootRight}>\n                                <span>{daysLag}</span>\n                                <StyledMarkButton className={classes.mark} direction={props.direction}>{t(\"activityDetails.butComplete\")}</StyledMarkButton>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.videoBlock}>\n                        <div className={classes.video}>\n                            <button>\n                                <i className=\"fas fa-play-circle\"></i>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>}\n        </div>\n    );\n}\n\n\nlet WithUrlDataContainerComponent = withRouter(Activity);\n\nlet mapStateToProps = (state) => ({\n    isFetching: state.common.isFetching,\n    activity: state.activities.currentActivity,\n    activities: state.activities.activities,\n    user: state.user.user,\n    direction: state.common.direction\n})\n\nexport default connect(mapStateToProps, {\n    setCurrentActivity,\n    setIsFetching,\n    getActivity\n})(WithUrlDataContainerComponent);","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Api/api.js",[],"/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Utils/validators.js",["395"],"export const required = (value) =>{\n    if(value) return undefined;\n    \n    return 'The field is required!';\n}\n\nexport const foo = console.log;\n\nexport const isEmail = (value) => {\n    let rep = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\n    if(rep.test(value)){\n        return undefined;\n    }\n    return 'Incorrect email!';   \n}\nexport const passValidationMatch = (value, allValues) => {\n    if(value !== allValues.newPassword) return `Passwords didn't match!`;\n    return undefined;\n}\n\nexport const emailValidationMatch = (value, allValues) => {\n    if(value !== allValues.newEmail) return `Emails didn't match!`;\n    return undefined;\n}","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Common/FormControlls/FormControlls.js",["396"],"/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Home/Home.jsx",[],"/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Reports/Reports.jsx",[],"/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Lessons/Lessons.jsx",["397"],"import React from 'react';\nimport { connect } from 'react-redux';\nimport classes from './Lessons.module.css';\n\nconst Lessons = (props) => {\n    return(\n        <div className={classes.main}>\n            <div className={classes.header}>\n                <div className={classes.container}>\n                    \n                </div>\n            </div>\n            <div className={classes.container}>\n                <h3>lessons</h3>\n            </div>\n            \n        </div>\n    );\n}\n\nexport default Lessons;","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Courses/Courses.jsx",["398","399","400"],"import React, { useEffect, useState } from 'react';\nimport classes from './Courses.module.css';\nimport CourseItemView from './CourseItemView/CourseItemView';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\n\nconst StyledLabel = styled.label`\n    margin-left: ${({ direction }) => direction === \"rtl\" ? \"56px\" : \"0\"};\n    margin-right: ${({ direction }) => direction === \"ltr\" ? \"56px\" : \"0\"};\n`;\n\nconst Courses = (props) => {\n    const {t, i18n} = useTranslation();\n\n    let courses = props.courses.map(item => {\n        return <CourseItemView item={item} key={item.courseId}/>\n    })\n\n    return(\n        <div className={classes.main}>\n            <div className={classes.coursesHeader}>\n                <div className={classes.coursesHeaderContainer}>\n                    <h1>{t(\"courses.title\")}</h1>\n                    <div className={classes.filters}>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"courses.filters.all\")}</span>\n                            <input type=\"checkbox\" onChange={()=>{props.setAll()}} checked={props.all}/>\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"courses.filters.completed\")}</span>\n                            <input type=\"checkbox\" onChange={()=>{props.setCompleted(!props.completed)}} checked={props.completed}/>\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"courses.filters.inProgress\")}</span>\n                            <input type=\"checkbox\" onChange={()=>{props.setInProgress(!props.inProgress)}} checked={props.inProgress}/>\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"courses.filters.notStarted\")}</span>\n                            <input type=\"checkbox\" onChange={()=>{props.setNotStarted(!props.notStarted)}} checked={props.notStarted}/>\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                    </div>\n                </div>\n            </div>\n            <div className={classes.itemsList}>\n                <div className={classes.containerItems}>\n                    {courses}\n                </div>  \n            </div>\n        </div>\n    );\n}\n\nexport default Courses;","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Programs/Programs.jsx",["401","402","403","404"],"import React, { useState } from 'react';\nimport classes from './Programs.module.css';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\nimport { empty_state_icon } from '../../Assets/Images/empty_state_icon';\n\nconst StyledLabel = styled.label`\n    margin-left: ${({ direction }) => direction === \"rtl\" ? \"56px\" : \"0\"};\n    margin-right: ${({ direction }) => direction === \"ltr\" ? \"56px\" : \"0\"};\n`;\n\nconst Programs = (props) => {\n    const { t, i18n } = useTranslation();\n\n\n\n    let programs = [];\n\n    programs = props.programs.map(program => {\n\n    });\n\n    return (\n        <div className={classes.main}>\n            <div className={classes.header}>\n                <div className={classes.container}>\n                    <h1>{t(\"programs.title\")}</h1>\n                    <div className={classes.filters}>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"courses.filters.all\")}</span>\n                            <input type=\"checkbox\" onChange={() => { props.setAll() }} checked={props.all} value={props.all} />\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"courses.filters.completed\")}</span>\n                            <input type=\"checkbox\" onChange={() => { props.setCompleted(!props.completed) }} checked={props.completed} />\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"courses.filters.inProgress\")}</span>\n                            <input type=\"checkbox\" onChange={() => { props.setInProgress(!props.inProgress) }} checked={props.inProgress} />\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"courses.filters.notStarted\")}</span>\n                            <input type=\"checkbox\" onChange={() => { props.setNotStarted(!props.notStarted) }} checked={props.notStarted} />\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                    </div>\n                </div>\n            </div>\n            <div className={classes.itemsList}>\n                <div className={classes.containerItems}>\n                    {(programs.length > 0 && programs != null && programs != undefined) ? programs :\n                        <div className={classes.empty}>\n                            <div className={classes.emptyIcon}>\n                                {empty_state_icon}\n                            </div>\n                            <span>{t(\"programs.empty\")}</span>\n                        </div>\n                    }\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Programs;","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Notifications/Notifications.jsx",["405","406","407","408"],"import React from 'react';\nimport classes from './Notifications.module.css';\nimport { notificationicon } from '../../Assets/Images/notification';\nimport { useTranslation } from 'react-i18next';\nimport markasreadicon from '../../Assets/Images/asreadicon.svg';\nimport NotificationItem from './NotificationItem/NotificationItem';\n\nconst Notifications = (props) => {\n    const {t, i18n} = useTranslation();\n    \n    let newNotifications = [];\n    let notifications = [];\n\n    newNotifications = props.notifications.map(notify => {\n        if(!notify.isRead){\n            return <NotificationItem isRead={false} item={notify} key={notify.notificationId}/>\n        }\n    });\n\n    notifications = props.notifications.map(notify => {\n        if(notify.isRead){\n            return <NotificationItem isRead={true} item={notify} key={notify.notificationId}/>\n        }\n    })\n\n    return(\n        <div className={classes.main}>\n            <div className={classes.container}>\n                <div className={classes.header}>\n                    <div className={classes.headerSide}>\n                        {notificationicon}\n                        <h3>{t(\"notifications.title\")}</h3>\n                    </div>\n                    <div className={classes.headerSide}>\n                        <button>\n                            <img src={markasreadicon}/>\n                            <span>{t(\"notifications.markAllRead\")}</span>\n                        </button>\n                    </div>\n                </div>\n                <div className={classes.contentContainer}>\n                    <div className={classes.new}>\n                        {newNotifications}\n                    </div>\n                    <h3>{t(\"notifications.earlier\")}</h3>\n                    <div className={classes.itemsList}>\n                        {notifications}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Notifications;\n\n","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Navbar/Navbar.jsx",["409","410"],"/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/SearchResult/SearchResult.jsx",["411"],"/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Profile/Notifications/ProfileNotifications.jsx",["412"],"import React, { useState } from 'react';\nimport classes from './ProfileNotifications.module.css';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\n\nconst ProfileNotifications = (props) => {\n    const {t, i18n} = useTranslation();\n\n    const [enableEmail, setEnableEmail] = useState(false);\n    const [enableText, setEnableText] = useState(false);\n\n    let handleEmail = () => {\n        setEnableEmail(!enableEmail);\n    }\n    let handleText = () => {\n        setEnableText(!enableText);\n    }\n\n    return(\n        <div className={classes.main}>\n            <div className={classes.field}>\n                <label htmlFor=\"email\">{t(\"profile.notifications.email\")}</label>\n                <label className={classes.switch}>\n                    <input type=\"checkbox\" id=\"email\" onChange={handleEmail} value={enableEmail}/>\n                    <span className={classes.slider}></span>\n                </label>\n            </div>\n            <div className={classes.field}>\n                <label htmlFor=\"text\">{t(\"profile.notifications.text\")}</label>\n                <label className={classes.switch}>\n                    <input type=\"checkbox\" id=\"text\" onChange={handleText} value={enableText}/>\n                    <span className={classes.slider}></span>\n                </label>\n            </div>\n        </div>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n\n});\n\nexport default connect(mapStateToProps, {})(ProfileNotifications);","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Activites/Activities.jsx",["413","414","415"],"import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport classes from './Activities.module.css';\nimport { useTranslation } from 'react-i18next';\nimport ActivityItem from './ActivityItem/ActivityItem';\nimport { NavLink } from 'react-router-dom';\n\nconst StyledLabel = styled.label`\n    margin-left: ${({ direction }) => direction === \"rtl\" ? \"56px\" : \"0\"};\n    margin-right: ${({ direction }) => direction === \"ltr\" ? \"56px\" : \"0\"};\n`;\n\nconst Activities = (props) => {\n    const {t, i18n} = useTranslation();\n\n    props.activities.sort(function(a,b){\n        return new Date(b.end) - new Date(a.end);\n    });\n\n    let activities = props.activities.map(item => {\n        return <ActivityItem item={item} key={item.activityId} width={props.blockWidth}/>\n    });\n\n    return(\n        <div className={classes.main}>\n            <div className={classes.header}>\n                <div className={classes.headerContainer}>\n                    <div className={classes.headerHeader}>\n                        <h1>{t(\"activities.title\")}</h1>\n                        <NavLink to=\"/activities/add\">\n                            <div>\n                                +\n                            </div>\n                            {t(\"activities.addActivityBut\")}\n                        </NavLink>\n                    </div>\n                    <div className={classes.filters}>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"activities.filters.all\")}</span>\n                            <input type=\"checkbox\" onChange={()=>{props.setAll()}} value={props.all} checked={props.all}/>\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"activities.filters.completed\")}</span>\n                            <input type=\"checkbox\" onChange={()=>{props.setCompleted(!props.completed)}} checked={props.completed}/>\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"activities.filters.inProgress\")}</span>\n                            <input type=\"checkbox\" onChange={()=>{props.setInProgress(!props.inProgress)}} checked={props.inProgress}/>\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"activities.filters.notStarted\")}</span>\n                            <input type=\"checkbox\" onChange={()=>{props.setNotStarted(!props.notStarted)}} checked={props.notStarted}/>\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"activities.filters.private\")}</span>\n                            <input type=\"checkbox\" onChange={()=>{props.setPrivateParam(!props.privateParam)}} checked={props.privateParam}/>\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                    </div>\n                </div>\n            </div>\n            <div className={classes.itemsList}>\n                <div className={classes.containerItems}>\n                    {activities}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Activities;","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Profile/Email/ProfileEmail.jsx",["416","417"],"import React, { useEffect } from 'react';\nimport classes from './ProfileEmail.module.css';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { AuthInput } from '../../Common/FormControlls/FormControlls';\nimport { emailValidationMatch, isEmail, required } from '../../../Utils/validators';\nimport { NavLink } from 'react-router-dom';\n\nconst ProfileEmailForm = (props) => {\n    const {t, i18n} = useTranslation();\n\n    useEffect(()=>{\n        props.initialize({\n            email: props.user.email\n        });\n    },[]);\n\n    return(\n        <form className={classes.form} onSubmit={props.handleSubmit}>\n            <div className={classes.field + \" \" + classes.fieldBorder}>\n                <label>{t(\"profile.profileEmail.current\")}</label>\n                <Field component={AuthInput} name=\"email\" validate={[required, isEmail]} disabled/>\n            </div>\n            <div className={classes.field}>\n                <label>{t(\"profile.profileEmail.new\")}</label>\n                <Field component={AuthInput} placeholder=\"mail@example.com\" name=\"newEmail\" validate={[required, isEmail]}/>\n            </div>\n            <div className={classes.field}>\n                <label>{t(\"profile.profileEmail.reenter\")}</label>\n                <Field component={AuthInput} placeholder=\"mail@example.com\" name=\"repeatEmail\" validate={[required, isEmail, emailValidationMatch]}/>\n            </div>\n            <div className={classes.fieldBut}>\n                <button>{t(\"profile.saveChanges\")}</button>\n                <NavLink to=\"/profile/info\">{t(\"profile.cancel\")}</NavLink>\n            </div>\n        </form>\n    )\n}\n\nlet ProfileEmailReduxForm = reduxForm({form: \"profileEmail\"})(ProfileEmailForm);\n\nconst ProfileEmail = (props) => {\n    const onSubmit = (formData) => {\n        console.log(formData);\n    }\n\n    return(\n        <ProfileEmailReduxForm onSubmit={onSubmit} user={props.user}/>\n    )\n}\n\nlet mapStateToProps = (state) => ({\n    user: state.user.user\n});\n\nexport default connect(mapStateToProps, {})(ProfileEmail);","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Profile/Password/ProfilePassword.jsx",["418","419","420","421"],"import React, { useEffect, useState } from 'react';\nimport classes from './ProfilePassword.module.css';\nimport { connect } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { AuthInput } from '../../Common/FormControlls/FormControlls';\nimport { Field, reduxForm } from 'redux-form';\nimport { passValidationMatch, required } from '../../../Utils/validators';\nimport { NavLink } from 'react-router-dom';\nimport hide from '../../../Assets/Images/hide.svg';\nimport show from '../../../Assets/Images/Show.svg';\n\nconst ProfilePasswordForm = (props) => {\n    const {t, i18n} = useTranslation();\n\n    useEffect(()=>{\n        props.initialize({\n            password: \"123\"\n        });\n    },[]);\n\n    const [passType, setPassType] = useState(\"password\");\n\n    const handleShowPass = () => {\n        if(passType === \"password\"){\n            setPassType(\"text\");\n            return;\n        }else{\n            setPassType(\"password\");\n        }\n    }\n\n    return(\n        <form className={classes.form} onSubmit={props.handleSubmit}>\n            <div className={classes.field + \" \" + classes.fieldBorder}>\n                <label>{t(\"profile.profilePass.current\")}</label>\n                <Field component={AuthInput} name=\"password\" validate={[required]} disabled type={passType}/>\n                <img src={passType === \"password\" ? hide : show} className={classes.icon + \" \" + (passType === \"text\" && classes.show)} onClick={()=>handleShowPass()}/>\n            </div>\n            <div className={classes.field}>\n                <label>{t(\"profile.profilePass.new\")}</label>\n                <Field component={AuthInput} name=\"newPassword\" validate={[required]} type={\"password\"}/>\n            </div>\n            <div className={classes.field}>\n                <label>{t(\"profile.profilePass.reenter\")}</label>\n                <Field component={AuthInput} name=\"repeatPassword\" validate={[required, passValidationMatch]} type={\"password\"}/>\n            </div>\n            <div className={classes.fieldBut}>\n                <button>{t(\"profile.saveChanges\")}</button>\n                <NavLink to=\"/profile/info\">{t(\"profile.cancel\")}</NavLink>\n            </div>\n        </form>\n    );\n}\n\nlet ProfilePasswordReduxForm = reduxForm({form: 'profilePass'})(ProfilePasswordForm);\n\nconst ProfilePassword = (props) => {\n    const onSubmit = (formData) => {\n        console.log(formData);\n    }\n\n    return(\n        <ProfilePasswordReduxForm onSubmit={onSubmit}/>    \n    );\n}\n\nlet mapStateToProps = (state) => ({\n    \n});\n\nexport default connect(mapStateToProps, {})(ProfilePasswordReduxForm);\n\n","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Profile/Info/ProfileInfo.jsx",["422","423","424","425"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport classes from './ProfileInfo.module.css';\nimport { useTranslation } from 'react-i18next';\nimport { AuthInput } from '../../Common/FormControlls/FormControlls';\nimport { required } from '../../../Utils/validators';\nimport default_user from '../../../Assets/Images/default_user.png';\nimport { NavLink } from 'react-router-dom';\nimport upload_icon from '../../../Assets/Images/upload-icon.svg';\n\nconst ProfileInfoForm = (props) => {\n    const {t, i18n} = useTranslation();\n\n    const [previewImage, setPreviewImage] = useState(null);\n\n    const handleImage = (e) => {\n        e.preventDefault()\n        setPreviewImage(window.URL.createObjectURL(e.target.files[0]));\n    }\n\n    const removeImage = (e) => {\n        e.preventDefault();\n        setPreviewImage(null);\n    }\n\n    useEffect(()=>{\n        props.initialize({\n            name: props.user.name,\n            profilePhoto: props.user.profilePhoto\n        });\n    },[props.user]);\n\n    return(\n        <form className={classes.form} onSubmit={props.handleSubmit}>\n            <div className={classes.field}>\n                <label>{t(\"profile.profileInfo.fullname\")}</label>\n                <Field component={AuthInput} name=\"name\" validate={[required]}/>\n            </div>\n            <div className={classes.fieldImage}>\n                <label>{t(\"profile.profileInfo.photo\")}</label>\n                <label htmlFor=\"image\" className={classes.image}>\n                    <img src={previewImage ? previewImage : (props.user.profilePhoto ? props.user.profilePhoto : default_user)} className={classes.photo}/>\n                    <img src={upload_icon} className={classes.upload}/>\n                </label>\n                <Field component={\"input\"} type=\"file\" name=\"profilePhoto\" id=\"image\" hidden onChange={handleImage}/>\n                <button onClick={(e)=>{removeImage(e)}}>{t(\"profile.profileInfo.remove\")}</button>\n            </div>\n            <div className={classes.fieldBut}>\n                <button>{t(\"profile.saveChanges\")}</button>\n                <NavLink to=\"/profile/info\">{t(\"profile.cancel\")}</NavLink>\n            </div>\n        </form>\n    );\n}\n\nlet ProfileInfoReduxForm = reduxForm({form: \"profileInfo\"})(ProfileInfoForm);\n\n\nconst ProfileInfo = (props) => {\n    const onSubmit = (formData) => {\n        console.log(formData);\n    }\n\n    return(\n        <ProfileInfoReduxForm onSubmit={onSubmit} user={props.user}/>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n    user: state.user.user\n});\n\nexport default connect(mapStateToProps, {\n    \n})(ProfileInfo);","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Activity/DeleteActivity/DeleteActivity.jsx",["426","427"],"import React from 'react';\nimport classes from './DeleteActivity.module.css';\nimport Aos from 'aos';\nimport 'aos/dist/aos.css';\nimport { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport shield from '../../../Assets/Images/shield.svg';\n\nconst DeleteActivity = (props) => {\n    const {t, i18n} = useTranslation();\n\n    useEffect(() => {\n        Aos.init({ duration: 1000 });\n    }, []);\n\n    return(\n        <div className={classes.backGray}>\n            <div className={classes.modal} data-aos=\"fade-down\">\n                <button className={classes.close} onClick={()=>props.setIsShowDeleteModal(false)}>×</button>\n                <img src={shield}/>\n                <h1>{t(\"deleteActivity.title\")}</h1>\n                <span>{t(\"deleteActivity.sub\")}</span>\n                <div className={classes.buttons}>\n                    <button className={classes.del}>{t(\"deleteActivity.delete\")}</button>\n                    <p>&nbsp;&nbsp;&nbsp;&nbsp;</p>\n                    <button className={classes.cancel} onClick={()=>props.setIsShowDeleteModal(false)}>{t(\"deleteActivity.cancel\")}</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default DeleteActivity;","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Common/ProgressBar/ProgressBar.jsx",[],"/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Common/Cutsom/Select/CustomSelect.jsx",["428"],"/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Assets/Images/empty_state_icon.js",[],"/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Assets/Images/notification.js",[],"/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Assets/Images/planet_icon.js",[],"/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Assets/Images/searchicon.js",[],"/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Assets/Images/homeicon.js",[],"/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Assets/Images/courses.js",[],"/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Assets/Images/activities.js",[],"/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Assets/Images/myreport.js",[],"/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Assets/Images/programicon.js",[],"/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Home/Statistic/Statistic.jsx",["429"],"import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport ProgressBar from '../../Common/ProgressBar/ProgressBar';\nimport classes from './Statistic.module.css';\nimport { useTranslation } from 'react-i18next';\n\nconst Statistic = (props) => {\n    const {t, i18n} = useTranslation();\n\n\n    let widthProgressBar = 83;\n    let heightProgressBar = 16;\n    return(\n        <div className={classes.main}>\n            <div className={classes.block + \" \" + classes.withoutPadding}>\n                <div className={classes.infoBlock}>\n                    <p>{t(\"home.statistic.infoUser.welcome\")}</p>\n                    <h3>{props.user.name}</h3>\n                </div>\n                <div className={classes.infoBlock}>\n                    <label>{t(\"home.statistic.infoUser.learningHours\")}</label>\n                    <span><strong>34 {t(\"home.statistic.infoUser.hours\")}</strong> {t(\"home.statistic.infoUser.and\")} <strong>54 {t(\"home.statistic.infoUser.mins\")}</strong></span>\n                </div>\n                <hr className={classes.line}/>\n                <div className={classes.infoBlock}>\n                    <label>{t(\"home.statistic.infoUser.learningGoal\")}</label>\n                    <span><strong>34 {t(\"home.statistic.infoUser.hours\")}</strong></span>\n                </div>\n            </div>\n            <div className={classes.block + \" \" + classes.programs}>\n                <div className={classes.programsHeader}>\n                    <h4>{t(\"home.statistic.programs.programs\")}</h4>\n                    <NavLink to=\"/programs\">{t(\"home.statistic.programs.viewAll\")}</NavLink>\n                </div>\n                <div className={classes.progressBlock}>\n                    <label>Cybersecurity</label>\n                    <div className={classes.progressContainer}>\n                        <ProgressBar width={widthProgressBar} height={heightProgressBar} progress={78}/>\n                        <span>78%</span>\n                    </div>\n                </div>\n                <div className={classes.progressBlock}>\n                    <label>Writing</label>\n                    <div className={classes.progressContainer}>\n                        <ProgressBar width={widthProgressBar} height={heightProgressBar} progress={42}/>\n                        <span>42%</span>\n                    </div>\n                </div>\n                <div className={classes.progressBlock}>\n                    <label>Information Technologies</label>\n                    <div className={classes.progressContainer}>\n                        <ProgressBar width={widthProgressBar} height={heightProgressBar} progress={60}/>\n                        <span>60%</span>\n                    </div>\n                </div>\n            </div>\n            <div className={classes.block + \" \" + classes.stats}>\n                <h4>{t(\"home.statistic.stats.stats\")}</h4>\n            </div>\n        </div>\n    );\n}\n\nexport default Statistic;","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Courses/CourseItemView/CourseItemView.jsx",["430","431","432"],"import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classes from './CourseItemView.module.css';\nimport { useTranslation } from 'react-i18next';\n\nconst CourseItem = (props) => {\n    const {t, i18n} = useTranslation();\n    return(\n        <div className={classes.main}>\n            <NavLink to={`/courses/${props.item.courseId}`}>\n                {(props.item.image != \"null\") ? <img src={props.item.image}/> : <div className={classes.defaultImg}></div>}\n                <div className={classes.itemInfo}>\n                    <label>{props.item.description}</label>\n                    <h2>{props.item.name}</h2>\n                    <div className={classes.itemFoot}>\n                        <span className={classes.status + \" \" + \n                            ((props.item.inProgress && classes.inProgress) ||\n                            (!props.item.inProgress && classes.completed))}>\n                                {((props.item.inProgress && t('courseMini.inProgress')) ||\n                                (!props.item.inProgress && t('courseMini.progressComplete')))}</span>\n                        <span className={classes.time}>{props.item.startingDate ? props.item.startingDate : t('courseMini.overdue')}</span>\n                    </div>\n                </div>\n                \n            </NavLink>\n        </div>\n    );\n}\n\nexport default CourseItem;","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Reports/ReportDetails/ReportDetails.jsx",["433","434"],"import React from 'react';\nimport { Link, useLocation, withRouter } from 'react-router-dom';\nimport classes from './ReportsDetails.module.css';\nimport { empty_state_icon } from '../../../Assets/Images/empty_state_icon';\nimport { searchicon } from '../../../Assets/Images/searchicon'\nimport { useTranslation } from 'react-i18next';\n\nconst ReportsDetails = (props) => {\n    const { t, i18n } = useTranslation();\n    const location = props.match.params.insight;\n    const targetTitle = location.split('_').join(' ')\n    const number = () => {\n        if (location === 'enrolled') {\n            return props.props.courses ? props.props.courses.length : 0\n        } else if (location === 'in_progress') {\n            return props.props.courses ? props.props.courses.filter((cours) => cours.courseProgress > 0).length : 0\n        } else if (location === 'pending') {\n            return props.props.activities ? props.props.activities.length : 0\n        }\n    }\n\n\n    return (\n        <div>\n            <div className={classes.reportDetailsTitle}>\n                <h3>\n                    <Link to='/report'>\n                        {t(\"reports.reportsDetails.generalInsights\")}\n                    </Link>\n                    <span className={classes.detailsItemTitle}>{` ${targetTitle}`}</span>\n                    <span className={classes.numberItems}>{` (${number()})`}</span>\n                </h3>\n                <div className={classes.reportDetailsTitleInput}>\n                    <input type=\"text\" placeholder={t(\"reports.reportsDetails.search\")} />\n                    {searchicon}\n                </div>\n            </div>\n            {location === 'pending' && number() === 0 &&\n                <div className={classes.empty}>\n                    <div className={classes.emptyIcon}>\n                        {empty_state_icon}\n                    </div>\n                    <span>{t(\"reports.reportsDetails.pendingActivities\")}</span>\n                </div>\n            }\n            {location === 'in_progress' && number() === 0 &&\n                <div className={classes.empty}>\n                    <div className={classes.emptyIcon}>\n                        {empty_state_icon}\n                    </div>\n                    <span>{t(\"reports.reportsDetails.enrolledCourses\")}</span>\n                </div>\n            }\n            {location === 'enrolled' && number() === 0 &&\n                <div className={classes.empty}>\n                    <div className={classes.emptyIcon}>\n                        {empty_state_icon}\n                    </div>\n                    <span>{t(\"reports.reportsDetails.inProgressCourses\")}</span>\n                </div>\n            }\n        </div >\n    );\n}\n\nlet WithRouterContainer = withRouter(ReportsDetails);\n\nexport default WithRouterContainer;","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Notifications/NotificationItem/NotificationItem.jsx",["435","436","437","438","439"],"import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport classes from './NotificationItem.module.css';\nimport { notificationicon } from '../../../Assets/Images/notification';\nimport parse from 'html-react-parser';\nimport { useTranslation } from 'react-i18next';\nimport showmoreicon from \"../../../Assets/Images/showmoreicon.svg\";\nimport NotificationModalItemMenu from '../NotificationsModal/NotificationModalItem/NotificationModalItemMenu/NotificationModalItemMenu';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst StyledItem = styled.div`\n    background-color: ${({ isRead }) => isRead ? \"white\" : \"rgba(172, 221, 213, 0.15)\"};\n`;\n\nconst StyledDiv = styled.div`\n    margin-left: ${({ direction }) => direction === \"ltr\" ? '0' : '16px'};\n    margin-right: ${({ direction }) => direction === \"rtl\" ? \"0\" : \"16px\"};\n`;\n\nconst NotificationItem = (props) => {\n    let sendTime = new Date(props.item.generated);\n    let now = new Date();\n\n    const [isOpenMenu, setIsOpenMenu] = useState(false);\n\n    const {t, i18n} = useTranslation();\n\n    useEffect(()=>{\n        if(props.isScroll){\n            setIsOpenMenu(false);\n        }\n    },[props.isScroll]);\n\n    function secondsToDhms(seconds) {\n        seconds = Number(seconds);\n        let d = Math.floor(seconds / (3600*24));\n        let h = Math.floor(seconds % (3600*24) / 3600);\n        let m = Math.floor(seconds % 3600 / 60);\n        let s = Math.floor(seconds % 60);\n        \n        let dDisplay = d > 0 ? d + (t(\"notificationItem.days\")) : \"\";\n        let hDisplay = h > 0 ? h + (t(\"notificationItem.hours\")) : \"\";\n        let mDisplay = m > 0 ? m + (t(\"notificationItem.minutes\")) : \"\";\n        let sDisplay = s > 0 ? s + (t(\"notificationItem.seconds\")) : \"\";\n\n        if(dDisplay != \"\"){\n            return dDisplay;\n        }else if(hDisplay != \"\"){\n            return hDisplay;\n        }else if(mDisplay != \"\"){\n            return mDisplay;\n        }else{\n            return sDisplay;\n        }\n    }\n\n    let agoTime = secondsToDhms((now.getTime() - sendTime.getTime()) / 1000);\n    \n    return(\n        <StyledItem className={classes.main} isRead={props.isRead}>\n            <StyledDiv className={classes.image} direction={props.direction}>\n                {notificationicon}\n            </StyledDiv>\n            <div className={classes.info}>\n                <p>{parse(props.item.text)}</p>\n                <NavLink to={`/home/notifications/${props.item.notificationId}`}>{t(\"notificationItem.link\")}</NavLink>\n                <span>{agoTime} {t(\"notificationItem.ago\")}</span>\n            </div>\n            <div className={classes.menu} onClick={()=>{setIsOpenMenu(!isOpenMenu)}}>\n                <img src={showmoreicon}/>\n                {isOpenMenu && <NotificationModalItemMenu/>}\n            </div>\n        </StyledItem>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n    direction: state.common.direction\n})\n\nexport default connect(mapStateToProps, {})(NotificationItem);","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Activites/ActivityItem/ActivityItem.jsx",["440"],"import React from 'react';\nimport classes from './ActivityItem.module.css';\nimport { clockicon } from '../../../Assets/Images/clock';\nimport { NavLink } from 'react-router-dom';\nimport ProgressBar from '../../Common/ProgressBar/ProgressBar';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\n\n\nconst StyledMain = styled.div`\n    width: ${({ width }) => 'calc(' + width + '% - 32px)'};\n    @media (max-width: 500px) {\n        width: 90%;\n    }\n`;\n\nconst StyledTimeBlock = styled.div`\n    margin-left: ${({ direction }) => direction === \"ltr\" ? \"16px\" : \"0\"};\n    margin-right: ${({ direction }) => direction === \"rtl\" ? \"16px\" : \"0\"};\n`;\n\nconst StyledTimeSpan = styled.span`\n    margin-left: ${({ direction }) => direction === \"ltr\" ? \"4px\" : \"0\"};\n    margin-right: ${({ direction }) => direction === \"rtl\" ? \"4px\" : \"0\"};\n`;\n\nconst StyledProgressSpan = styled.span`\n    margin-left: ${({ direction }) => direction === \"ltr\" ? \"14px\" : \"0\"};\n    margin-right: ${({ direction }) => direction === \"rtl\" ? \"14px\" : \"0\"};\n`;\n\nconst ActivityItem = (props) => {\n    const {t, i18n} = useTranslation();\n    let widthProgressBar = 45;\n    let heightProgressBar = 8;\n\n    const endTime = new Date(props.item.end);\n    const now = new Date();\n\n    var daysLag = Math.ceil(Math.abs(endTime.getTime() - now.getTime()) / (1000 * 3600 * 24));\n    \n    return(\n        <StyledMain className={classes.main} width={props.width}>\n            <NavLink to={`/activities/view/${props.item.activityId}`}>\n                <div className={classes.activityHeader}>\n                    <span className={classes.program}>{(!props.item.description || props.item.description === \"\") ? t(\"activityMini.empty\") : props.item.description}</span>\n                    <div className={classes.headerSide}>\n                        <span className={classes.status}>{props.item.status}</span>\n                        <StyledTimeBlock className={classes.timeBlock} direction={props.direction}>\n                            {clockicon}\n                            <StyledTimeSpan className={classes.time} direction={props.direction}>\n                                {daysLag} \n                                {endTime >= now ? <span>{t(\"activityMini.daysLeft\")}</span>\n                                                : <span>{t(\"activityMini.daysAgo\")}</span>}\n                            </StyledTimeSpan>\n                        </StyledTimeBlock>\n                    </div>\n                    \n                </div>\n                <h3>{props.item.name}</h3>\n                <div className={classes.progressBlock}>\n                    <ProgressBar width={widthProgressBar} height={heightProgressBar} progress={props.item.totalPoints}/>\n                    <StyledProgressSpan direction={props.direction}>{props.item.totalPoints}%</StyledProgressSpan>\n                </div>\n                \n            </NavLink>\n        </StyledMain>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n    direction: state.common.direction\n});\n\nexport default connect(mapStateToProps, {})(ActivityItem);","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Notifications/NotificationsModal/NotificationsModal.jsx",["441","442"],"/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Navbar/Burger/Burger.jsx",[],"/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Navbar/ProfileMenu/ProfileMenu.jsx",["443","444"],"/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Common/SearchModal/SearchModal.jsx",["445","446","447","448","449","450"],"/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Reports/UserInfo/UserInfo.jsx",["451"],"import React from 'react';\nimport classes from './UserInfo.module.css';\nimport { useTranslation } from 'react-i18next';\n\nconst UserInfo = (props) => {\n    const { t, i18n } = useTranslation();\n\n    return (\n        <div className={classes.main}>\n            <div className={classes.block + \" \" + classes.withoutPadding}>\n                <div className={classes.infoBlock}>\n                    <p>{t(\"home.statistic.infoUser.welcome\")}</p>\n                    <h3>{props.user.name}</h3>\n                </div>\n                <div className={classes.infoBlock}>\n                    <label>{t(\"home.statistic.infoUser.learningHours\")}</label>\n                    <span><strong>34 {t(\"home.statistic.infoUser.hours\")}</strong> {t(\"home.statistic.infoUser.and\")} <strong>54 {t(\"home.statistic.infoUser.mins\")}</strong></span>\n                </div>\n                <hr className={classes.line} />\n                <div className={classes.infoBlock}>\n                    <label>{t(\"home.statistic.infoUser.learningGoal\")}</label>\n                    <span><strong>34 {t(\"home.statistic.infoUser.hours\")}</strong></span>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default UserInfo","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Home/Courses/Courses.jsx",["452","453","454"],"import React from 'react';\nimport classes from './Courses.module.css';\nimport { coursesicon } from '../../../Assets/Images/courses';\nimport { NavLink } from 'react-router-dom';\nimport CourseItem from './CourseItem/CourseItem';\nimport { useTranslation } from 'react-i18next';\nimport { empty_state_icon } from '../../../Assets/Images/empty_state_icon';\n\nconst HomeCourses = (props) => {\n    const {t, i18n} = useTranslation();\n    let maxCoursesToView = 6;\n    let courses = [];\n    if(props.courses){\n        courses = props.courses.map((item, index) => {\n            if(index < maxCoursesToView){\n                return <CourseItem item={item} key={item.courseId}/>\n            }\n        });\n    }\n    \n    return(\n        <div className={classes.main}>\n            <div className={classes.coursesHeader}>\n                <div className={classes.coursesHeaderBlock}>\n                    {coursesicon}\n                    <span>{t('home.courses.title')}</span>\n                </div>\n                <NavLink to=\"/courses\">{t('home.courses.viewAll')}</NavLink>\n            </div>\n            <div className={classes.itemsList}>\n                {(courses.length > 0 && courses != null && courses != undefined) ? courses : \n                    <div className={classes.empty}>\n                        <div className={classes.emptyIcon}>\n                            {empty_state_icon}\n                        </div>\n                        <span>{t(\"home.courses.empty\")}</span>\n                    </div>\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default HomeCourses;","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Reports/ReportMain/ReportMain.jsx",["455","456"],"import React from 'react';\nimport { Link, NavLink } from 'react-router-dom'\nimport classes from './ReportMain.module.css';\nimport { useTranslation } from 'react-i18next';\nimport Filter from '../Filter/Filter'\nimport { Chart } from \"react-google-charts\";\n\nexport default function ReportMain({ props }) {\n    const { t, i18n } = useTranslation();\n    const coursesInProgress = props.courses ? props.courses.filter((cours) => cours.courseProgress > 0).length : 0\n    const coursesIsCompleted = props.courses ? props.courses.filter((cours) => cours.isCompleted).length : 0\n    const coursesNotStarted = props.courses ? props.courses.filter((cours) => cours.courseProgress === 0).length : 0\n\n    const firstCourseDaysNumber = 1\n    const secondCourseDaysNumber = 4\n\n    return (\n        <>\n            <div className={classes.tabsBlock}>\n                <h3>\n                    {t(\"reports.insights.title\")}\n                </h3>\n                <ul className={classes.tabs}>\n                    <li>\n                        <Link className={classes.textDecorationNone} to=\"/report/enrolled\">\n                            <p className={classes.tabTitle}> {t(\"reports.insights.enrolled\")}</p>\n                            <p className={classes.tabValue}>\n                                <span>{props.courses ? props.courses.length : 0}</span>\n                                {` ${t(\"reports.insights.courses\")}`}\n                            </p>\n                        </Link>\n                    </li>\n                    <li>\n                        <Link className={classes.textDecorationNone} to=\"/report/in_progress\">\n                            <p className={classes.tabTitle}>{t(\"reports.insights.inProgress\")}</p>\n                            <p className={classes.tabValue}>\n                                <span>{coursesInProgress}</span>\n                                {` ${t(\"reports.insights.courses\")}`}\n                            </p>\n                        </Link>\n                    </li>\n                    <li>\n                        <Link className={classes.textDecorationNone} to={`/report/pending`}>\n                            <p className={classes.tabTitle}>{t(\"reports.insights.pending\")}</p>\n                            <p className={classes.tabValue}>\n                                <span>{(props.activities && props.activities.length > 0) ? props.activities.length : 0}</span>\n                                {` ${t(\"reports.insights.activities\")}`}\n                            </p>\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n            <div className={classes.graphics}>\n                <div className={classes.graphicsTitle}>\n                    <h3>{t(\"reports.overview.title\")}</h3>\n                    <Filter />\n                </div>\n                <div className={classes.overviewCharts}>\n                    <div className={classes.chart}>\n                        <Chart\n                            width={'100%'}\n                            height={'100%'}\n                            background={'#fff'}\n                            chartType=\"PieChart\"\n                            loader={<div>Loading Chart</div>}\n                            data={[\n                                ['Progress', 'How mutch'],\n                                ['Not started', coursesNotStarted],\n                                ['In progress', coursesInProgress],\n                                ['Completed', coursesIsCompleted],\n                            ]}\n                            options={{\n                                title: 'My Courses',\n                                legend: \"bottom\",\n                                chartArea: { width: '95%', height: '70%' },\n                                colors: ['#cce1f4', '#f4e6cc', '#a9d5c1'],\n                                pieSliceText: 'value',\n                                fontSize: 14,\n                                pieSliceTextStyle: { color: \"black\" },\n                                titleTextStyle: { fontSize: 16 }\n                            }}\n                        />\n                    </div>\n                    <div className={classes.chart}>\n                        <Chart\n                            chartType=\"ColumnChart\"\n                            width=\"100%\"\n                            height=\"100%\"\n                            data={[\n                                [\"Courses\", \"Days\", { role: \"style\" }],\n                                [\"Course 1\", firstCourseDaysNumber, '#f4e6cc'],\n                                [\"Course 2\", secondCourseDaysNumber, '#a9d5c1'],\n                            ]}\n                            options={{\n                                fontSize: 14,\n                                title: 'My Engagment',\n                                titleTextStyle: { fontSize: 16 },\n                                chartArea: { width: '80%', height: '70%' },\n                                bar: { groupWidth: \"85%\" },\n                                legend: { position: \"none\" },\n                                vAxes: {\n                                    0: { title: 'Days', titleTextStyle: { fontStyle: 'normal' } },\n                                }\n                            }}\n                        />\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Home/Activities/HomeActivities.jsx",["457","458","459"],"import React from 'react';\nimport classes from './HomeActivities.module.css';\nimport { activitiesicon } from '../../../Assets/Images/activities';\nimport { NavLink } from 'react-router-dom';\nimport ActivityItem from '../../Activites/ActivityItem/ActivityItem';\nimport { useTranslation } from 'react-i18next';\nimport { empty_state_icon } from '../../../Assets/Images/empty_state_icon';\n\nconst HomeActivities = (props) => {\n    const {t, i18n} = useTranslation();\n    let maxActivitiesToView = 10;\n    let blockWidth = 100;\n\n    let activities = [];\n\n    props.activities.sort(function(a,b){\n        return new Date(b.end) - new Date(a.end);\n    });\n\n    activities = props.activities.map((item, index) => {\n        if(index < maxActivitiesToView){\n            return <ActivityItem item={item} key={item.activityId} width={blockWidth}/>\n        }\n    });\n    return(\n        <div className={classes.main}>\n            <div className={classes.activitiesHeader}>\n                <div className={classes.activitiesHeaderBlock}>\n                    {activitiesicon}\n                    <span>{t(\"home.activities.title\")}</span>\n                </div>\n                <NavLink to=\"/activities\">{t(\"home.activities.viewAll\")}</NavLink>\n            </div>\n            <div className={classes.itemsList}>\n                {(activities.length > 0 && activities != null && activities != undefined) ? activities : \n                    <div className={classes.empty}>\n                        <div className={classes.emptyIcon}>\n                            {empty_state_icon}\n                        </div>\n                        <span>{t(\"home.activities.empty\")}</span>\n                    </div>\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default HomeActivities;","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Assets/Images/clock.js",[],"/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Notifications/NotificationsModal/NotificationModalItem/NotificationModalItemMenu/NotificationModalItemMenu.jsx",["460","461","462"],"/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Assets/Images/logout_icon.js",[],"/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Assets/Images/profile_settings_icon.js",[],"/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Notifications/NotificationsModal/NotificationModalItem/NotificationModalItem.jsx",["463","464","465","466","467","468"],"/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Navbar/Burger/BurgerMenu.jsx",["469","470"],"import React from 'react';\nimport styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport classes from '../Navbar.module.css';\nimport { useTranslation } from 'react-i18next';\nimport {planeticon} from '../../../Assets/Images/planet_icon'\n\nconst Menu = styled.div`\n    width: 100%;\n    height: 100vh;\n    transform: ${({ open }) => open ? 'translateX(0)' : 'translateX(100%)'};\n    position: fixed;\n    top: 0;\n    left: 0;\n    background-color: #59bcabe3;\n    transition-duration: 0.4s;\n    z-index: 100;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    a{\n        font-size: 35px;\n    }\n    a.active{\n        color: white;\n    }\n\n`;\n\n\nconst BurgerMenu = ({open, setOpen, changeLanguage, language, currentLanguage}) => {\n    const {t, i18n} = useTranslation();\n    return(\n        <Menu open={open}>\n            <nav className={\"nav\"}>\n                <div className={classes.menuItem}>\n                    <NavLink to=\"/home\" activeClassName={\"active\"} onClick={()=>{setOpen(false)}}>{t(\"navbar.home\")}</NavLink>\n                </div>\n                <div className={classes.menuItem}>\n                    <NavLink to=\"/programs\" activeClassName={\"active\"} onClick={()=>{setOpen(false)}}>{t(\"navbar.programs\")}</NavLink>\n                </div>\n                <div className={classes.menuItem}>\n                    <NavLink to=\"/courses\" activeClassName={\"active\"} onClick={()=>{setOpen(false)}}>{t(\"navbar.courses\")}</NavLink>\n                </div>\n                <div className={classes.menuItem}>\n                    <NavLink to=\"/activities\" activeClassName={\"active\"} onClick={()=>{setOpen(false)}}>{t(\"navbar.activities\")}</NavLink>\n                </div>\n                <div className={classes.menuItem}>\n                    <NavLink to=\"/report\" activeClassName={\"active\"} onClick={()=>{setOpen(false)}}>{t(\"navbar.myreport\")}</NavLink>\n                </div>\n                <div className={classes.langBurgerMenu}>\n                    <button onClick={()=>{changeLanguage(language())}}>\n                            <span className={currentLanguage === \"en\" ? classes.langBurgerMenuActive : \"\"}>\n                                EN\n                            </span>\n                            <span className={currentLanguage === \"ar\" ? classes.langBurgerMenuActive : \"\"}>\n                                AR\n                            </span>\n                    </button>\n                </div>\n            </nav>\n        </Menu>\n    )\n    \n}\n\nexport default BurgerMenu;","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Home/Courses/CourseItem/CourseItem.jsx",["471","472","473"],"import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classes from './CourseItem.module.css';\nimport { useTranslation } from 'react-i18next';\n\n\nconst CourseItem = (props) => {\n    const {t, i18n} = useTranslation();\n\n    return(\n        <div className={classes.main}>\n            <NavLink to={`/courses/${props.item.courseId}`}>\n                {(props.item.image != \"null\") ? <img src={props.item.image}/> : <div className={classes.defaultImg}></div>}\n                \n                <div className={classes.itemInfo}>\n                    <label>{props.item.description}</label>\n                    <h2>{props.item.name}</h2>\n                    <div className={classes.itemFoot}>\n                        <span className={classes.status + \" \" + \n                            ((props.item.inProgress && classes.inProgress) ||\n                            (!props.item.inProgress && classes.completed))}>\n                                {((props.item.inProgress && t('courseMini.inProgress')) ||\n                                (!props.item.inProgress && t('courseMini.progressComplete')))}</span>\n                        <span className={classes.time}>{props.item.startingDate ? props.item.startingDate : t('courseMini.overdue')}</span>\n                    </div>\n                </div>\n                \n            </NavLink>\n        </div>\n    );\n}\n\nexport default CourseItem;","/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Reports/Filter/Filter.jsx",["474","475"],"import React, { useEffect, useState } from 'react';\nimport classes from './Filter.module.css';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { useTranslation } from 'react-i18next';\n\nconst StyledSelect = styled.div`\n\n`;\n\nconst Filter = (props) => {\n    const { t, i18n } = useTranslation();\n\n    const [isOpenDropdown, setIsOpenDropdown] = useState(false);\n    const [isCourses, setIsCourses] = useState(false)\n    const [isActivities, setIsActivities] = useState(false)\n\n    return (\n        <StyledSelect className={classes.main} width={props.width}>\n            <input hidden type=\"checkout\" value={isOpenDropdown} />\n            <div className={classes.view} onClick={() => setIsOpenDropdown(!isOpenDropdown)}>\n                <span> {t(\"filterReports.filter\")} </span>\n                <div className={classes.arrow + \" \" + (isOpenDropdown && classes.open)}></div>\n            </div>\n            {isOpenDropdown &&\n                <div className={classes.dropdown + \" \" + (isOpenDropdown && classes.openDropdown)}>\n                    <span className={`${classes.option} ${classes.margin0}`}>\n                        {t(\"filterReports.filteredBy\")}\n                    </span>\n                    <div onClick={() => setIsCourses(!isCourses)} className={`${classes.margin0} ${classes.filter}`}>\n                        <span className={classes.filterText}>{t(\"filterReports.courses\")}</span>\n                        <input type=\"checkbox\" checked={isCourses} value={isCourses}  />\n                        <span className={classes.checkmark}></span>\n                    </div>\n                    <div onClick={() => setIsActivities(!isActivities)} className={`${classes.margin0} ${classes.filter}`}>\n                        <span className={classes.filterText}>{t(\"filterReports.activities\")}</span>\n                        <input type=\"checkbox\" checked={isActivities} value={isActivities}  />\n                        <span className={classes.checkmark}></span>\n                    </div>\n                </div>}\n        </StyledSelect>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n    direction: state.common.direction\n});\n\nexport default connect(mapStateToProps, null)(Filter);",{"ruleId":"476","replacedBy":"477"},{"ruleId":"478","replacedBy":"479"},{"ruleId":"480","severity":1,"message":"481","line":31,"column":11,"nodeType":"482","messageId":"483","endLine":31,"endColumn":12},{"ruleId":"484","severity":1,"message":"485","line":8,"column":13,"nodeType":"486","endLine":8,"endColumn":35},{"ruleId":"480","severity":1,"message":"487","line":2,"column":8,"nodeType":"482","messageId":"483","endLine":2,"endColumn":12},{"ruleId":"480","severity":1,"message":"488","line":3,"column":8,"nodeType":"482","messageId":"483","endLine":3,"endColumn":12},{"ruleId":"480","severity":1,"message":"489","line":1,"column":28,"nodeType":"482","messageId":"483","endLine":1,"endColumn":36},{"ruleId":"490","severity":1,"message":"491","line":13,"column":7,"nodeType":"492","endLine":13,"endColumn":30,"suggestions":"493"},{"ruleId":"490","severity":1,"message":"491","line":17,"column":7,"nodeType":"492","endLine":17,"endColumn":33,"suggestions":"494"},{"ruleId":"490","severity":1,"message":"491","line":12,"column":7,"nodeType":"492","endLine":12,"endColumn":9,"suggestions":"495"},{"ruleId":"480","severity":1,"message":"489","line":1,"column":28,"nodeType":"482","messageId":"483","endLine":1,"endColumn":36},{"ruleId":"480","severity":1,"message":"496","line":6,"column":8,"nodeType":"482","messageId":"483","endLine":6,"endColumn":13},{"ruleId":"490","severity":1,"message":"497","line":22,"column":7,"nodeType":"492","endLine":22,"endColumn":19,"suggestions":"498"},{"ruleId":"490","severity":1,"message":"491","line":13,"column":7,"nodeType":"492","endLine":13,"endColumn":42,"suggestions":"499"},{"ruleId":"500","severity":1,"message":"501","line":17,"column":30,"nodeType":"502","messageId":"503","endLine":17,"endColumn":32},{"ruleId":"500","severity":1,"message":"501","line":17,"column":64,"nodeType":"502","messageId":"503","endLine":17,"endColumn":66},{"ruleId":"480","severity":1,"message":"489","line":1,"column":28,"nodeType":"482","messageId":"483","endLine":1,"endColumn":36},{"ruleId":"490","severity":1,"message":"491","line":14,"column":7,"nodeType":"492","endLine":14,"endColumn":30,"suggestions":"504"},{"ruleId":"490","severity":1,"message":"491","line":18,"column":7,"nodeType":"492","endLine":18,"endColumn":33,"suggestions":"505"},{"ruleId":"490","severity":1,"message":"491","line":13,"column":7,"nodeType":"492","endLine":13,"endColumn":9,"suggestions":"506"},{"ruleId":"480","severity":1,"message":"507","line":8,"column":12,"nodeType":"482","messageId":"483","endLine":8,"endColumn":23},{"ruleId":"480","severity":1,"message":"508","line":8,"column":25,"nodeType":"482","messageId":"483","endLine":8,"endColumn":39},{"ruleId":"490","severity":1,"message":"491","line":43,"column":7,"nodeType":"492","endLine":43,"endColumn":9,"suggestions":"509"},{"ruleId":"490","severity":1,"message":"491","line":10,"column":7,"nodeType":"492","endLine":10,"endColumn":42,"suggestions":"510"},{"ruleId":"480","severity":1,"message":"511","line":12,"column":15,"nodeType":"482","messageId":"483","endLine":12,"endColumn":19},{"ruleId":"490","severity":1,"message":"491","line":13,"column":7,"nodeType":"492","endLine":13,"endColumn":30,"suggestions":"512"},{"ruleId":"480","severity":1,"message":"513","line":7,"column":20,"nodeType":"482","messageId":"483","endLine":7,"endColumn":23},{"ruleId":"480","severity":1,"message":"511","line":19,"column":15,"nodeType":"482","messageId":"483","endLine":19,"endColumn":19},{"ruleId":"480","severity":1,"message":"511","line":126,"column":15,"nodeType":"482","messageId":"483","endLine":126,"endColumn":19},{"ruleId":"480","severity":1,"message":"514","line":127,"column":12,"nodeType":"482","messageId":"483","endLine":127,"endColumn":16},{"ruleId":"480","severity":1,"message":"515","line":128,"column":12,"nodeType":"482","messageId":"483","endLine":128,"endColumn":22},{"ruleId":"480","severity":1,"message":"511","line":21,"column":15,"nodeType":"482","messageId":"483","endLine":21,"endColumn":19},{"ruleId":"480","severity":1,"message":"511","line":134,"column":15,"nodeType":"482","messageId":"483","endLine":134,"endColumn":19},{"ruleId":"480","severity":1,"message":"514","line":135,"column":12,"nodeType":"482","messageId":"483","endLine":135,"endColumn":16},{"ruleId":"480","severity":1,"message":"515","line":137,"column":12,"nodeType":"482","messageId":"483","endLine":137,"endColumn":22},{"ruleId":"490","severity":1,"message":"491","line":142,"column":7,"nodeType":"492","endLine":142,"endColumn":9,"suggestions":"516"},{"ruleId":"480","severity":1,"message":"511","line":14,"column":15,"nodeType":"482","messageId":"483","endLine":14,"endColumn":19},{"ruleId":"480","severity":1,"message":"511","line":44,"column":15,"nodeType":"482","messageId":"483","endLine":44,"endColumn":19},{"ruleId":"490","severity":1,"message":"491","line":48,"column":7,"nodeType":"492","endLine":48,"endColumn":9,"suggestions":"517"},{"ruleId":"480","severity":1,"message":"511","line":13,"column":15,"nodeType":"482","messageId":"483","endLine":13,"endColumn":19},{"ruleId":"480","severity":1,"message":"511","line":41,"column":15,"nodeType":"482","messageId":"483","endLine":41,"endColumn":19},{"ruleId":"490","severity":1,"message":"491","line":49,"column":7,"nodeType":"492","endLine":49,"endColumn":9,"suggestions":"518"},{"ruleId":"480","severity":1,"message":"511","line":30,"column":15,"nodeType":"482","messageId":"483","endLine":30,"endColumn":19},{"ruleId":"490","severity":1,"message":"491","line":39,"column":7,"nodeType":"492","endLine":39,"endColumn":9,"suggestions":"519"},{"ruleId":"490","severity":1,"message":"520","line":57,"column":7,"nodeType":"492","endLine":57,"endColumn":23,"suggestions":"521"},{"ruleId":"522","severity":1,"message":"523","line":10,"column":21,"nodeType":"524","messageId":"525","endLine":10,"endColumn":22,"suggestions":"526"},{"ruleId":"480","severity":1,"message":"511","line":18,"column":15,"nodeType":"482","messageId":"483","endLine":18,"endColumn":19},{"ruleId":"480","severity":1,"message":"527","line":2,"column":10,"nodeType":"482","messageId":"483","endLine":2,"endColumn":17},{"ruleId":"480","severity":1,"message":"528","line":1,"column":17,"nodeType":"482","messageId":"483","endLine":1,"endColumn":26},{"ruleId":"480","severity":1,"message":"489","line":1,"column":28,"nodeType":"482","messageId":"483","endLine":1,"endColumn":36},{"ruleId":"480","severity":1,"message":"511","line":13,"column":15,"nodeType":"482","messageId":"483","endLine":13,"endColumn":19},{"ruleId":"480","severity":1,"message":"489","line":1,"column":17,"nodeType":"482","messageId":"483","endLine":1,"endColumn":25},{"ruleId":"480","severity":1,"message":"511","line":13,"column":16,"nodeType":"482","messageId":"483","endLine":13,"endColumn":20},{"ruleId":"529","severity":1,"message":"530","line":19,"column":43,"nodeType":"531","messageId":"532","endLine":19,"endColumn":45},{"ruleId":"500","severity":1,"message":"501","line":54,"column":75,"nodeType":"502","messageId":"503","endLine":54,"endColumn":77},{"ruleId":"480","severity":1,"message":"511","line":9,"column":15,"nodeType":"482","messageId":"483","endLine":9,"endColumn":19},{"ruleId":"529","severity":1,"message":"533","line":14,"column":55,"nodeType":"531","messageId":"534","endLine":14,"endColumn":57},{"ruleId":"529","severity":1,"message":"533","line":20,"column":52,"nodeType":"531","messageId":"534","endLine":20,"endColumn":54},{"ruleId":"484","severity":1,"message":"485","line":36,"column":29,"nodeType":"486","endLine":36,"endColumn":56},{"ruleId":"480","severity":1,"message":"511","line":42,"column":15,"nodeType":"482","messageId":"483","endLine":42,"endColumn":19},{"ruleId":"484","severity":1,"message":"485","line":128,"column":25,"nodeType":"486","endLine":128,"endColumn":91},{"ruleId":"480","severity":1,"message":"511","line":16,"column":15,"nodeType":"482","messageId":"483","endLine":16,"endColumn":19},{"ruleId":"480","severity":1,"message":"511","line":7,"column":15,"nodeType":"482","messageId":"483","endLine":7,"endColumn":19},{"ruleId":"480","severity":1,"message":"528","line":1,"column":17,"nodeType":"482","messageId":"483","endLine":1,"endColumn":26},{"ruleId":"480","severity":1,"message":"489","line":1,"column":28,"nodeType":"482","messageId":"483","endLine":1,"endColumn":36},{"ruleId":"480","severity":1,"message":"511","line":14,"column":15,"nodeType":"482","messageId":"483","endLine":14,"endColumn":19},{"ruleId":"480","severity":1,"message":"511","line":11,"column":15,"nodeType":"482","messageId":"483","endLine":11,"endColumn":19},{"ruleId":"490","severity":1,"message":"491","line":17,"column":7,"nodeType":"492","endLine":17,"endColumn":9,"suggestions":"535"},{"ruleId":"480","severity":1,"message":"511","line":13,"column":15,"nodeType":"482","messageId":"483","endLine":13,"endColumn":19},{"ruleId":"490","severity":1,"message":"491","line":19,"column":7,"nodeType":"492","endLine":19,"endColumn":9,"suggestions":"536"},{"ruleId":"484","severity":1,"message":"485","line":37,"column":17,"nodeType":"486","endLine":37,"endColumn":169},{"ruleId":"480","severity":1,"message":"537","line":57,"column":7,"nodeType":"482","messageId":"483","endLine":57,"endColumn":22},{"ruleId":"480","severity":1,"message":"511","line":13,"column":15,"nodeType":"482","messageId":"483","endLine":13,"endColumn":19},{"ruleId":"490","severity":1,"message":"491","line":32,"column":7,"nodeType":"492","endLine":32,"endColumn":19,"suggestions":"538"},{"ruleId":"484","severity":1,"message":"485","line":43,"column":21,"nodeType":"486","endLine":43,"endColumn":156},{"ruleId":"484","severity":1,"message":"485","line":44,"column":21,"nodeType":"486","endLine":44,"endColumn":72},{"ruleId":"480","severity":1,"message":"511","line":10,"column":15,"nodeType":"482","messageId":"483","endLine":10,"endColumn":19},{"ruleId":"484","severity":1,"message":"485","line":20,"column":17,"nodeType":"486","endLine":20,"endColumn":36},{"ruleId":"490","severity":1,"message":"539","line":19,"column":7,"nodeType":"492","endLine":19,"endColumn":9,"suggestions":"540"},{"ruleId":"480","severity":1,"message":"511","line":8,"column":15,"nodeType":"482","messageId":"483","endLine":8,"endColumn":19},{"ruleId":"480","severity":1,"message":"511","line":7,"column":15,"nodeType":"482","messageId":"483","endLine":7,"endColumn":19},{"ruleId":"500","severity":1,"message":"501","line":11,"column":36,"nodeType":"502","messageId":"503","endLine":11,"endColumn":38},{"ruleId":"484","severity":1,"message":"485","line":11,"column":49,"nodeType":"486","endLine":11,"endColumn":78},{"ruleId":"480","severity":1,"message":"541","line":2,"column":16,"nodeType":"482","messageId":"483","endLine":2,"endColumn":27},{"ruleId":"480","severity":1,"message":"511","line":9,"column":16,"nodeType":"482","messageId":"483","endLine":9,"endColumn":20},{"ruleId":"480","severity":1,"message":"511","line":27,"column":15,"nodeType":"482","messageId":"483","endLine":27,"endColumn":19},{"ruleId":"500","severity":1,"message":"501","line":47,"column":21,"nodeType":"502","messageId":"503","endLine":47,"endColumn":23},{"ruleId":"500","severity":1,"message":"501","line":49,"column":27,"nodeType":"502","messageId":"503","endLine":49,"endColumn":29},{"ruleId":"500","severity":1,"message":"501","line":51,"column":27,"nodeType":"502","messageId":"503","endLine":51,"endColumn":29},{"ruleId":"484","severity":1,"message":"485","line":71,"column":17,"nodeType":"486","endLine":71,"endColumn":42},{"ruleId":"480","severity":1,"message":"511","line":34,"column":15,"nodeType":"482","messageId":"483","endLine":34,"endColumn":19},{"ruleId":"480","severity":1,"message":"511","line":43,"column":15,"nodeType":"482","messageId":"483","endLine":43,"endColumn":19},{"ruleId":"490","severity":1,"message":"542","line":66,"column":8,"nodeType":"492","endLine":66,"endColumn":26,"suggestions":"543"},{"ruleId":"480","severity":1,"message":"544","line":1,"column":28,"nodeType":"482","messageId":"483","endLine":1,"endColumn":38},{"ruleId":"490","severity":1,"message":"491","line":49,"column":7,"nodeType":"492","endLine":49,"endColumn":9,"suggestions":"545"},{"ruleId":"490","severity":1,"message":"491","line":56,"column":7,"nodeType":"492","endLine":56,"endColumn":9,"suggestions":"546"},{"ruleId":"480","severity":1,"message":"547","line":58,"column":12,"nodeType":"482","messageId":"483","endLine":58,"endColumn":26},{"ruleId":"480","severity":1,"message":"548","line":59,"column":12,"nodeType":"482","messageId":"483","endLine":59,"endColumn":26},{"ruleId":"480","severity":1,"message":"549","line":60,"column":12,"nodeType":"482","messageId":"483","endLine":60,"endColumn":28},{"ruleId":"550","severity":1,"message":"551","line":63,"column":103,"nodeType":"552","endLine":63,"endColumn":130},{"ruleId":"550","severity":1,"message":"551","line":64,"column":108,"nodeType":"552","endLine":64,"endColumn":135},{"ruleId":"480","severity":1,"message":"511","line":6,"column":16,"nodeType":"482","messageId":"483","endLine":6,"endColumn":20},{"ruleId":"480","severity":1,"message":"511","line":10,"column":15,"nodeType":"482","messageId":"483","endLine":10,"endColumn":19},{"ruleId":"529","severity":1,"message":"533","line":14,"column":51,"nodeType":"531","messageId":"534","endLine":14,"endColumn":53},{"ruleId":"500","severity":1,"message":"501","line":31,"column":68,"nodeType":"502","messageId":"503","endLine":31,"endColumn":70},{"ruleId":"480","severity":1,"message":"553","line":2,"column":16,"nodeType":"482","messageId":"483","endLine":2,"endColumn":23},{"ruleId":"480","severity":1,"message":"511","line":9,"column":16,"nodeType":"482","messageId":"483","endLine":9,"endColumn":20},{"ruleId":"480","severity":1,"message":"511","line":10,"column":15,"nodeType":"482","messageId":"483","endLine":10,"endColumn":19},{"ruleId":"529","severity":1,"message":"533","line":20,"column":53,"nodeType":"531","messageId":"534","endLine":20,"endColumn":55},{"ruleId":"500","severity":1,"message":"501","line":35,"column":77,"nodeType":"502","messageId":"503","endLine":35,"endColumn":79},{"ruleId":"480","severity":1,"message":"511","line":28,"column":15,"nodeType":"482","messageId":"483","endLine":28,"endColumn":19},{"ruleId":"484","severity":1,"message":"485","line":38,"column":25,"nodeType":"486","endLine":38,"endColumn":84},{"ruleId":"484","severity":1,"message":"485","line":44,"column":25,"nodeType":"486","endLine":44,"endColumn":80},{"ruleId":"480","severity":1,"message":"554","line":1,"column":17,"nodeType":"482","messageId":"483","endLine":1,"endColumn":25},{"ruleId":"480","severity":1,"message":"511","line":15,"column":15,"nodeType":"482","messageId":"483","endLine":15,"endColumn":19},{"ruleId":"500","severity":1,"message":"501","line":43,"column":21,"nodeType":"502","messageId":"503","endLine":43,"endColumn":23},{"ruleId":"500","severity":1,"message":"501","line":45,"column":27,"nodeType":"502","messageId":"503","endLine":45,"endColumn":29},{"ruleId":"500","severity":1,"message":"501","line":47,"column":27,"nodeType":"502","messageId":"503","endLine":47,"endColumn":29},{"ruleId":"484","severity":1,"message":"485","line":66,"column":17,"nodeType":"486","endLine":66,"endColumn":74},{"ruleId":"480","severity":1,"message":"555","line":6,"column":9,"nodeType":"482","messageId":"483","endLine":6,"endColumn":19},{"ruleId":"480","severity":1,"message":"511","line":33,"column":15,"nodeType":"482","messageId":"483","endLine":33,"endColumn":19},{"ruleId":"480","severity":1,"message":"511","line":8,"column":15,"nodeType":"482","messageId":"483","endLine":8,"endColumn":19},{"ruleId":"500","severity":1,"message":"501","line":13,"column":36,"nodeType":"502","messageId":"503","endLine":13,"endColumn":38},{"ruleId":"484","severity":1,"message":"485","line":13,"column":49,"nodeType":"486","endLine":13,"endColumn":78},{"ruleId":"480","severity":1,"message":"528","line":1,"column":17,"nodeType":"482","messageId":"483","endLine":1,"endColumn":26},{"ruleId":"480","severity":1,"message":"511","line":12,"column":16,"nodeType":"482","messageId":"483","endLine":12,"endColumn":20},"no-native-reassign",["556"],"no-negated-in-lhs",["557"],"no-unused-vars","'t' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'img1' is defined but never used.","'img2' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["558"],["559"],["560"],"'Login' is defined but never used.","React Hook useEffect has missing dependencies: 'getProfile', 'getUnreadNotifications', 'getUserProfile', 'isStartData', 'limit', 'setCurrentRoute', and 'user.organizationId'. Either include them or remove the dependency array. If 'setCurrentRoute' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["561"],["562"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["563"],["564"],["565"],"'searchValue' is assigned a value but never used.","'setSearchValue' is assigned a value but never used.",["566"],["567"],"'i18n' is assigned a value but never used.",["568"],"'foo' is defined but never used.","'type' is assigned a value but never used.","'supervisor' is assigned a value but never used.",["569"],["570"],["571"],["572"],"React Hook useEffect has a missing dependency: 't'. Either include it or remove the dependency array.",["573"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["574","575"],"'connect' is defined but never used.","'useEffect' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd",["576"],["577"],"'ProfilePassword' is assigned a value but never used.",["578"],"React Hook useEffect has a missing dependency: 'input'. Either include it or remove the dependency array.",["579"],"'useLocation' is defined but never used.","React Hook useEffect has missing dependencies: 'logit' and 'props'. Either include them or remove the dependency array. Mutable values like 'modalRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["580"],"'useReducer' is defined but never used.",["581"],["582"],"'filterOneValue' is assigned a value but never used.","'filterTwoValue' is assigned a value but never used.","'filterThreeValue' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'NavLink' is defined but never used.","'Fragment' is defined but never used.","'planeticon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"583","fix":"584"},{"desc":"585","fix":"586"},{"desc":"587","fix":"588"},{"desc":"589","fix":"590"},{"desc":"591","fix":"592"},{"desc":"583","fix":"593"},{"desc":"585","fix":"594"},{"desc":"587","fix":"595"},{"desc":"587","fix":"596"},{"desc":"597","fix":"598"},{"desc":"583","fix":"599"},{"desc":"587","fix":"600"},{"desc":"587","fix":"601"},{"desc":"587","fix":"602"},{"desc":"587","fix":"603"},{"desc":"604","fix":"605"},{"messageId":"606","fix":"607","desc":"608"},{"messageId":"609","fix":"610","desc":"611"},{"desc":"587","fix":"612"},{"desc":"587","fix":"613"},{"desc":"614","fix":"615"},{"desc":"616","fix":"617"},{"desc":"618","fix":"619"},{"desc":"587","fix":"620"},{"desc":"587","fix":"621"},"Update the dependencies array to be: [props, props.user.employeeId]",{"range":"622","text":"623"},"Update the dependencies array to be: [props, props.user.joinedCourses]",{"range":"624","text":"625"},"Update the dependencies array to be: [props]",{"range":"626","text":"627"},"Update the dependencies array to be: [employeeId, getProfile, getUnreadNotifications, getUserProfile, isStartData, limit, setCurrentRoute, user.organizationId]",{"range":"628","text":"629"},"Update the dependencies array to be: [props, props.currentPage, props.pageSize]",{"range":"630","text":"631"},{"range":"632","text":"623"},{"range":"633","text":"625"},{"range":"634","text":"627"},{"range":"635","text":"627"},"Update the dependencies array to be: [props.pageSize, props.currentPage, props]",{"range":"636","text":"637"},{"range":"638","text":"623"},{"range":"639","text":"627"},{"range":"640","text":"627"},{"range":"641","text":"627"},{"range":"642","text":"627"},"Update the dependencies array to be: [props.activity, t]",{"range":"643","text":"644"},"removeEscape",{"range":"645","text":"646"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"647","text":"648"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"649","text":"627"},{"range":"650","text":"627"},"Update the dependencies array to be: [props, props.user]",{"range":"651","text":"652"},"Update the dependencies array to be: [input]",{"range":"653","text":"654"},"Update the dependencies array to be: [logit, props]",{"range":"655","text":"656"},{"range":"657","text":"627"},{"range":"658","text":"627"},[520,543],"[props, props.user.employeeId]",[631,657],"[props, props.user.joinedCourses]",[430,432],"[props]",[1036,1048],"[employeeId, getProfile, getUnreadNotifications, getUserProfile, isStartData, limit, setCurrentRoute, user.organizationId]",[546,581],"[props, props.currentPage, props.pageSize]",[530,553],[641,667],[443,445],[1342,1344],[388,423],"[props.pageSize, props.currentPage, props]",[506,529],[6435,6437],[2196,2198],[2150,2152],[1599,1601],[2179,2195],"[props.activity, t]",[202,203],"",[202,202],"\\",[605,607],[707,709],[1064,1076],"[props, props.user]",[612,614],"[input]",[2225,2243],"[logit, props]",[1677,1679],[2207,2209]]