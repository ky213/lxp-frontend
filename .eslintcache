[{"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/index.js":"1","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/reportWebVitals.js":"2","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Utils/i18n.js":"3","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/App.js":"4","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Utils/validators.js":"5","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/empty_state_icon.js":"6","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/courses.js":"7","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/activities.js":"8","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/programicon.js":"9","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/homeicon.js":"10","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/searchicon.js":"11","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/notification.js":"12","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/myreport.js":"13","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/planet_icon.js":"14","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/clock.js":"15","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/library.js":"16","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/profile_settings_icon.js":"17","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/logout_icon.js":"18","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Store/reduxStore.js":"19","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Store/Reducers/common.js":"20","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Store/Reducers/user.js":"21","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Store/Reducers/activities.js":"22","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Store/Reducers/courses.js":"23","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Store/Reducers/programs.js":"24","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Store/Reducers/notifications.js":"25","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Courses/CoursesContainer.jsx":"26","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Home/HomeContainer.jsx":"27","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Reports/ReportsContainer.jsx":"28","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Programs/ProgramsContainer.jsx":"29","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Lessons/LessonsContainer.jsx":"30","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Profile/Profile.jsx":"31","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/SearchResult/SearchResultContainer.jsx":"32","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Auth/Login/Login.jsx":"33","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Auth/Forgot/ForgotPassword.jsx":"34","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Courses/Courses.jsx":"35","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Home/Home.jsx":"36","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Reports/Reports.jsx":"37","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/SearchResult/SearchResult.jsx":"38","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Lessons/Lessons.jsx":"39","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Programs/Programs.jsx":"40","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Profile/Notifications/ProfileNotifications.jsx":"41","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Profile/Password/ProfilePassword.jsx":"42","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Profile/Email/ProfileEmail.jsx":"43","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Profile/Info/ProfileInfo.jsx":"44","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Courses/CourseItemView/CourseItemView.jsx":"45","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Home/Statistic/Statistic.jsx":"46","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Reports/ReportDetails/ReportDetails.jsx":"47","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Reports/ReportMain/ReportMain.jsx":"48","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Reports/UserInfo/UserInfo.jsx":"49","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Home/Courses/Courses.jsx":"50","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Home/Activities/HomeActivities.jsx":"51","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Reports/Filter/Filter.jsx":"52","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Home/Courses/CourseItem/CourseItem.jsx":"53","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Services/axios.js":"54","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Services/index.js":"55","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Services/activities.js":"56","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Services/courses.js":"57","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Services/notifications.js":"58","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Services/programs.js":"59","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Services/user.js":"60","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/index.js":"61","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/ErrorBoundry.js":"62","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/index.js":"63","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Activities/ActivitiesContainer.jsx":"64","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Library/LibraryContainer.jsx":"65","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Activities/Activities.jsx":"66","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Library/Library.jsx":"67","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Activities/ActivityItem/ActivityItem.jsx":"68","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Common/Preloader/Preloader.jsx":"69","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Common/LoadDataRouter/LoadDataRouter.jsx":"70","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Common/FormControlls/FormControlls.js":"71","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Common/ProgressBar/ProgressBar.jsx":"72","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Common/Cutsom/Select/CustomSelect.jsx":"73","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Common/SearchModal/SearchModal.jsx":"74","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Activities/index.js":"75","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Activities/AddActivity/AddActivity.jsx":"76","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Activities/ActivityFile/ActivityFile.jsx":"77","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Activities/EditActivity/EditActivity.jsx":"78","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Activities/Routes.js":"79","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/PageNotFound.js":"80","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/PrivateRoute.js":"81","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Store/Reducers/index.js":"82","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Store/Reducers/authentication.js":"83","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Config/constants.js":"84","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Utils/actionTypes.js":"85","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Services/authentication.js":"86","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Styles/Colors.js":"87","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Form/index.js":"88","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Button/index.js":"89","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/InputGroup/index.js":"90","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Label/index.js":"91","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Input/index.js":"92","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Programs/Routes.js":"93","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Programs/AddEdit/index.js":"94","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Layout/Main/index.js":"95","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Navbar/NavbarContainer.jsx":"96","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Navbar/Navbar.jsx":"97","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Navbar/Burger/Burger.jsx":"98","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Navbar/ProfileMenu/ProfileMenu.jsx":"99","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Navbar/Submenu/Submenu.jsx":"100","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Navbar/Burger/BurgerMenu.jsx":"101","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Notifications/NotificationsContainer.jsx":"102","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Notifications/NotificationsModal/NotificationsModal.jsx":"103","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Notifications/Notifications.jsx":"104","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Notifications/NotificationsModal/NotificationModalItem/NotificationModalItem.jsx":"105","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Notifications/NotificationItem/NotificationItem.jsx":"106","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Notifications/NotificationsModal/NotificationModalItem/NotificationModalItemMenu/NotificationModalItemMenu.jsx":"107"},{"size":716,"mtime":1610785142032,"results":"108","hashOfConfig":"109"},{"size":362,"mtime":1610785142032,"results":"110","hashOfConfig":"109"},{"size":541,"mtime":1610785142031,"results":"111","hashOfConfig":"109"},{"size":2484,"mtime":1610917183819,"results":"112","hashOfConfig":"109"},{"size":634,"mtime":1610785142031,"results":"113","hashOfConfig":"109"},{"size":1071,"mtime":1610785141983,"results":"114","hashOfConfig":"109"},{"size":1441,"mtime":1610785141983,"results":"115","hashOfConfig":"109"},{"size":1856,"mtime":1610785141982,"results":"116","hashOfConfig":"109"},{"size":1534,"mtime":1610785141986,"results":"117","hashOfConfig":"109"},{"size":1250,"mtime":1610785141984,"results":"118","hashOfConfig":"109"},{"size":728,"mtime":1610785141986,"results":"119","hashOfConfig":"109"},{"size":1007,"mtime":1610785141985,"results":"120","hashOfConfig":"109"},{"size":657,"mtime":1610785141985,"results":"121","hashOfConfig":"109"},{"size":645,"mtime":1610785141985,"results":"122","hashOfConfig":"109"},{"size":646,"mtime":1610785141983,"results":"123","hashOfConfig":"109"},{"size":962,"mtime":1610785141984,"results":"124","hashOfConfig":"109"},{"size":1206,"mtime":1610785141985,"results":"125","hashOfConfig":"109"},{"size":1568,"mtime":1610785141984,"results":"126","hashOfConfig":"109"},{"size":851,"mtime":1610793133019,"results":"127","hashOfConfig":"109"},{"size":1720,"mtime":1610785142029,"results":"128","hashOfConfig":"109"},{"size":2744,"mtime":1610785142030,"results":"129","hashOfConfig":"109"},{"size":1537,"mtime":1610785142028,"results":"130","hashOfConfig":"109"},{"size":1133,"mtime":1610785142029,"results":"131","hashOfConfig":"109"},{"size":1270,"mtime":1610785142030,"results":"132","hashOfConfig":"109"},{"size":3182,"mtime":1610785142030,"results":"133","hashOfConfig":"109"},{"size":1858,"mtime":1610785142002,"results":"134","hashOfConfig":"109"},{"size":1395,"mtime":1610785142004,"results":"135","hashOfConfig":"109"},{"size":1474,"mtime":1610785142023,"results":"136","hashOfConfig":"109"},{"size":1890,"mtime":1610785142020,"results":"137","hashOfConfig":"109"},{"size":352,"mtime":1610785142006,"results":"138","hashOfConfig":"109"},{"size":2439,"mtime":1610785142019,"results":"139","hashOfConfig":"109"},{"size":2090,"mtime":1610785142024,"results":"140","hashOfConfig":"109"},{"size":2928,"mtime":1610792569142,"results":"141","hashOfConfig":"109"},{"size":2731,"mtime":1610785142000,"results":"142","hashOfConfig":"109"},{"size":2935,"mtime":1610785142001,"results":"143","hashOfConfig":"109"},{"size":1614,"mtime":1610785142004,"results":"144","hashOfConfig":"109"},{"size":854,"mtime":1610785142022,"results":"145","hashOfConfig":"109"},{"size":5909,"mtime":1610785142024,"results":"146","hashOfConfig":"109"},{"size":512,"mtime":1610785142006,"results":"147","hashOfConfig":"109"},{"size":3223,"mtime":1610872549126,"results":"148","hashOfConfig":"109"},{"size":1473,"mtime":1610785142018,"results":"149","hashOfConfig":"109"},{"size":2410,"mtime":1610785142018,"results":"150","hashOfConfig":"109"},{"size":1993,"mtime":1610785142016,"results":"151","hashOfConfig":"109"},{"size":2538,"mtime":1610785142017,"results":"152","hashOfConfig":"109"},{"size":1386,"mtime":1610785142001,"results":"153","hashOfConfig":"109"},{"size":2584,"mtime":1610785142005,"results":"154","hashOfConfig":"109"},{"size":2794,"mtime":1610785142021,"results":"155","hashOfConfig":"109"},{"size":5398,"mtime":1610785142022,"results":"156","hashOfConfig":"109"},{"size":1204,"mtime":1610785142023,"results":"157","hashOfConfig":"109"},{"size":1590,"mtime":1610785142003,"results":"158","hashOfConfig":"109"},{"size":1559,"mtime":1610785142002,"results":"159","hashOfConfig":"109"},{"size":2365,"mtime":1610785142021,"results":"160","hashOfConfig":"109"},{"size":1401,"mtime":1610785142003,"results":"161","hashOfConfig":"109"},{"size":331,"mtime":1610785142026,"results":"162","hashOfConfig":"109"},{"size":234,"mtime":1610785142026,"results":"163","hashOfConfig":"109"},{"size":460,"mtime":1610785142025,"results":"164","hashOfConfig":"109"},{"size":212,"mtime":1610785142026,"results":"165","hashOfConfig":"109"},{"size":391,"mtime":1610785142027,"results":"166","hashOfConfig":"109"},{"size":233,"mtime":1610785142027,"results":"167","hashOfConfig":"109"},{"size":436,"mtime":1610785142028,"results":"168","hashOfConfig":"109"},{"size":1097,"mtime":1610917035759,"results":"169","hashOfConfig":"109"},{"size":816,"mtime":1610785141991,"results":"170","hashOfConfig":"109"},{"size":844,"mtime":1610876397867,"results":"171","hashOfConfig":"109"},{"size":2861,"mtime":1610785141993,"results":"172","hashOfConfig":"109"},{"size":1891,"mtime":1610785142007,"results":"173","hashOfConfig":"109"},{"size":3852,"mtime":1610785141992,"results":"174","hashOfConfig":"109"},{"size":3297,"mtime":1610785142006,"results":"175","hashOfConfig":"109"},{"size":2799,"mtime":1610785141995,"results":"176","hashOfConfig":"109"},{"size":303,"mtime":1610785141989,"results":"177","hashOfConfig":"109"},{"size":1575,"mtime":1610785141989,"results":"178","hashOfConfig":"109"},{"size":1552,"mtime":1610785141988,"results":"179","hashOfConfig":"109"},{"size":767,"mtime":1610785141990,"results":"180","hashOfConfig":"109"},{"size":2631,"mtime":1610785141987,"results":"181","hashOfConfig":"109"},{"size":4058,"mtime":1610785141990,"results":"182","hashOfConfig":"109"},{"size":326,"mtime":1610785141999,"results":"183","hashOfConfig":"109"},{"size":8849,"mtime":1610785141996,"results":"184","hashOfConfig":"109"},{"size":1069,"mtime":1610785141994,"results":"185","hashOfConfig":"109"},{"size":9319,"mtime":1610785141998,"results":"186","hashOfConfig":"109"},{"size":575,"mtime":1610785141999,"results":"187","hashOfConfig":"109"},{"size":218,"mtime":1610785141991,"results":"188","hashOfConfig":"109"},{"size":1361,"mtime":1610785141992,"results":"189","hashOfConfig":"109"},{"size":362,"mtime":1610785142029,"results":"190","hashOfConfig":"109"},{"size":1654,"mtime":1610800153757,"results":"191","hashOfConfig":"109"},{"size":257,"mtime":1610785210297,"results":"192","hashOfConfig":"109"},{"size":191,"mtime":1610786017115,"results":"193","hashOfConfig":"109"},{"size":242,"mtime":1610792670350,"results":"194","hashOfConfig":"109"},{"size":116,"mtime":1610902472060,"results":"195","hashOfConfig":"109"},{"size":140,"mtime":1610900722190,"results":"196","hashOfConfig":"109"},{"size":738,"mtime":1610901513396,"results":"197","hashOfConfig":"109"},{"size":173,"mtime":1610901936877,"results":"198","hashOfConfig":"109"},{"size":319,"mtime":1610871963025,"results":"199","hashOfConfig":"109"},{"size":296,"mtime":1610902025730,"results":"200","hashOfConfig":"109"},{"size":603,"mtime":1610876416125,"results":"201","hashOfConfig":"109"},{"size":1524,"mtime":1610902593042,"results":"202","hashOfConfig":"109"},{"size":548,"mtime":1610917274820,"results":"203","hashOfConfig":"109"},{"size":1900,"mtime":1610785142010,"results":"204","hashOfConfig":"109"},{"size":6972,"mtime":1610785142009,"results":"205","hashOfConfig":"109"},{"size":1551,"mtime":1610785142009,"results":"206","hashOfConfig":"109"},{"size":3047,"mtime":1610785142011,"results":"207","hashOfConfig":"109"},{"size":2126,"mtime":1610785142012,"results":"208","hashOfConfig":"109"},{"size":2751,"mtime":1610785142009,"results":"209","hashOfConfig":"109"},{"size":833,"mtime":1610785142013,"results":"210","hashOfConfig":"109"},{"size":3948,"mtime":1610785142015,"results":"211","hashOfConfig":"109"},{"size":1963,"mtime":1610785142013,"results":"212","hashOfConfig":"109"},{"size":2772,"mtime":1610785142014,"results":"213","hashOfConfig":"109"},{"size":3023,"mtime":1610785142012,"results":"214","hashOfConfig":"109"},{"size":2471,"mtime":1610785142014,"results":"215","hashOfConfig":"109"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lnu326",{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"220"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"220"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"220"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"220"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"220"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"220"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"220"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"290","messages":"291","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"220"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"220"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"220"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"220"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"220"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"220"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"220"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"220"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"220"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"220"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"220"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"220"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"220"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"220"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"220"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"220"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"220"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"220"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"220"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"369","messages":"370","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"220"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"220"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"220"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"220"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385","usedDeprecatedRules":"220"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388","usedDeprecatedRules":"220"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"220"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"220"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"220"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"220"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"220"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410","usedDeprecatedRules":"220"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"429","messages":"430","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"431","messages":"432","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"433","messages":"434","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"435","messages":"436","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"437","messages":"438","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"447","messages":"448","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"451","messages":"452","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"453","messages":"454","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"455","messages":"456","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"457","messages":"458","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459","usedDeprecatedRules":"220"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462","usedDeprecatedRules":"220"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"465","usedDeprecatedRules":"220"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"468","messages":"469","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"470","messages":"471","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/index.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/reportWebVitals.js",[],["472","473"],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Utils/i18n.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/App.js",["474","475","476","477","478","479"],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Utils/validators.js",["480"],"export const required = (value) =>{\n    if(value) return undefined;\n    \n    return 'The field is required!';\n}\n\nexport const foo = console.log;\n\nexport const isEmail = (value) => {\n    let rep = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\n    if(rep.test(value)){\n        return undefined;\n    }\n    return 'Incorrect email!';   \n}\nexport const passValidationMatch = (value, allValues) => {\n    if(value !== allValues.newPassword) return `Passwords didn't match!`;\n    return undefined;\n}\n\nexport const emailValidationMatch = (value, allValues) => {\n    if(value !== allValues.newEmail) return `Emails didn't match!`;\n    return undefined;\n}","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/empty_state_icon.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/courses.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/activities.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/programicon.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/homeicon.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/searchicon.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/notification.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/myreport.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/planet_icon.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/clock.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/library.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/profile_settings_icon.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Assets/Images/logout_icon.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Store/reduxStore.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Store/Reducers/common.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Store/Reducers/user.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Store/Reducers/activities.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Store/Reducers/courses.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Store/Reducers/programs.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Store/Reducers/notifications.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Courses/CoursesContainer.jsx",["481"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Courses from './Courses';\nimport { getCourses } from '../../Store/Reducers/courses';\nimport { Preloader } from '../../Components';\n\nconst CoursesContainer = props => {\n  useEffect(() => {\n    if (props.page && props.take) {\n      props.getCourses(props.user.organizationId, props.page, props.take);\n    }\n  }, []);\n\n  const [all, setAll] = useState(true);\n  const [completed, setCompleted] = useState(true);\n  const [inProgress, setInProgress] = useState(true);\n  const [notStarted, setNotStarted] = useState(true);\n\n  const handleAll = () => {\n    let newAll = !all;\n    setAll(!all);\n    if (newAll) {\n      setCompleted(true);\n      setInProgress(true);\n      setNotStarted(true);\n      return;\n    } else {\n      setCompleted(false);\n      setInProgress(false);\n      setNotStarted(false);\n    }\n  };\n\n  useEffect(() => {\n    if (completed && inProgress && notStarted) {\n      setAll(true);\n    } else {\n      setAll(false);\n    }\n  }, [completed, inProgress, notStarted]);\n\n  return (\n    <>\n      {props.isFetching ? (\n        <Preloader />\n      ) : (\n        <Courses\n          courses={props.courses}\n          direction={props.direction}\n          all={all}\n          setAll={handleAll}\n          completed={completed}\n          setCompleted={setCompleted}\n          inProgress={inProgress}\n          setInProgress={setInProgress}\n          notStarted={notStarted}\n          setNotStarted={setNotStarted}\n        />\n      )}\n    </>\n  );\n};\n\nlet mapStateToProps = state => ({\n  courses: state.courses.courses,\n  user: state.user.user,\n  isFetching: state.common.isFetching,\n  page: state.courses.page,\n  take: state.courses.take,\n  direction: state.common.direction,\n});\n\nexport default connect(mapStateToProps, {\n  getCourses,\n})(CoursesContainer);\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Home/HomeContainer.jsx",["482","483"],"import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Preloader } from '../../Components';\nimport Home from './Home';\nimport { getCourses, setJoinedCourses } from '../../Store/Reducers/courses';\nimport { getActivities } from '../../Store/Reducers/activities';\n\nconst HomeContainer = props => {\n  useEffect(() => {\n    if (props.user.employeeId) {\n      props.getActivities(props.user.employeeId, props.user.userId, props.user.organizationId);\n    }\n  }, [props.user.employeeId]);\n\n  useEffect(() => {\n    props.setJoinedCourses(props.user.joinedCourses);\n  }, [props.user.joinedCourses]);\n\n  return (\n    <>\n      {props.isFetching && <Preloader />}\n      {props.isAuth && (\n        <Home\n          user={props.user}\n          courses={props.courses}\n          activities={props.activities}\n          direction={props.direction}\n          programs={props.programs}\n        />\n      )}\n    </>\n  );\n};\n\nlet mapStateToProps = state => ({\n  isFetching: state.common.isFetching,\n  user: state.user.user,\n  isAuth: state.user.isAuth,\n  courses: state.courses.joinedCourses,\n  activities: state.activities.activities,\n  page: state.courses.page,\n  take: state.courses.take,\n  direction: state.common.direction,\n  programs: state.programs.programs,\n});\n\nexport default connect(mapStateToProps, {\n  getCourses,\n  getActivities,\n  setJoinedCourses,\n})(HomeContainer);\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Reports/ReportsContainer.jsx",["484","485","486"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Preloader } from '../../Components';\nimport Reports from './Reports';\nimport { getActivities } from '../../Store/Reducers/activities';\nimport { setJoinedCourses } from '../../Store/Reducers/courses';\n\nconst ReportsContainer = props => {\n  useEffect(() => {\n    if (props.user.employeeId) {\n      props.getActivities(props.user.employeeId, props.user.userId, props.user.organizationId);\n    }\n  }, [props.user.employeeId]);\n\n  useEffect(() => {\n    props.setJoinedCourses(props.user.joinedCourses);\n  }, [props.user.joinedCourses]);\n\n  return (\n    <>\n      {props.isFetching ? (\n        <Preloader />\n      ) : (\n        <>\n          {\n            <Reports\n              user={props.user}\n              courses={props.courses}\n              activities={props.activities}\n              direction={props.direction}\n              programs={props.programs}\n            />\n          }{' '}\n        </>\n      )}\n    </>\n  );\n};\n\nlet mapStateToProps = state => ({\n  isFetching: state.common.isFetching,\n  user: state.user.user,\n  isAuth: state.user.isAuth,\n  courses: state.courses.joinedCourses,\n  activities: state.activities.currentActivity,\n  page: state.courses.page,\n  take: state.courses.take,\n  direction: state.common.direction,\n  programs: state.programs.programs,\n});\n\nexport default connect(mapStateToProps, {\n  getActivities,\n  setJoinedCourses,\n})(ReportsContainer);\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Programs/ProgramsContainer.jsx",["487"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Programs from './Programs';\nimport { getPrograms } from '../../Store/Reducers/programs';\nimport { Preloader } from '../../Components';\n\nconst ProgramsContainer = props => {\n  useEffect(() => {\n    if (props.user.organizationId) {\n      props.getPrograms(props.user.organizationId, props.pageId, props.perPage);\n    }\n  }, []);\n\n  const [all, setAll] = useState(true);\n  const [completed, setCompleted] = useState(true);\n  const [inProgress, setInProgress] = useState(true);\n  const [notStarted, setNotStarted] = useState(true);\n\n  const handleAll = () => {\n    let newAll = !all;\n    setAll(!all);\n    if (newAll) {\n      setCompleted(true);\n      setInProgress(true);\n      setNotStarted(true);\n      return;\n    } else {\n      setCompleted(false);\n      setInProgress(false);\n      setNotStarted(false);\n    }\n  };\n\n  useEffect(() => {\n    if (completed && inProgress && notStarted) {\n      setAll(true);\n    } else {\n      setAll(false);\n    }\n  }, [completed, inProgress, notStarted]);\n\n  return (\n    <>\n      {props.isFetching ? (\n        <Preloader />\n      ) : (\n        <Programs\n          programs={props.programs}\n          direction={props.direction}\n          all={all}\n          setAll={handleAll}\n          completed={completed}\n          setCompleted={setCompleted}\n          inProgress={inProgress}\n          setInProgress={setInProgress}\n          notStarted={notStarted}\n          setNotStarted={setNotStarted}\n        />\n      )}\n    </>\n  );\n};\n\nlet mapStateToProps = state => ({\n  user: state.user.user,\n  programs: state.programs.programs,\n  isFetching: state.common.isFetching,\n  direction: state.common.direction,\n  pageId: state.programs.pageId,\n  perPage: state.programs.perPage,\n});\n\nexport default connect(mapStateToProps, {\n  getPrograms,\n})(ProgramsContainer);\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Lessons/LessonsContainer.jsx",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Profile/Profile.jsx",["488"],"import React from 'react';\nimport { connect } from 'react-redux';\nimport classes from './Profile.module.css';\nimport { useTranslation } from 'react-i18next';\nimport { NavLink, Redirect, Route } from 'react-router-dom';\nimport ProfileInfo from './Info/ProfileInfo';\nimport ProfileEmail from './Email/ProfileEmail';\nimport ProfilePassword from './Password/ProfilePassword';\nimport ProfileNotifications from './Notifications/ProfileNotifications';\n\nconst Profile = (props) => {\n    const {t, i18n} = useTranslation();\n    return(\n        <div className={classes.main}>\n            <div className={classes.container}>\n                <h1>{t(\"profile.title\")}</h1>\n                <div className={classes.body}>\n                    <div className={classes.menu}>\n                        <div className={classes.menuItem}>\n                            <NavLink to=\"/profile/info\" activeClassName={classes.active}>{t(\"profile.tabs.info\")}</NavLink>\n                        </div>\n                        <div className={classes.menuItem}>\n                            <NavLink to=\"/profile/email\" activeClassName={classes.active}>{t(\"profile.tabs.email\")}</NavLink>\n                        </div>\n                        <div className={classes.menuItem}>\n                            <NavLink to=\"/profile/password\" activeClassName={classes.active}>{t(\"profile.tabs.password\")}</NavLink>\n                        </div>\n                        <div className={classes.menuItem}>\n                            <NavLink to=\"/profile/notifications\" activeClassName={classes.active}>{t(\"profile.tabs.notifications\")}</NavLink>\n                        </div>\n                    </div>\n                    <div className={classes.content}>\n                        <Route exact path=\"/profile\">\n                            <Redirect to=\"/profile/info\"/>\n                        </Route>\n                        <Route path=\"/profile/info\" render={()=><ProfileInfo/>}/>\n                        <Route path=\"/profile/email\" render={()=><ProfileEmail/>}/>\n                        <Route path=\"/profile/password\" render={()=><ProfilePassword/>}/>\n                        <Route path=\"/profile/notifications\" render={()=><ProfileNotifications/>}/>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n    user: state.user.user\n});\n\nexport default connect(mapStateToProps, {})(Profile);","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/SearchResult/SearchResultContainer.jsx",["489","490","491"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Preloader } from '../../Components';\nimport SearchResult from './SearchResult';\nimport { setSearchValue } from '../../Store/Reducers/common';\n\nconst SearchResultContainer = props => {\n  const [searchValue, setSearchValue] = useState('');\n\n  const [viewAll, setViewAll] = useState(true);\n  const [viewPrograms, setViewPrograms] = useState(true);\n  const [viewCourses, setViewCourses] = useState(true);\n  const [viewActivities, setViewActivities] = useState(true);\n\n  const handleViewAll = () => {\n    let newViewAll = !viewAll;\n    setViewAll(!viewAll);\n    if (newViewAll) {\n      setViewPrograms(true);\n      setViewCourses(true);\n      setViewActivities(true);\n      return;\n    } else {\n      setViewPrograms(false);\n      setViewCourses(false);\n      setViewActivities(false);\n    }\n  };\n\n  useEffect(() => {\n    if (viewActivities && viewCourses && viewPrograms) {\n      setViewAll(true);\n    } else {\n      setViewAll(false);\n    }\n  }, [viewPrograms, viewCourses, viewActivities]);\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    props.setSearchValue(urlParams.get('value'));\n  }, []);\n\n  useEffect(() => {\n    console.log('search');\n  }, [props.searchValue]);\n\n  return (\n    <>\n      {props.isFetching ? (\n        <Preloader />\n      ) : (\n        <SearchResult\n          searchValue={props.searchValue}\n          viewAll={viewAll}\n          setViewAll={handleViewAll}\n          viewCourses={viewCourses}\n          setViewCourses={setViewCourses}\n          viewPrograms={viewPrograms}\n          setViewPrograms={setViewPrograms}\n          viewActivities={viewActivities}\n          setViewActivities={setViewActivities}\n          direction={props.direction}\n        />\n      )}\n    </>\n  );\n};\n\nlet mapStateToProps = state => ({\n  isFetching: state.common.isFetching,\n  searchValue: state.common.searchValue,\n  direction: state.common.direction,\n});\n\nexport default connect(mapStateToProps, {\n  setSearchValue,\n})(SearchResultContainer);\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Auth/Login/Login.jsx",["492","493","494"],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Auth/Forgot/ForgotPassword.jsx",["495","496","497"],"import React, { useEffect } from 'react';\nimport classes from '../Auth.module.css';\nimport { useTranslation } from 'react-i18next';\nimport { Field, reduxForm } from 'redux-form';\nimport { AuthInput, Preloader } from '../../../Components';\nimport { required, passValidationMatch } from '../../../Utils/validators';\nimport { connect } from 'react-redux';\nimport { setCurrentRoute } from '../../../Store/Reducers/common';\nimport { Redirect } from 'react-router-dom';\n\nconst ForgotPasswordForm = props => {\n  const { t, i18n } = useTranslation();\n  return (\n    <form className={classes.form} onSubmit={props.handleSubmit}>\n      <h3>{t('forgotPassword.title')}</h3>\n      <div className={classes.field}>\n        <label>{t('forgotPassword.oldPassword')}</label>\n        <Field\n          component={AuthInput}\n          placeholder={t('forgotPassword.oldPassword')}\n          name=\"oldPassword\"\n          type=\"password\"\n          validate={[required]}\n        />\n      </div>\n      <div className={classes.field}>\n        <label>{t('forgotPassword.newPassword')}</label>\n        <Field\n          component={AuthInput}\n          placeholder={t('forgotPassword.newPassword')}\n          name=\"newPassword\"\n          type=\"password\"\n          validate={[required]}\n        />\n      </div>\n      <div className={classes.field}>\n        <label>{t('forgotPassword.repeatPassword')}</label>\n        <Field\n          component={AuthInput}\n          placeholder={t('forgotPassword.repeatPassword')}\n          name=\"repeatPassword\"\n          type=\"password\"\n          validate={[required, passValidationMatch]}\n        />\n      </div>\n      {props.error && <div className={classes.error}>{props.error}</div>}\n      <button>{t('forgotPassword.submit')}</button>\n    </form>\n  );\n};\n\nconst ForgotPasswordReduxForm = reduxForm({ form: 'forgotPass' })(ForgotPasswordForm);\n\nconst ForgotPassword = props => {\n  const { t, i18n } = useTranslation();\n\n  const onSubmit = formData => {\n    console.log(formData);\n  };\n\n  useEffect(() => {\n    props.setCurrentRoute(window.location.pathname);\n  }, []);\n\n  return (\n    <div className={classes.main}>\n      {(localStorage.usertoken || sessionStorage.usertoken) && <Redirect to=\"/\" />}\n      <div className={classes.login}>\n        <h1>{t('forgotPassword.header')}</h1>\n        {props.isFetching && <Preloader />}\n        <ForgotPasswordReduxForm onSubmit={onSubmit} />\n      </div>\n      <div className={classes.back}>\n        <div></div>\n        <div className={classes.green}></div>\n      </div>\n    </div>\n  );\n};\n\nlet mapStateToProps = state => ({\n  isFetching: state.common.isFetching,\n  isAuth: state.user.isAuth,\n});\n\nexport default connect(mapStateToProps, {\n  setCurrentRoute,\n})(ForgotPassword);\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Courses/Courses.jsx",["498","499","500"],"import React, { useEffect, useState } from 'react';\nimport classes from './Courses.module.css';\nimport CourseItemView from './CourseItemView/CourseItemView';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\n\nconst StyledLabel = styled.label`\n    margin-left: ${({ direction }) => direction === \"rtl\" ? \"56px\" : \"0\"};\n    margin-right: ${({ direction }) => direction === \"ltr\" ? \"56px\" : \"0\"};\n`;\n\nconst Courses = (props) => {\n    const {t, i18n} = useTranslation();\n\n    let courses = props.courses.map(item => {\n        return <CourseItemView item={item} key={item.courseId}/>\n    })\n\n    return(\n        <div className={classes.main}>\n            <div className={classes.coursesHeader}>\n                <div className={classes.coursesHeaderContainer}>\n                    <h1>{t(\"courses.title\")}</h1>\n                    <div className={classes.filters}>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"courses.filters.all\")}</span>\n                            <input type=\"checkbox\" onChange={()=>{props.setAll()}} checked={props.all}/>\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"courses.filters.completed\")}</span>\n                            <input type=\"checkbox\" onChange={()=>{props.setCompleted(!props.completed)}} checked={props.completed}/>\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"courses.filters.inProgress\")}</span>\n                            <input type=\"checkbox\" onChange={()=>{props.setInProgress(!props.inProgress)}} checked={props.inProgress}/>\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"courses.filters.notStarted\")}</span>\n                            <input type=\"checkbox\" onChange={()=>{props.setNotStarted(!props.notStarted)}} checked={props.notStarted}/>\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                    </div>\n                </div>\n            </div>\n            <div className={classes.itemsList}>\n                <div className={classes.containerItems}>\n                    {courses}\n                </div>  \n            </div>\n        </div>\n    );\n}\n\nexport default Courses;","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Home/Home.jsx",["501"],"import React from 'react';\nimport styled from 'styled-components';\nimport HomeActivities from './Activities/HomeActivities';\nimport HomeCourses from './Courses/Courses';\nimport classes from './Home.module.css';\nimport Statistic from './Statistic/Statistic';\n\nconst StyledCoursesContainer = styled.div`\n  ../..media screen and (max-width: 1279px) {\n    margin-left: ${({ direction }) => (direction === 'ltr' ? '50px' : '0')};\n    margin-right: ${({ direction }) => (direction === 'rtl' ? '50px' : '0')};\n  }\n  ../..media screen and (max-width: 610px) {\n    margin-left: 0;\n    margin-right: 0;\n  }\n`;\n\nconst StyledLeftSide = styled.div`\n  padding-right: ${({ direction }) => (direction === 'ltr' ? '0' : '24px')};\n`;\n\nconst Home = props => {\n  return (\n    <div className={classes.main}>\n      <div className={classes.container}>\n        <StyledLeftSide className={classes.leftSide} direction={props.direction}>\n          <div className={classes.containerLeft}>\n            <div className={classes.statistic}>\n              <Statistic user={props.user} />\n            </div>\n            <StyledCoursesContainer direction={props.direction} className={classes.courses}>\n              <HomeCourses courses={props.courses} />\n            </StyledCoursesContainer>\n          </div>\n        </StyledLeftSide>\n        <div className={classes.rightSide}>\n          <div className={classes.containerRight}>\n            <div className={classes.activities}>\n              <HomeActivities activities={props.activities} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Reports/Reports.jsx",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/SearchResult/SearchResult.jsx",["502"],"import React from 'react';\nimport classes from './SearchResult.module.css';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\nimport { coursesicon } from '../../Assets/Images/courses';\nimport { activitiesicon } from '../../Assets/Images/activities';\nimport { programicon } from '../../Assets/Images/programicon';\nimport { empty_state_icon } from '../../Assets/Images/empty_state_icon';\n\nconst StyledLabel = styled.label`\n    margin-left: ${({ direction }) => direction === \"rtl\" ? \"56px\" : \"0\"};\n    margin-right: ${({ direction }) => direction === \"ltr\" ? \"56px\" : \"0\"};\n`;\n\nconst SearchResult = (props) => {\n    const {t, i18n} = useTranslation();\n\n    let courses = [];\n    let programs = [];\n    let activities = [];\n\n    console.log(props.viewAll)\n\n    return(\n        <div className={classes.main}>\n            <div className={classes.header}>\n                <div className={classes.container}>\n                    <h1>{t(\"searchResult.title\")} <strong>{props.searchValue}</strong></h1>\n                    <div className={classes.filters}>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"searchResult.all\")}</span>\n                            <input type=\"checkbox\" onChange={()=>{props.setViewAll(!props.viewAll)}} checked={props.viewAll} value={props.viewAll}/>\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"searchResult.programs\")}</span>\n                            <input type=\"checkbox\" onChange={()=>{props.setViewPrograms(!props.viewPrograms)}} value={props.viewPrograms} checked={props.viewPrograms}/>\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"searchResult.courses\")}</span>\n                            <input type=\"checkbox\" onChange={()=>{props.setViewCourses(!props.viewCourses)}} value={props.viewCourses} checked={props.viewCourses}/>\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                        <StyledLabel className={classes.filter} direction={props.direction}>\n                            <span className={classes.filterText}>{t(\"searchResult.activities\")}</span>\n                            <input type=\"checkbox\" onChange={()=>{props.setViewActivities(!props.viewActivities)}} value={props.viewActivities} checked={props.viewActivities}/>\n                            <span className={classes.checkmark}></span>\n                        </StyledLabel>\n                    </div>\n                </div>\n            </div>\n            <div className={classes.content}>\n                <div className={classes.container}>\n                    {props.viewCourses &&\n                    <div className={classes.category}>\n                        <div className={classes.categoryHeader}>\n                            {coursesicon}\n                            <span>{t('searchResult.courses')}</span>\n                        </div>\n                        <div className={classes.itemsList}>\n                            {(courses.length > 0 && courses) ? courses : \n                                <div className={classes.empty}>\n                                    <div className={classes.emptyIcon}>\n                                        {empty_state_icon}\n                                    </div>\n                                    <span>{t(\"searchResult.coursesEmpty\")}</span>\n                                </div>\n                            }\n                        </div>\n                    </div>}\n                    {props.viewActivities &&\n                    <div className={classes.category}>\n                        <div className={classes.categoryHeader}>\n                            {activitiesicon}\n                            <span>{t('searchResult.activities')}</span>\n                        </div>\n                        <div className={classes.itemsList}>\n                            {(activities.length > 0 && activities) ? activities : \n                                <div className={classes.empty}>\n                                    <div className={classes.emptyIcon}>\n                                        {empty_state_icon}\n                                    </div>\n                                    <span>{t(\"searchResult.activitiesEmpty\")}</span>\n                                </div>\n                            }\n                        </div>\n                    </div>}\n                    {props.viewPrograms &&\n                    <div className={classes.category}>\n                        <div className={classes.categoryHeader}>\n                            {programicon}\n                            <span>{t('searchResult.programs')}</span>\n                        </div>\n                        <div className={classes.itemsList}>\n                            {(programs.length > 0 && programs) ? programs : \n                                <div className={classes.empty}>\n                                    <div className={classes.emptyIcon}>\n                                        {empty_state_icon}\n                                    </div>\n                                    <span>{t(\"searchResult.programsEmpty\")}</span>\n                                </div>\n                            }\n                        </div>\n                    </div>}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default SearchResult;","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Lessons/Lessons.jsx",["503"],"import React from 'react';\nimport { connect } from 'react-redux';\nimport classes from './Lessons.module.css';\n\nconst Lessons = (props) => {\n    return(\n        <div className={classes.main}>\n            <div className={classes.header}>\n                <div className={classes.container}>\n                    \n                </div>\n            </div>\n            <div className={classes.container}>\n                <h3>lessons</h3>\n            </div>\n            \n        </div>\n    );\n}\n\nexport default Lessons;","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Programs/Programs.jsx",["504","505","506"],"import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\n\nimport { empty_state_icon } from '../../Assets/Images/empty_state_icon';\nimport classes from './Programs.module.css';\n\nconst StyledLabel = styled.label`\n  margin-left: ${({ direction }) => (direction === 'rtl' ? '56px' : '0')};\n  margin-right: ${({ direction }) => (direction === 'ltr' ? '56px' : '0')};\n`;\n\nconst Programs = props => {\n  const { t, i18n } = useTranslation();\n\n  let programs = [];\n\n  programs = props.programs.map(program => {});\n\n  return (\n    <div className={classes.main}>\n      <div className={classes.header}>\n        <div className={classes.container}>\n          <h1>{t('programs.title')}</h1>\n          <div className={classes.filters}>\n            <StyledLabel className={classes.filter} direction={props.direction}>\n              <span className={classes.filterText}>{t('courses.filters.all')}</span>\n              <input\n                type=\"checkbox\"\n                onChange={() => {\n                  props.setAll();\n                }}\n                checked={props.all}\n                value={props.all}\n              />\n              <span className={classes.checkmark}></span>\n            </StyledLabel>\n            <StyledLabel className={classes.filter} direction={props.direction}>\n              <span className={classes.filterText}>{t('courses.filters.completed')}</span>\n              <input\n                type=\"checkbox\"\n                onChange={() => {\n                  props.setCompleted(!props.completed);\n                }}\n                checked={props.completed}\n              />\n              <span className={classes.checkmark}></span>\n            </StyledLabel>\n            <StyledLabel className={classes.filter} direction={props.direction}>\n              <span className={classes.filterText}>{t('courses.filters.inProgress')}</span>\n              <input\n                type=\"checkbox\"\n                onChange={() => {\n                  props.setInProgress(!props.inProgress);\n                }}\n                checked={props.inProgress}\n              />\n              <span className={classes.checkmark}></span>\n            </StyledLabel>\n            <StyledLabel className={classes.filter} direction={props.direction}>\n              <span className={classes.filterText}>{t('courses.filters.notStarted')}</span>\n              <input\n                type=\"checkbox\"\n                onChange={() => {\n                  props.setNotStarted(!props.notStarted);\n                }}\n                checked={props.notStarted}\n              />\n              <span className={classes.checkmark}></span>\n            </StyledLabel>\n          </div>\n        </div>\n      </div>\n      <div className={classes.itemsList}>\n        <div className={classes.containerItems}>\n          {programs.length > 0 && programs != null && programs != undefined ? (\n            programs\n          ) : (\n            <div className={classes.empty}>\n              <div className={classes.emptyIcon}>{empty_state_icon}</div>\n              <span>{t('programs.empty')}</span>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Programs;\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Profile/Notifications/ProfileNotifications.jsx",["507"],"import React, { useState } from 'react';\nimport classes from './ProfileNotifications.module.css';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\n\nconst ProfileNotifications = (props) => {\n    const {t, i18n} = useTranslation();\n\n    const [enableEmail, setEnableEmail] = useState(false);\n    const [enableText, setEnableText] = useState(false);\n\n    let handleEmail = () => {\n        setEnableEmail(!enableEmail);\n    }\n    let handleText = () => {\n        setEnableText(!enableText);\n    }\n\n    return(\n        <div className={classes.main}>\n            <div className={classes.field}>\n                <label htmlFor=\"email\">{t(\"profile.notifications.email\")}</label>\n                <label className={classes.switch}>\n                    <input type=\"checkbox\" id=\"email\" onChange={handleEmail} value={enableEmail}/>\n                    <span className={classes.slider}></span>\n                </label>\n            </div>\n            <div className={classes.field}>\n                <label htmlFor=\"text\">{t(\"profile.notifications.text\")}</label>\n                <label className={classes.switch}>\n                    <input type=\"checkbox\" id=\"text\" onChange={handleText} value={enableText}/>\n                    <span className={classes.slider}></span>\n                </label>\n            </div>\n        </div>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n\n});\n\nexport default connect(mapStateToProps, {})(ProfileNotifications);","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Profile/Password/ProfilePassword.jsx",["508","509","510","511"],"import React, { useEffect, useState } from 'react';\nimport classes from './ProfilePassword.module.css';\nimport { connect } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { AuthInput } from '../../../Components';\nimport { Field, reduxForm } from 'redux-form';\nimport { passValidationMatch, required } from '../../../Utils/validators';\nimport { NavLink } from 'react-router-dom';\nimport hide from '../../../Assets/Images/hide.svg';\nimport show from '../../../Assets/Images/Show.svg';\n\nconst ProfilePasswordForm = props => {\n  const { t, i18n } = useTranslation();\n\n  useEffect(() => {\n    props.initialize({\n      password: '123',\n    });\n  }, []);\n\n  const [passType, setPassType] = useState('password');\n\n  const handleShowPass = () => {\n    if (passType === 'password') {\n      setPassType('text');\n      return;\n    } else {\n      setPassType('password');\n    }\n  };\n\n  return (\n    <form className={classes.form} onSubmit={props.handleSubmit}>\n      <div className={classes.field + ' ' + classes.fieldBorder}>\n        <label>{t('profile.profilePass.current')}</label>\n        <Field component={AuthInput} name=\"password\" validate={[required]} disabled type={passType} />\n        <img\n          src={passType === 'password' ? hide : show}\n          className={classes.icon + ' ' + (passType === 'text' && classes.show)}\n          onClick={() => handleShowPass()}\n        />\n      </div>\n      <div className={classes.field}>\n        <label>{t('profile.profilePass.new')}</label>\n        <Field component={AuthInput} name=\"newPassword\" validate={[required]} type={'password'} />\n      </div>\n      <div className={classes.field}>\n        <label>{t('profile.profilePass.reenter')}</label>\n        <Field component={AuthInput} name=\"repeatPassword\" validate={[required, passValidationMatch]} type={'password'} />\n      </div>\n      <div className={classes.fieldBut}>\n        <button>{t('profile.saveChanges')}</button>\n        <NavLink to=\"/profile/info\">{t('profile.cancel')}</NavLink>\n      </div>\n    </form>\n  );\n};\n\nlet ProfilePasswordReduxForm = reduxForm({ form: 'profilePass' })(ProfilePasswordForm);\n\nconst ProfilePassword = props => {\n  const onSubmit = formData => {\n    console.log(formData);\n  };\n\n  return <ProfilePasswordReduxForm onSubmit={onSubmit} />;\n};\n\nlet mapStateToProps = state => ({});\n\nexport default connect(mapStateToProps, {})(ProfilePasswordReduxForm);\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Profile/Email/ProfileEmail.jsx",["512","513"],"import React, { useEffect } from 'react';\nimport classes from './ProfileEmail.module.css';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { AuthInput } from '../../../Components';\nimport { emailValidationMatch, isEmail, required } from '../../../Utils/validators';\nimport { NavLink } from 'react-router-dom';\n\nconst ProfileEmailForm = props => {\n  const { t, i18n } = useTranslation();\n\n  useEffect(() => {\n    props.initialize({\n      email: props.user.email,\n    });\n  }, []);\n\n  return (\n    <form className={classes.form} onSubmit={props.handleSubmit}>\n      <div className={classes.field + ' ' + classes.fieldBorder}>\n        <label>{t('profile.profileEmail.current')}</label>\n        <Field component={AuthInput} name=\"email\" validate={[required, isEmail]} disabled />\n      </div>\n      <div className={classes.field}>\n        <label>{t('profile.profileEmail.new')}</label>\n        <Field component={AuthInput} placeholder=\"mail../..example.com\" name=\"newEmail\" validate={[required, isEmail]} />\n      </div>\n      <div className={classes.field}>\n        <label>{t('profile.profileEmail.reenter')}</label>\n        <Field\n          component={AuthInput}\n          placeholder=\"mail../..example.com\"\n          name=\"repeatEmail\"\n          validate={[required, isEmail, emailValidationMatch]}\n        />\n      </div>\n      <div className={classes.fieldBut}>\n        <button>{t('profile.saveChanges')}</button>\n        <NavLink to=\"/profile/info\">{t('profile.cancel')}</NavLink>\n      </div>\n    </form>\n  );\n};\n\nlet ProfileEmailReduxForm = reduxForm({ form: 'profileEmail' })(ProfileEmailForm);\n\nconst ProfileEmail = props => {\n  const onSubmit = formData => {\n    console.log(formData);\n  };\n\n  return <ProfileEmailReduxForm onSubmit={onSubmit} user={props.user} />;\n};\n\nlet mapStateToProps = state => ({\n  user: state.user.user,\n});\n\nexport default connect(mapStateToProps, {})(ProfileEmail);\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Profile/Info/ProfileInfo.jsx",["514","515","516","517"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport classes from './ProfileInfo.module.css';\nimport { useTranslation } from 'react-i18next';\nimport { AuthInput } from '../../../Components';\nimport { required } from '../../../Utils/validators';\nimport default_user from '../../../Assets/Images/default_user.png';\nimport { NavLink } from 'react-router-dom';\nimport upload_icon from '../../../Assets/Images/upload-icon.svg';\n\nconst ProfileInfoForm = props => {\n  const { t, i18n } = useTranslation();\n\n  const [previewImage, setPreviewImage] = useState(null);\n\n  const handleImage = e => {\n    e.preventDefault();\n    setPreviewImage(window.URL.createObjectURL(e.target.files[0]));\n  };\n\n  const removeImage = e => {\n    e.preventDefault();\n    setPreviewImage(null);\n  };\n\n  useEffect(() => {\n    props.initialize({\n      name: props.user.name,\n      profilePhoto: props.user.profilePhoto,\n    });\n  }, [props.user]);\n\n  return (\n    <form className={classes.form} onSubmit={props.handleSubmit}>\n      <div className={classes.field}>\n        <label>{t('profile.profileInfo.fullname')}</label>\n        <Field component={AuthInput} name=\"name\" validate={[required]} />\n      </div>\n      <div className={classes.fieldImage}>\n        <label>{t('profile.profileInfo.photo')}</label>\n        <label htmlFor=\"image\" className={classes.image}>\n          <img\n            src={previewImage ? previewImage : props.user.profilePhoto ? props.user.profilePhoto : default_user}\n            className={classes.photo}\n          />\n          <img src={upload_icon} className={classes.upload} />\n        </label>\n        <Field component={'input'} type=\"file\" name=\"profilePhoto\" id=\"image\" hidden onChange={handleImage} />\n        <button\n          onClick={e => {\n            removeImage(e);\n          }}\n        >\n          {t('profile.profileInfo.remove')}\n        </button>\n      </div>\n      <div className={classes.fieldBut}>\n        <button>{t('profile.saveChanges')}</button>\n        <NavLink to=\"/profile/info\">{t('profile.cancel')}</NavLink>\n      </div>\n    </form>\n  );\n};\n\nlet ProfileInfoReduxForm = reduxForm({ form: 'profileInfo' })(ProfileInfoForm);\n\nconst ProfileInfo = props => {\n  const onSubmit = formData => {\n    console.log(formData);\n  };\n\n  return <ProfileInfoReduxForm onSubmit={onSubmit} user={props.user} />;\n};\n\nlet mapStateToProps = state => ({\n  user: state.user.user,\n});\n\nexport default connect(mapStateToProps, {})(ProfileInfo);\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Courses/CourseItemView/CourseItemView.jsx",["518","519","520"],"import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classes from './CourseItemView.module.css';\nimport { useTranslation } from 'react-i18next';\n\nconst CourseItem = (props) => {\n    const {t, i18n} = useTranslation();\n    return(\n        <div className={classes.main}>\n            <NavLink to={`/courses/${props.item.courseId}`}>\n                {(props.item.image != \"null\") ? <img src={props.item.image}/> : <div className={classes.defaultImg}></div>}\n                <div className={classes.itemInfo}>\n                    <label>{props.item.description}</label>\n                    <h2>{props.item.name}</h2>\n                    <div className={classes.itemFoot}>\n                        <span className={classes.status + \" \" + \n                            ((props.item.inProgress && classes.inProgress) ||\n                            (!props.item.inProgress && classes.completed))}>\n                                {((props.item.inProgress && t('courseMini.inProgress')) ||\n                                (!props.item.inProgress && t('courseMini.progressComplete')))}</span>\n                        <span className={classes.time}>{props.item.startingDate ? props.item.startingDate : t('courseMini.overdue')}</span>\n                    </div>\n                </div>\n                \n            </NavLink>\n        </div>\n    );\n}\n\nexport default CourseItem;","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Home/Statistic/Statistic.jsx",["521"],"import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { ProgressBar } from '../../../Components';\nimport classes from './Statistic.module.css';\nimport { useTranslation } from 'react-i18next';\n\nconst Statistic = props => {\n  const { t, i18n } = useTranslation();\n\n  let widthProgressBar = 83;\n  let heightProgressBar = 16;\n  return (\n    <div className={classes.main}>\n      <div className={classes.block + ' ' + classes.withoutPadding}>\n        <div className={classes.infoBlock}>\n          <p>{t('home.statistic.infoUser.welcome')}</p>\n          <h3>{props.user.name}</h3>\n        </div>\n        <div className={classes.infoBlock}>\n          <label>{t('home.statistic.infoUser.learningHours')}</label>\n          <span>\n            <strong>34 {t('home.statistic.infoUser.hours')}</strong> {t('home.statistic.infoUser.and')}{' '}\n            <strong>54 {t('home.statistic.infoUser.mins')}</strong>\n          </span>\n        </div>\n        <hr className={classes.line} />\n        <div className={classes.infoBlock}>\n          <label>{t('home.statistic.infoUser.learningGoal')}</label>\n          <span>\n            <strong>34 {t('home.statistic.infoUser.hours')}</strong>\n          </span>\n        </div>\n      </div>\n      <div className={classes.block + ' ' + classes.programs}>\n        <div className={classes.programsHeader}>\n          <h4>{t('home.statistic.programs.programs')}</h4>\n          <NavLink to=\"/programs\">{t('home.statistic.programs.viewAll')}</NavLink>\n        </div>\n        <div className={classes.progressBlock}>\n          <label>Cybersecurity</label>\n          <div className={classes.progressContainer}>\n            <ProgressBar width={widthProgressBar} height={heightProgressBar} progress={78} />\n            <span>78%</span>\n          </div>\n        </div>\n        <div className={classes.progressBlock}>\n          <label>Writing</label>\n          <div className={classes.progressContainer}>\n            <ProgressBar width={widthProgressBar} height={heightProgressBar} progress={42} />\n            <span>42%</span>\n          </div>\n        </div>\n        <div className={classes.progressBlock}>\n          <label>Information Technologies</label>\n          <div className={classes.progressContainer}>\n            <ProgressBar width={widthProgressBar} height={heightProgressBar} progress={60} />\n            <span>60%</span>\n          </div>\n        </div>\n      </div>\n      <div className={classes.block + ' ' + classes.stats}>\n        <h4>{t('home.statistic.stats.stats')}</h4>\n      </div>\n    </div>\n  );\n};\n\nexport default Statistic;\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Reports/ReportDetails/ReportDetails.jsx",["522","523"],"import React from 'react';\nimport { Link, useLocation, withRouter } from 'react-router-dom';\nimport classes from './ReportsDetails.module.css';\nimport { empty_state_icon } from '../../../Assets/Images/empty_state_icon';\nimport { searchicon } from '../../../Assets/Images/searchicon'\nimport { useTranslation } from 'react-i18next';\n\nconst ReportsDetails = (props) => {\n    const { t, i18n } = useTranslation();\n    const location = props.match.params.insight;\n    const targetTitle = location.split('_').join(' ')\n    const number = () => {\n        if (location === 'enrolled') {\n            return props.props.courses ? props.props.courses.length : 0\n        } else if (location === 'in_progress') {\n            return props.props.courses ? props.props.courses.filter((cours) => cours.courseProgress > 0).length : 0\n        } else if (location === 'pending') {\n            return props.props.activities ? props.props.activities.length : 0\n        }\n    }\n\n\n    return (\n        <div>\n            <div className={classes.reportDetailsTitle}>\n                <h3>\n                    <Link to='/report'>\n                        {t(\"reports.reportsDetails.generalInsights\")}\n                    </Link>\n                    <span className={classes.detailsItemTitle}>{` ${targetTitle}`}</span>\n                    <span className={classes.numberItems}>{` (${number()})`}</span>\n                </h3>\n                <div className={classes.reportDetailsTitleInput}>\n                    <input type=\"text\" placeholder={t(\"reports.reportsDetails.search\")} />\n                    {searchicon}\n                </div>\n            </div>\n            {location === 'pending' && number() === 0 &&\n                <div className={classes.empty}>\n                    <div className={classes.emptyIcon}>\n                        {empty_state_icon}\n                    </div>\n                    <span>{t(\"reports.reportsDetails.pendingActivities\")}</span>\n                </div>\n            }\n            {location === 'in_progress' && number() === 0 &&\n                <div className={classes.empty}>\n                    <div className={classes.emptyIcon}>\n                        {empty_state_icon}\n                    </div>\n                    <span>{t(\"reports.reportsDetails.enrolledCourses\")}</span>\n                </div>\n            }\n            {location === 'enrolled' && number() === 0 &&\n                <div className={classes.empty}>\n                    <div className={classes.emptyIcon}>\n                        {empty_state_icon}\n                    </div>\n                    <span>{t(\"reports.reportsDetails.inProgressCourses\")}</span>\n                </div>\n            }\n        </div >\n    );\n}\n\nlet WithRouterContainer = withRouter(ReportsDetails);\n\nexport default WithRouterContainer;","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Reports/ReportMain/ReportMain.jsx",["524","525"],"import React from 'react';\nimport { Link, NavLink } from 'react-router-dom'\nimport classes from './ReportMain.module.css';\nimport { useTranslation } from 'react-i18next';\nimport Filter from '../Filter/Filter'\nimport { Chart } from \"react-google-charts\";\n\nexport default function ReportMain({ props }) {\n    const { t, i18n } = useTranslation();\n    const coursesInProgress = props.courses ? props.courses.filter((cours) => cours.courseProgress > 0).length : 0\n    const coursesIsCompleted = props.courses ? props.courses.filter((cours) => cours.isCompleted).length : 0\n    const coursesNotStarted = props.courses ? props.courses.filter((cours) => cours.courseProgress === 0).length : 0\n\n    const firstCourseDaysNumber = 1\n    const secondCourseDaysNumber = 4\n\n    return (\n        <>\n            <div className={classes.tabsBlock}>\n                <h3>\n                    {t(\"reports.insights.title\")}\n                </h3>\n                <ul className={classes.tabs}>\n                    <li>\n                        <Link className={classes.textDecorationNone} to=\"/report/enrolled\">\n                            <p className={classes.tabTitle}> {t(\"reports.insights.enrolled\")}</p>\n                            <p className={classes.tabValue}>\n                                <span>{props.courses ? props.courses.length : 0}</span>\n                                {` ${t(\"reports.insights.courses\")}`}\n                            </p>\n                        </Link>\n                    </li>\n                    <li>\n                        <Link className={classes.textDecorationNone} to=\"/report/in_progress\">\n                            <p className={classes.tabTitle}>{t(\"reports.insights.inProgress\")}</p>\n                            <p className={classes.tabValue}>\n                                <span>{coursesInProgress}</span>\n                                {` ${t(\"reports.insights.courses\")}`}\n                            </p>\n                        </Link>\n                    </li>\n                    <li>\n                        <Link className={classes.textDecorationNone} to={`/report/pending`}>\n                            <p className={classes.tabTitle}>{t(\"reports.insights.pending\")}</p>\n                            <p className={classes.tabValue}>\n                                <span>{(props.activities && props.activities.length > 0) ? props.activities.length : 0}</span>\n                                {` ${t(\"reports.insights.activities\")}`}\n                            </p>\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n            <div className={classes.graphics}>\n                <div className={classes.graphicsTitle}>\n                    <h3>{t(\"reports.overview.title\")}</h3>\n                    <Filter />\n                </div>\n                <div className={classes.overviewCharts}>\n                    <div className={classes.chart}>\n                        <Chart\n                            width={'100%'}\n                            height={'100%'}\n                            background={'#fff'}\n                            chartType=\"PieChart\"\n                            loader={<div>Loading Chart</div>}\n                            data={[\n                                ['Progress', 'How mutch'],\n                                ['Not started', coursesNotStarted],\n                                ['In progress', coursesInProgress],\n                                ['Completed', coursesIsCompleted],\n                            ]}\n                            options={{\n                                title: 'My Courses',\n                                legend: \"bottom\",\n                                chartArea: { width: '95%', height: '70%' },\n                                colors: ['#cce1f4', '#f4e6cc', '#a9d5c1'],\n                                pieSliceText: 'value',\n                                fontSize: 14,\n                                pieSliceTextStyle: { color: \"black\" },\n                                titleTextStyle: { fontSize: 16 }\n                            }}\n                        />\n                    </div>\n                    <div className={classes.chart}>\n                        <Chart\n                            chartType=\"ColumnChart\"\n                            width=\"100%\"\n                            height=\"100%\"\n                            data={[\n                                [\"Courses\", \"Days\", { role: \"style\" }],\n                                [\"Course 1\", firstCourseDaysNumber, '#f4e6cc'],\n                                [\"Course 2\", secondCourseDaysNumber, '#a9d5c1'],\n                            ]}\n                            options={{\n                                fontSize: 14,\n                                title: 'My Engagment',\n                                titleTextStyle: { fontSize: 16 },\n                                chartArea: { width: '80%', height: '70%' },\n                                bar: { groupWidth: \"85%\" },\n                                legend: { position: \"none\" },\n                                vAxes: {\n                                    0: { title: 'Days', titleTextStyle: { fontStyle: 'normal' } },\n                                }\n                            }}\n                        />\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Reports/UserInfo/UserInfo.jsx",["526"],"import React from 'react';\nimport classes from './UserInfo.module.css';\nimport { useTranslation } from 'react-i18next';\n\nconst UserInfo = (props) => {\n    const { t, i18n } = useTranslation();\n\n    return (\n        <div className={classes.main}>\n            <div className={classes.block + \" \" + classes.withoutPadding}>\n                <div className={classes.infoBlock}>\n                    <p>{t(\"home.statistic.infoUser.welcome\")}</p>\n                    <h3>{props.user.name}</h3>\n                </div>\n                <div className={classes.infoBlock}>\n                    <label>{t(\"home.statistic.infoUser.learningHours\")}</label>\n                    <span><strong>34 {t(\"home.statistic.infoUser.hours\")}</strong> {t(\"home.statistic.infoUser.and\")} <strong>54 {t(\"home.statistic.infoUser.mins\")}</strong></span>\n                </div>\n                <hr className={classes.line} />\n                <div className={classes.infoBlock}>\n                    <label>{t(\"home.statistic.infoUser.learningGoal\")}</label>\n                    <span><strong>34 {t(\"home.statistic.infoUser.hours\")}</strong></span>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default UserInfo","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Home/Courses/Courses.jsx",["527","528","529"],"import React from 'react';\nimport classes from './Courses.module.css';\nimport { coursesicon } from '../../../Assets/Images/courses';\nimport { NavLink } from 'react-router-dom';\nimport CourseItem from './CourseItem/CourseItem';\nimport { useTranslation } from 'react-i18next';\nimport { empty_state_icon } from '../../../Assets/Images/empty_state_icon';\n\nconst HomeCourses = (props) => {\n    const {t, i18n} = useTranslation();\n    let maxCoursesToView = 6;\n    let courses = [];\n    if(props.courses){\n        courses = props.courses.map((item, index) => {\n            if(index < maxCoursesToView){\n                return <CourseItem item={item} key={item.courseId}/>\n            }\n        });\n    }\n    \n    return(\n        <div className={classes.main}>\n            <div className={classes.coursesHeader}>\n                <div className={classes.coursesHeaderBlock}>\n                    {coursesicon}\n                    <span>{t('home.courses.title')}</span>\n                </div>\n                <NavLink to=\"/courses\">{t('home.courses.viewAll')}</NavLink>\n            </div>\n            <div className={classes.itemsList}>\n                {(courses.length > 0 && courses != null && courses != undefined) ? courses : \n                    <div className={classes.empty}>\n                        <div className={classes.emptyIcon}>\n                            {empty_state_icon}\n                        </div>\n                        <span>{t(\"home.courses.empty\")}</span>\n                    </div>\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default HomeCourses;","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Home/Activities/HomeActivities.jsx",["530","531","532"],"import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n\nimport classes from './HomeActivities.module.css';\nimport { activitiesicon } from '../../../Assets/Images/activities';\nimport { ActivityItem } from '../../Activities';\nimport { empty_state_icon } from '../../../Assets/Images/empty_state_icon';\n\nconst HomeActivities = props => {\n  const { t, i18n } = useTranslation();\n  let maxActivitiesToView = 10;\n  let blockWidth = 100;\n\n  let activities = [];\n\n  props.activities.sort(function (a, b) {\n    return new Date(b.end) - new Date(a.end);\n  });\n\n  activities = props.activities.map((item, index) => {\n    if (index < maxActivitiesToView) {\n      return <ActivityItem item={item} key={item.activityId} width={blockWidth} />;\n    }\n  });\n  return (\n    <div className={classes.main}>\n      <div className={classes.activitiesHeader}>\n        <div className={classes.activitiesHeaderBlock}>\n          {activitiesicon}\n          <span>{t('home.activities.title')}</span>\n        </div>\n        <NavLink to=\"/activities\">{t('home.activities.viewAll')}</NavLink>\n      </div>\n      <div className={classes.itemsList}>\n        {activities.length > 0 && activities != null && activities != undefined ? (\n          activities\n        ) : (\n          <div className={classes.empty}>\n            <div className={classes.emptyIcon}>{empty_state_icon}</div>\n            <span>{t('home.activities.empty')}</span>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default HomeActivities;\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Reports/Filter/Filter.jsx",["533","534"],"import React, { useEffect, useState } from 'react';\nimport classes from './Filter.module.css';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { useTranslation } from 'react-i18next';\n\nconst StyledSelect = styled.div`\n\n`;\n\nconst Filter = (props) => {\n    const { t, i18n } = useTranslation();\n\n    const [isOpenDropdown, setIsOpenDropdown] = useState(false);\n    const [isCourses, setIsCourses] = useState(false)\n    const [isActivities, setIsActivities] = useState(false)\n\n    return (\n        <StyledSelect className={classes.main} width={props.width}>\n            <input hidden type=\"checkout\" defaultValue={isOpenDropdown} checked={isOpenDropdown} />\n            <div className={classes.view} onClick={() => setIsOpenDropdown(!isOpenDropdown)}>\n                <span> {t(\"filterReports.filter\")} </span>\n                <div className={classes.arrow + \" \" + (isOpenDropdown && classes.open)}></div>\n            </div>\n            {isOpenDropdown &&\n                <div className={classes.dropdown + \" \" + (isOpenDropdown && classes.openDropdown)}>\n                    <span className={`${classes.option} ${classes.margin0}`}>\n                        {t(\"filterReports.filteredBy\")}\n                    </span>\n                    <div onClick={() => setIsCourses(!isCourses)} className={`${classes.margin0} ${classes.filter}`}>\n                        <span className={classes.filterText}>{t(\"filterReports.courses\")}</span>\n                        <input type=\"checkbox\" checked={isCourses} value={isCourses}  defaultChecked={isCourses} defaultValue={isCourses}/>\n                        <span className={classes.checkmark}></span>\n                    </div>\n                    <div onClick={() => setIsActivities(!isActivities)} className={`${classes.margin0} ${classes.filter}`}>\n                        <span className={classes.filterText}>{t(\"filterReports.activities\")}</span>\n                        <input type=\"checkbox\" checked={isActivities} value={isActivities}  defaultChecked={isActivities} defaultValue={isActivities}/>\n                        <span className={classes.checkmark}></span>\n                    </div>\n                </div>}\n        </StyledSelect>\n    );\n}\n\nlet mapStateToProps = (state) => ({\n    direction: state.common.direction\n});\n\nexport default connect(mapStateToProps, null)(Filter);","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Home/Courses/CourseItem/CourseItem.jsx",["535","536","537"],"import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classes from './CourseItem.module.css';\nimport { useTranslation } from 'react-i18next';\n\n\nconst CourseItem = (props) => {\n    const {t, i18n} = useTranslation();\n\n    return(\n        <div className={classes.main}>\n            <NavLink to={`/courses/${props.item.courseId}`}>\n                {(props.item.image != \"null\") ? <img src={props.item.image}/> : <div className={classes.defaultImg}></div>}\n                \n                <div className={classes.itemInfo}>\n                    <label>{props.item.description}</label>\n                    <h2>{props.item.name}</h2>\n                    <div className={classes.itemFoot}>\n                        <span className={classes.status + \" \" + \n                            ((props.item.inProgress && classes.inProgress) ||\n                            (!props.item.inProgress && classes.completed))}>\n                                {((props.item.inProgress && t('courseMini.inProgress')) ||\n                                (!props.item.inProgress && t('courseMini.progressComplete')))}</span>\n                        <span className={classes.time}>{props.item.startingDate ? props.item.startingDate : t('courseMini.overdue')}</span>\n                    </div>\n                </div>\n                \n            </NavLink>\n        </div>\n    );\n}\n\nexport default CourseItem;","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Services/axios.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Services/index.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Services/activities.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Services/courses.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Services/notifications.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Services/programs.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Services/user.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/index.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/ErrorBoundry.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/index.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Activities/ActivitiesContainer.jsx",["538"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Activities from './Activities';\nimport { getActivities } from '../../Store/Reducers/activities';\nimport { Preloader } from '../../Components';\nimport { useLayoutEffect } from 'react';\n\nconst ActivitiesContainer = props => {\n  useEffect(() => {\n    if (props.user.employeeId) {\n      props.getActivities(props.user.employeeId, props.user.userId, props.user.organizationId);\n    }\n  }, [props.user.employeeId]);\n\n  const [all, setAll] = useState(true);\n  const [completed, setCompleted] = useState(true);\n  const [inProgress, setInProgress] = useState(true);\n  const [notStarted, setNotStarted] = useState(true);\n  const [privateParam, setPrivateParam] = useState(true);\n\n  const handleAll = () => {\n    let newAll = !all;\n    setAll(!all);\n    if (newAll) {\n      setCompleted(true);\n      setInProgress(true);\n      setNotStarted(true);\n      setPrivateParam(true);\n      return;\n    } else {\n      setCompleted(false);\n      setInProgress(false);\n      setNotStarted(false);\n      setPrivateParam(false);\n    }\n  };\n\n  useEffect(() => {\n    if (completed && inProgress && notStarted && privateParam) {\n      setAll(true);\n    } else {\n      setAll(false);\n    }\n  }, [completed, inProgress, notStarted, privateParam]);\n\n  const [size, setSize] = useState([window.outerWidth, window.innerHeight]);\n  const [blockWidth, setBlockWidth] = useState(49);\n\n  useLayoutEffect(() => {\n    function updateSize() {\n      setSize([window.outerWidth, window.innerHeight]);\n    }\n    window.addEventListener('resize', updateSize);\n    updateSize();\n    return () => window.removeEventListener('resize', updateSize);\n  }, []);\n\n  useEffect(() => {\n    if (size[0] > 700) {\n      setBlockWidth(49);\n    } else {\n      setBlockWidth(100);\n    }\n  }, [size]);\n\n  return (\n    <>\n      {props.isFetching ? (\n        <Preloader />\n      ) : (\n        <>\n          {props.isAuth && (\n            <Activities\n              activities={props.activities}\n              direction={props.direction}\n              blockWidth={blockWidth}\n              all={all}\n              setAll={handleAll}\n              completed={completed}\n              setCompleted={setCompleted}\n              inProgress={inProgress}\n              setInProgress={setInProgress}\n              notStarted={notStarted}\n              setNotStarted={setNotStarted}\n              privateParam={privateParam}\n              setPrivateParam={setPrivateParam}\n            />\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nlet mapStateToProps = state => ({\n  isFetching: state.common.isFetching,\n  user: state.user.user,\n  activities: state.activities.activities,\n  isAuth: state.user.isAuth,\n  direction: state.common.direction,\n});\n\nexport default connect(mapStateToProps, {\n  getActivities,\n})(ActivitiesContainer);\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Library/LibraryContainer.jsx",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Activities/Activities.jsx",["539","540","541"],"import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport classes from './Activities.module.css';\nimport { useTranslation } from 'react-i18next';\nimport ActivityItem from './ActivityItem/ActivityItem';\nimport { NavLink } from 'react-router-dom';\n\nconst StyledLabel = styled.label`\n  margin-left: ${({ direction }) => (direction === 'rtl' ? '56px' : '0')};\n  margin-right: ${({ direction }) => (direction === 'ltr' ? '56px' : '0')};\n`;\n\nconst Activities = props => {\n  const { t, i18n } = useTranslation();\n\n  props.activities.sort(function (a, b) {\n    return new Date(b.end) - new Date(a.end);\n  });\n\n  let activities = props.activities.map(item => {\n    return <ActivityItem item={item} key={item.activityId} width={props.blockWidth} />;\n  });\n\n  return (\n    <div className={classes.main}>\n      <div className={classes.header}>\n        <div className={classes.headerContainer}>\n          <div className={classes.headerHeader}>\n            <h1>{t('activities.title')}</h1>\n            <NavLink to=\"/activities/add\">\n              <div>+</div>\n              {t('activities.addActivityBut')}\n            </NavLink>\n          </div>\n          <div className={classes.filters}>\n            <StyledLabel className={classes.filter} direction={props.direction}>\n              <span className={classes.filterText}>{t('activities.filters.all')}</span>\n              <input\n                type=\"checkbox\"\n                onChange={() => {\n                  props.setAll();\n                }}\n                value={props.all}\n                checked={props.all}\n              />\n              <span className={classes.checkmark}></span>\n            </StyledLabel>\n            <StyledLabel className={classes.filter} direction={props.direction}>\n              <span className={classes.filterText}>{t('activities.filters.completed')}</span>\n              <input\n                type=\"checkbox\"\n                onChange={() => {\n                  props.setCompleted(!props.completed);\n                }}\n                checked={props.completed}\n              />\n              <span className={classes.checkmark}></span>\n            </StyledLabel>\n            <StyledLabel className={classes.filter} direction={props.direction}>\n              <span className={classes.filterText}>{t('activities.filters.inProgress')}</span>\n              <input\n                type=\"checkbox\"\n                onChange={() => {\n                  props.setInProgress(!props.inProgress);\n                }}\n                checked={props.inProgress}\n              />\n              <span className={classes.checkmark}></span>\n            </StyledLabel>\n            <StyledLabel className={classes.filter} direction={props.direction}>\n              <span className={classes.filterText}>{t('activities.filters.notStarted')}</span>\n              <input\n                type=\"checkbox\"\n                onChange={() => {\n                  props.setNotStarted(!props.notStarted);\n                }}\n                checked={props.notStarted}\n              />\n              <span className={classes.checkmark}></span>\n            </StyledLabel>\n            <StyledLabel className={classes.filter} direction={props.direction}>\n              <span className={classes.filterText}>{t('activities.filters.private')}</span>\n              <input\n                type=\"checkbox\"\n                onChange={() => {\n                  props.setPrivateParam(!props.privateParam);\n                }}\n                checked={props.privateParam}\n              />\n              <span className={classes.checkmark}></span>\n            </StyledLabel>\n          </div>\n        </div>\n      </div>\n      <div className={classes.itemsList}>\n        <div className={classes.containerItems}>{activities}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Activities;\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Library/Library.jsx",["542","543"],"import React from 'react';\nimport classes from './Library.module.css';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\nimport { empty_state_icon } from '../../Assets/Images/empty_state_icon';\n\nconst StyledLabel = styled.label`\n  margin-left: ${({ direction }) => (direction === 'rtl' ? '56px' : '0')};\n  margin-right: ${({ direction }) => (direction === 'ltr' ? '56px' : '0')};\n`;\n\nconst Library = props => {\n  const { t, i18n } = useTranslation();\n\n  let libraryItemsList = [];\n\n  // libraryItemsList = props.libraryItemsList.map(item => {\n\n  // });\n\n  return (\n    <div className={classes.main}>\n      <div className={classes.header}>\n        <div className={classes.container}>\n          <h1>{t('activities.library.title')}</h1>\n          <div className={classes.filters}>\n            <StyledLabel className={classes.filter} direction={props.direction}>\n              <span className={classes.filterText}>{t('courses.filters.all')}</span>\n              <input\n                type=\"checkbox\"\n                onChange={() => {\n                  props.setAll();\n                }}\n                checked={props.all}\n                value={props.all}\n              />\n              <span className={classes.checkmark}></span>\n            </StyledLabel>\n            <StyledLabel className={classes.filter} direction={props.direction}>\n              <span className={classes.filterText}>{t('activities.library.images')}</span>\n              <input\n                type=\"checkbox\"\n                onChange={() => {\n                  props.setIsImage(!props.isImage);\n                }}\n                checked={props.isImage}\n              />\n              <span className={classes.checkmark}></span>\n            </StyledLabel>\n            <StyledLabel className={classes.filter} direction={props.direction}>\n              <span className={classes.filterText}>{t('activities.library.hyperlinks')}</span>\n              <input\n                type=\"checkbox\"\n                onChange={() => {\n                  props.setIsHyperlink(!props.isHyperlink);\n                }}\n                checked={props.isHyperlink}\n              />\n              <span className={classes.checkmark}></span>\n            </StyledLabel>\n            <StyledLabel className={classes.filter} direction={props.direction}>\n              <span className={classes.filterText}>{t('activities.library.files')}</span>\n              <input\n                type=\"checkbox\"\n                onChange={() => {\n                  props.setIsFiles(!props.isFiles);\n                }}\n                checked={props.isFiles}\n              />\n              <span className={classes.checkmark}></span>\n            </StyledLabel>\n          </div>\n        </div>\n      </div>\n      <div className={classes.itemsList}>\n        <div className={classes.containerItems}>\n          {libraryItemsList.length > 0 && libraryItemsList != null && libraryItemsList != undefined ? (\n            libraryItemsList\n          ) : (\n            <div className={classes.empty}>\n              <div className={classes.emptyIcon}>{empty_state_icon}</div>\n              <span>{t('activities.library.noResources')}</span>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Library;\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Activities/ActivityItem/ActivityItem.jsx",["544"],"import React from 'react';\nimport classes from './ActivityItem.module.css';\nimport { clockicon } from '../../../Assets/Images/clock';\nimport { NavLink } from 'react-router-dom';\nimport { ProgressBar } from '../../../Components';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\n\nconst StyledMain = styled.div`\n  width: ${({ width }) => 'calc(' + width + '% - 32px)'};\n  ../..media (max-width: 500px) {\n    width: 90%;\n  }\n`;\n\nconst StyledTimeBlock = styled.div`\n  margin-left: ${({ direction }) => (direction === 'ltr' ? '16px' : '0')};\n  margin-right: ${({ direction }) => (direction === 'rtl' ? '16px' : '0')};\n`;\n\nconst StyledTimeSpan = styled.span`\n  margin-left: ${({ direction }) => (direction === 'ltr' ? '4px' : '0')};\n  margin-right: ${({ direction }) => (direction === 'rtl' ? '4px' : '0')};\n`;\n\nconst StyledProgressSpan = styled.span`\n  margin-left: ${({ direction }) => (direction === 'ltr' ? '14px' : '0')};\n  margin-right: ${({ direction }) => (direction === 'rtl' ? '14px' : '0')};\n`;\n\nconst ActivityItem = props => {\n  const { t, i18n } = useTranslation();\n  let widthProgressBar = 45;\n  let heightProgressBar = 8;\n\n  const endTime = new Date(props.item.end);\n  const now = new Date();\n\n  var daysLag = Math.ceil(Math.abs(endTime.getTime() - now.getTime()) / (1000 * 3600 * 24));\n\n  return (\n    <StyledMain className={classes.main} width={props.width}>\n      <NavLink to={`/activities/view/${props.item.activityId}`}>\n        <div className={classes.activityHeader}>\n          <span className={classes.program}>\n            {!props.item.description || props.item.description === '' ? t('activityMini.empty') : props.item.description}\n          </span>\n          <div className={classes.headerSide}>\n            <span className={classes.status}>{props.item.status}</span>\n            <StyledTimeBlock className={classes.timeBlock} direction={props.direction}>\n              {clockicon}\n              <StyledTimeSpan className={classes.time} direction={props.direction}>\n                {daysLag}\n                {endTime >= now ? <span>{t('activityMini.daysLeft')}</span> : <span>{t('activityMini.daysAgo')}</span>}\n              </StyledTimeSpan>\n            </StyledTimeBlock>\n          </div>\n        </div>\n        <h3>{props.item.name}</h3>\n        <div className={classes.progressBlock}>\n          <ProgressBar width={widthProgressBar} height={heightProgressBar} progress={props.item.totalPoints} />\n          <StyledProgressSpan direction={props.direction}>{props.item.totalPoints}%</StyledProgressSpan>\n        </div>\n      </NavLink>\n    </StyledMain>\n  );\n};\n\nlet mapStateToProps = state => ({\n  direction: state.common.direction,\n});\n\nexport default connect(mapStateToProps, {})(ActivityItem);\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Common/Preloader/Preloader.jsx",["545"],"import React from 'react';\nimport preloader from '../../../Assets/Common/preloader.svg';\nimport classes from './Preloader.module.css';\n\nconst Preloader = (props) => {\n    return(\n        <div className={classes.main}>\n            <img src={preloader}/>\n        </div>\n    );\n}\n\nexport default Preloader;","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Common/LoadDataRouter/LoadDataRouter.jsx",["546","547","548","549"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { setCurrentRoute } from '../../../Store/Reducers/common';\nimport { getUserProfile, getProfile } from '../../../Store/Reducers/user';\nimport { Login } from '../../../Pages/Auth/Login/Login';\nimport { getUnreadNotifications } from '../../../Store/Reducers/notifications';\n\nconst LoadDataRouter = ({\n  Component,\n  isAuth,\n  setCurrentRoute,\n  currentRoute,\n  getUserProfile,\n  getProfile,\n  isStartData,\n  getUnreadNotifications,\n  user,\n  limit,\n  employeeId,\n  ...rest\n}) => {\n  useEffect(() => {\n    if ((localStorage.usertoken || sessionStorage.usertoken) && !isStartData) {\n      if (employeeId) {\n        getUserProfile(employeeId);\n      } else {\n        getProfile(localStorage.usertoken || sessionStorage.usertoken);\n      }\n      getUnreadNotifications(limit, user.organizationId);\n    }\n  }, [employeeId]);\n\n  useEffect(() => {\n    setCurrentRoute(window.location.pathname);\n  }, [window.location.pathname]);\n\n  return <>{localStorage.usertoken || sessionStorage.usertoken ? <Component {...rest} /> : <Redirect to=\"/login\" />}</>;\n};\n\nlet mapStateToProps = state => ({\n  isAuth: state.user.isAuth,\n  currentRoute: state.common.currentRoute,\n  isStartData: state.user.isStartData,\n  user: state.user.user,\n  limit: state.notifications.limit,\n  employeeId: state.user.employeeId,\n});\n\nexport default connect(mapStateToProps, {\n  setCurrentRoute,\n  getUserProfile,\n  getProfile,\n  getUnreadNotifications,\n})(LoadDataRouter);\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Common/FormControlls/FormControlls.js",["550"],"import React, { useState } from 'react';\nimport classes from './FormControlls.module.css';\nimport { useTranslation } from 'react-i18next';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport const AuthInput = ({input, meta, ...props}) => {\n    const hasError = meta.touched && meta.error;\n    return(\n        <div className={classes.formControll + \" \" + (hasError && classes.error)}>\n            <input {...input} {...props}/>\n            {hasError && <span>{meta.error}</span>}\n        </div>\n    );\n}\n\nexport const TextAreaCustom = ({input, meta, ...props}) => {\n    const {t, i18n} = useTranslation();\n    const hasError = meta.touched && meta.error;\n    return(\n        <div className={classes.textarea + \" \" + (hasError && classes.error)}>\n            <textarea maxLength={props.maxLength} {...input} {...props} row={props.rows}/>\n            {hasError && <span>{meta.error}</span>}\n            <label>{props.left} {t(\"addActivity.charactersLeft\")}</label>\n        </div>\n    )\n}\n\nexport const Calendar = ({input, meta, ...props}) => {\n    const [startDate, setStartDate] = useState(new Date());\n\n    let handleDate = (date) => {\n        setStartDate(date);\n        input.onChange(date);\n    }\n\n    const hasError = meta.touched && meta.error;\n\n    return(\n        <div className={classes.calendar + \" \" + (hasError && classes.error)}>\n            <DatePicker selected={startDate} onChange={date => handleDate(date)}/>\n            {hasError && <span>{meta.error}</span>}\n        </div>\n    );\n}\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Common/ProgressBar/ProgressBar.jsx",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Common/Cutsom/Select/CustomSelect.jsx",["551"],"import React, { useEffect, useState } from 'react';\nimport classes from './CustomSelect.module.css';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\n\nconst StyledSelect = styled.div`\n    width: ${({ width }) => width + \"%\"};\n`;\n\nconst CustomSelect = ({input, meta, ...props}) => {\n    const [currentOption, setCurrentOption] = useState(props.disableDefValueOptionText ? props.disableDefValueOptionText : props.options[0]);\n    const [isOpenDropdown, setIsOpenDropdown] = useState(false);\n\n    useEffect(()=>{\n        if(input){\n            input.value = \"\"\n        }\n       \n    },[]);\n\n    let handleSelect = (option) => {\n        setCurrentOption(option);\n        if(input){\n            input.onChange(option);\n        }\n        props.setFunction(option);\n        setIsOpenDropdown(false);\n    }\n\n    let options = props.options.map((option, index) => {\n        return <span key={index + \"opt\"} onClick={()=>{handleSelect(option)}} className={classes.option + \" \" + classes.detectClick} {...input}>{option}</span>\n    });\n\n    let hasError = null;\n\n    if(props.disableDefValueOption){\n        hasError = meta.touched && meta.error;\n    }\n\n    return(\n            <StyledSelect className={classes.main + \" \" + (hasError && classes.error) + \" \" + classes.detectClick} width={props.width}>\n                <input hidden type=\"checkout\" value={isOpenDropdown} className={classes.detectClick} defaultValue={isOpenDropdown}/>\n                {/* <input {...input} {...props} value={321}/> */}\n                <div className={classes.view + \" \" + classes.detectClick} onClick={()=>setIsOpenDropdown(!isOpenDropdown)}>\n                    <span className={classes.detectClick}>{currentOption}</span>\n                    <div className={classes.arrow + \" \" + (isOpenDropdown && classes.open) + \" \" + classes.detectClick}></div>\n                </div>\n                {isOpenDropdown && \n                <div className={classes.dropdown + \" \" + (isOpenDropdown && classes.openDropdown) + \" \" + classes.detectClick}>\n                    {props.disableDefValueOption && <span className={classes.option + \" \" + classes.disabled + \" \" + classes.detectClick}>{props.disableDefValueOptionText}</span>}\n                    {options}\n                </div>}\n                {props.disableDefValueOption && \n                    <>\n                        {hasError && <span>{meta.error}</span>}\n                    </>\n                }\n            </StyledSelect>  \n    );\n}\n\nlet mapStateToProps = (state) => ({\n    direction: state.common.direction\n});\n\nexport default connect(mapStateToProps, null)(CustomSelect);","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Common/SearchModal/SearchModal.jsx",["552","553","554","555","556","557"],"import React, { useEffect, useRef, useState } from 'react';\nimport CustomSelect from '../Cutsom/Select/CustomSelect';\nimport classes from './SearchModal.module.css';\nimport { searchicon } from '../../../Assets/Images/searchicon.js';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport { setSearchValue } from '../../../Store/Reducers/common';\n\nconst StyledModal = styled.div`\n  transform: ${({ direction }) => (direction === 'ltr' ? 'translateY(100px) translateX(-647px)' : 'translateY(100px) translateX(647px)')};\n  ../..media screen and (max-width: 1000px) {\n    width: 620px;\n    transform: ${({ direction }) => (direction === 'ltr' ? 'translateY(100px) translateX(-543px)' : 'translateY(100px) translateX(543px)')};\n  }\n  ../..media screen and (max-width: 822px) {\n    width: 520px;\n    transform: ${({ direction }) => (direction === 'ltr' ? 'translateY(100px) translateX(-443px)' : 'translateY(100px) translateX(443px)')};\n  }\n  ../..media screen and (max-width: 693px) {\n    width: 420px;\n    transform: ${({ direction }) => (direction === 'ltr' ? 'translateY(160px) translateX(-343px)' : 'translateY(160px) translateX(343px)')};\n  }\n`;\n\nconst StyledArrow = styled.div`\n  left: ${({ direction }) => (direction === 'ltr' ? '-50px' : '50px')};\n\n  & div {\n    left: ${({ direction }) => (direction === 'ltr' ? '-4.5px' : '3.5px')};\n  }\n`;\n\nconst SearchModal = props => {\n  const [searchValue, setSearchValue] = useState('');\n\n  let filerOne = ['Search everything', 'option1', 'option2'];\n  let filerTwo = ['By anyone', 'option1', 'option2'];\n  let filerThree = ['In all segments', 'option1', 'option2'];\n\n  const linkRef = useRef(null);\n\n  const handleSearch = () => {\n    props.setSearchValue(searchValue);\n    props.setIsOpenSearchModal(false);\n  };\n\n  useEffect(() => {\n    linkRef.current.querySelector('svg').classList.add('detectClick');\n    window.addEventListener('mousedown', event => {\n      if (event.target.classList.value.includes('detectClick')) {\n        return;\n      }\n      props.setIsOpenSearchModal(false);\n    });\n  }, []);\n\n  const [filterOneValue, setFilterOneValue] = useState(filerOne[0]);\n  const [filterTwoValue, setFilterTwoValue] = useState(filerTwo[0]);\n  const [filterThreeValue, setFilterThreeValue] = useState(filerThree[0]);\n\n  return (\n    <StyledModal className={classes.main + ' ' + classes.detectClick} direction={props.direction} direction={props.direction}>\n      <StyledArrow className={classes.arrow + ' ' + classes.detectClick} direction={props.direction} direction={props.direction}>\n        <div class={classes.innerArrow + ' ' + classes.detectClick} direction={props.direction}></div>\n      </StyledArrow>\n      <div className={classes.body + ' ' + classes.detectClick} direction={props.direction}>\n        <div className={classes.searchField + ' ' + classes.detectClick} direction={props.direction}>\n          <NavLink\n            ref={linkRef}\n            to={`/search?value=${searchValue}`}\n            className={classes.detectClick}\n            onClick={() => {\n              handleSearch();\n            }}\n          >\n            {searchicon}\n          </NavLink>\n          <input\n            placeholder=\"Search...\"\n            name={'value'}\n            className={classes.detectClick}\n            onChange={e => {\n              setSearchValue(e.target.value);\n            }}\n          />\n        </div>\n        <div className={classes.filters + ' ' + classes.detectClick} direction={props.direction}>\n          <CustomSelect options={filerOne} setFunction={setFilterOneValue} width={32} />\n          <CustomSelect options={filerTwo} setFunction={setFilterTwoValue} width={32} />\n          <CustomSelect options={filerThree} setFunction={setFilterThreeValue} width={32} />\n        </div>\n      </div>\n    </StyledModal>\n  );\n};\n\nlet mapStateToProps = state => ({\n  direction: state.common.direction,\n  searchValue: state.common.searchValue,\n});\n\nexport default connect(mapStateToProps, {\n  setSearchValue,\n})(SearchModal);\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Activities/index.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Activities/AddActivity/AddActivity.jsx",["558","559","560","561","562","563","564","565","566","567"],"import React, { useCallback, useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport classes from './AddActivity.module.css';\nimport { useTranslation } from 'react-i18next';\nimport { required, foo } from '../../../Utils/validators';\nimport { NavLink } from 'react-router-dom';\nimport { Preloader, CustomSelect, AuthInput, Calendar, TextAreaCustom } from '../../../Components';\nimport styled from 'styled-components';\nimport uploadicon from '../../../Assets/Images/upload.svg';\nimport { FileDrop } from 'react-file-drop';\nimport ActivityFile from '../ActivityFile/ActivityFile';\n\nconst StyledLabel = styled.label`\n  margin-left: ${({ direction }) => direction === 'ltr' && '30px'};\n  margin-right: ${({ direction }) => direction === 'rtl' && '30px'};\n`;\n\nconst AddActivityForm = props => {\n  const { t, i18n } = useTranslation();\n  let maxLength = 300;\n\n  const [charactersLeft, setCharactersLeft] = useState(maxLength);\n\n  let disableDefValueOption = true;\n  let disableDefValueOptionText = t('addActivity.typeDef');\n\n  let disableDefSupervisorOption = true;\n  let disableDefSupervisorOptionText = t('addActivity.supervisorDef');\n\n  const [size, setSize] = useState([window.outerWidth, window.innerHeight]);\n  const [selectWidth, setSelectWidth] = useState(66);\n\n  useLayoutEffect(() => {\n    function updateSize() {\n      setSize([window.outerWidth, window.innerHeight]);\n    }\n    window.addEventListener('resize', updateSize);\n    updateSize();\n    return () => window.removeEventListener('resize', updateSize);\n  }, []);\n\n  useEffect(() => {\n    if (size[0] > 568) {\n      setSelectWidth(66);\n    } else {\n      setSelectWidth(100);\n    }\n  }, [size]);\n\n  let handleTextArea = e => {\n    setCharactersLeft(maxLength - e.target.value.length);\n  };\n\n  let types = ['type1', 'type2', 'type3'];\n\n  let supervisorsOptions = ['sup1', 'sup2', 'sup3'];\n\n  const fileInputRef = useRef(null);\n\n  const onFileInputChange = event => {\n    const newFiles = [...props.files];\n    const newFilesToPush = [...event.target.files];\n    newFilesToPush.forEach(item => {\n      newFiles.push(item);\n    });\n    props.setFiles(newFiles);\n  };\n\n  const onTargetClick = () => {\n    fileInputRef.current.click();\n  };\n  const onDropHandler = (files, event) => {\n    const newFilesToPush = [...files];\n    const newFiles = [...props.files];\n    newFilesToPush.forEach(item => {\n      newFiles.push(item);\n    });\n    props.setFiles(newFiles);\n  };\n\n  const handleRemoveFile = index => {\n    const newFiles = [...props.files];\n    newFiles.forEach((item, i) => {\n      if (index === i) {\n        newFiles.splice(index, 1);\n      }\n    });\n    props.setFiles(newFiles);\n  };\n  let viewFiles = [];\n\n  viewFiles = props.files.map((f, index) => {\n    return <ActivityFile name={f.name} index={index} handleRemoveFile={handleRemoveFile} />;\n  });\n\n  return (\n    <form onSubmit={props.handleSubmit} className={classes.form}>\n      <div className={classes.field + ' ' + classes.inputField}>\n        <label className={classes.fieldLabel}>{t('addActivity.name')}</label>\n        <Field component={AuthInput} placeholder={t('addActivity.namePlaceholder')} name=\"name\" validate={[required]} />\n      </div>\n      <div className={classes.field + ' ' + classes.inputField}>\n        <label className={classes.fieldLabel}>{t('addActivity.link')}</label>\n        <Field component={AuthInput} name=\"link\" />\n      </div>\n      {/* <div className={classes.field}>\n                <label className={classes.fieldLabel}>{t(\"addActivity.supervisor\")}</label>\n                <p></p>\n                <Field component={CustomSelect} options={supervisorsOptions} setFunction={props.setSupervisor} width={selectWidth} \n                        validate={[required]} name=\"supervisor\" disableDefValueOption={disableDefSupervisorOption} disableDefValueOptionText={disableDefSupervisorOptionText}/>\n            </div> */}\n      <div className={classes.field + ' ' + classes.inputField}>\n        <label className={classes.fieldLabel}>{t('addActivity.points')}</label>\n        <Field component={AuthInput} name=\"points\" validate={[required]} />\n      </div>\n      <div className={classes.field + ' ' + classes.inputField}>\n        <label className={classes.fieldLabel}>{t('addActivity.description')}</label>\n        <Field\n          component={TextAreaCustom}\n          name=\"description\"\n          maxLength={maxLength}\n          left={charactersLeft}\n          rows={1}\n          onChange={handleTextArea}\n        />\n      </div>\n      <div className={classes.field}>\n        <label className={classes.fieldLabel}>{t('addActivity.date')}</label>\n        <div className={classes.dates}>\n          <Field component={Calendar} name=\"start\" />\n          <StyledLabel direction={props.direction}>{t('addActivity.to')}</StyledLabel>\n          <Field component={Calendar} name=\"end\" />\n        </div>\n      </div>\n      <div className={classes.field}>\n        <label className={classes.fieldLabel + ' ' + classes.select}>{t('addActivity.type')}</label>\n        <p></p>\n        <Field\n          component={CustomSelect}\n          options={types}\n          setFunction={props.setType}\n          width={selectWidth}\n          validate={[required]}\n          name=\"type\"\n          disableDefValueOption={disableDefValueOption}\n          disableDefValueOptionText={disableDefValueOptionText}\n        />\n      </div>\n      <div className={classes.field}>\n        <label className={classes.fieldLabel}>{t('addActivity.visibility')}</label>\n        <div className={classes.radios}>\n          <div className={classes.visibilityBlock}>\n            <input\n              type=\"radio\"\n              name=\"visibility\"\n              id=\"public\"\n              onChange={e => {\n                props.setVisibility(e.target.value);\n              }}\n              value=\"public\"\n            />\n            <label htmlFor={'public'}>Public</label>\n            <div className={classes.check}></div>\n          </div>\n          <div className={classes.visibilityBlock}>\n            <input\n              type=\"radio\"\n              name=\"visibility\"\n              id=\"private\"\n              checked\n              onChange={e => {\n                props.setVisibility(e.target.value);\n              }}\n              value=\"private\"\n            />\n            <label htmlFor={'private'}>Private</label>\n            <div className={classes.check}></div>\n          </div>\n        </div>\n      </div>\n      <div className={classes.field}>\n        <label className={classes.fieldLabel}>{t('addActivity.upload')}</label>\n        <div className={classes.dragNdrop}>\n          <input onChange={onFileInputChange} ref={fileInputRef} type=\"file\" className={classes.hidden} multiple />\n          <FileDrop\n            onDrop={(files, event) => onDropHandler(files, event)}\n            onTargetClick={onTargetClick}\n            className={classes.drop}\n            draggingOverFrameClassName={classes.onDrag}\n            targetClassName={classes.dropInner}\n          >\n            <div className={classes.uploadBut}>\n              <img src={uploadicon} />\n              <p>{t('addActivity.upload')}</p>\n            </div>\n            <p className={classes.dragText}>{t('addActivity.drag')}</p>\n          </FileDrop>\n        </div>\n        {props.files.length > 0 && <div className={classes.files}>{viewFiles}</div>}\n      </div>\n      <div className={classes.fieldBut}>\n        <button>{t('addActivity.addActivity')}</button>\n        <NavLink to=\"/activities\">{t('addActivity.cancel')}</NavLink>\n      </div>\n    </form>\n  );\n};\n\nconst AddActivityReduxForm = reduxForm({ form: 'addActivity' })(AddActivityForm);\n\nconst AddActivity = props => {\n  const { t, i18n } = useTranslation();\n  const [type, setType] = useState('');\n  const [supervisor, setSupervisor] = useState('');\n  const [visibility, setVisibility] = useState('private');\n\n  const [files, setFiles] = useState([]);\n\n  let onSubmit = formData => {\n    console.log(formData);\n  };\n  return (\n    <div className={classes.main}>\n      {props.isFetching && <Preloader />}\n      <div className={classes.header}>\n        <div className={classes.headerContainer}>\n          <h1>{t('addActivity.title')}</h1>\n        </div>\n      </div>\n      <div className={classes.formContainer}>\n        <AddActivityReduxForm\n          onSubmit={onSubmit}\n          files={files}\n          setFiles={setFiles}\n          setType={setType}\n          visibility={visibility}\n          setVisibility={setVisibility}\n          setSupervisor={setSupervisor}\n          direction={props.direction}\n        />\n      </div>\n    </div>\n  );\n};\n\nlet mapStateToProps = state => ({\n  isFetching: state.common.isFetching,\n  direction: state.common.direction,\n});\n\nexport default connect(mapStateToProps, {})(AddActivity);\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Activities/ActivityFile/ActivityFile.jsx",["568"],"import React from 'react';\nimport classes from './ActivityFile.module.css';\nimport pdficon from '../../../Assets/Images/pdficon.svg';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\n\n\nconst StyledDiv = styled.div`\n    margin-left: ${({ direction }) => direction === \"ltr\" ? \"0\" : \"10px\"};\n    margin-right: ${({ direction }) => direction === \"rtl\" ? \"0\" : \"10px\"};\n`;\n\nconst StyledBut = styled.button`\n    left: ${({ direction }) => direction === \"ltr\" ? \"10px\" : \"-10px\"};\n`;\n\nconst ActivityFile = (props) => {\n    return(\n        <StyledDiv className={classes.main} direction={props.direction}>\n            <div className={classes.body}>\n                <StyledBut direction={props.direction} onClick={()=>{props.handleRemoveFile(props.index)}}>&#x2715;</StyledBut>\n                <img src={pdficon}/>\n            </div>\n            <span>{props.name}</span>\n        </StyledDiv>\n        \n    );\n}\n\nlet mapStateToProps = (state) => ({\n    direction: state.common.direction\n})\n\nexport default connect(mapStateToProps, {})(ActivityFile);","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Activities/EditActivity/EditActivity.jsx",["569","570","571","572","573","574","575","576","577"],"import React, { useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport classes from '../AddActivity/AddActivity.module.css';\nimport { useTranslation } from 'react-i18next';\nimport { required } from '../../../Utils/validators';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { Preloader, CustomSelect, AuthInput, Calendar, TextAreaCustom } from '../../../Components';\nimport { getActivity } from '../../../Store/Reducers/activities';\nimport styled from 'styled-components';\nimport ActivityFile from '../ActivityFile/ActivityFile';\nimport { FileDrop } from 'react-file-drop';\nimport uploadicon from '../../../Assets/Images/upload.svg';\n\nconst StyledLabel = styled.label`\n  margin-left: ${({ direction }) => '30px'};\n  margin-right: ${({ direction }) => '30px'};\n`;\n\nconst EditActivityForm = props => {\n  const { t, i18n } = useTranslation();\n  let maxLength = 300;\n\n  const [charactersLeft, setCharactersLeft] = useState(maxLength);\n\n  let disableDefValueOption = true;\n  let disableDefValueOptionText = t('addActivity.typeDef');\n\n  let disableDefSupervisorOption = true;\n  let disableDefSupervisorOptionText = t('addActivity.supervisorDef');\n\n  const [size, setSize] = useState([window.outerWidth, window.innerHeight]);\n  const [selectWidth, setSelectWidth] = useState(66);\n\n  useLayoutEffect(() => {\n    function updateSize() {\n      setSize([window.outerWidth, window.innerHeight]);\n    }\n    window.addEventListener('resize', updateSize);\n    updateSize();\n    return () => window.removeEventListener('resize', updateSize);\n  }, []);\n\n  useEffect(() => {\n    if (size[0] > 568) {\n      setSelectWidth(66);\n    } else {\n      setSelectWidth(100);\n    }\n  }, [size]);\n\n  let handleTextArea = e => {\n    setCharactersLeft(maxLength - e.target.value.length);\n  };\n\n  let types = ['type1', 'type2', 'type3'];\n\n  let supervisorsOptions = ['sup1', 'sup2', 'sup3'];\n\n  const fileInputRef = useRef(null);\n\n  const onFileInputChange = event => {\n    const newFiles = [...props.files];\n    const newFilesToPush = [...event.target.files];\n    newFilesToPush.forEach(item => {\n      newFiles.push(item);\n    });\n    props.setFiles(newFiles);\n  };\n\n  const onTargetClick = () => {\n    fileInputRef.current.click();\n  };\n  const onDropHandler = (files, event) => {\n    const newFilesToPush = [...files];\n    const newFiles = [...props.files];\n    newFilesToPush.forEach(item => {\n      newFiles.push(item);\n    });\n    props.setFiles(newFiles);\n  };\n\n  const handleRemoveFile = index => {\n    const newFiles = [...props.files];\n    newFiles.forEach((item, i) => {\n      if (index === i) {\n        newFiles.splice(index, 1);\n      }\n    });\n    props.setFiles(newFiles);\n  };\n  let viewFiles = [];\n\n  viewFiles = props.files.map((f, index) => {\n    return <ActivityFile name={f.name} index={index} handleRemoveFile={handleRemoveFile} />;\n  });\n\n  return (\n    <form onSubmit={props.handleSubmit} className={classes.form}>\n      <div className={classes.field + ' ' + classes.inputField}>\n        <label className={classes.fieldLabel}>{t('addActivity.name')}</label>\n        <Field component={AuthInput} placeholder={t('addActivity.namePlaceholder')} name=\"name\" validate={[required]} />\n      </div>\n      <div className={classes.field + ' ' + classes.inputField}>\n        <label className={classes.fieldLabel}>{t('addActivity.link')}</label>\n        <Field component={AuthInput} name=\"link\" />\n      </div>\n      {/* <div className={classes.field}>\n                <label className={classes.fieldLabel}>{t(\"addActivity.supervisor\")}</label>\n                <p></p>\n                <Field component={CustomSelect} options={supervisorsOptions} setFunction={props.setSupervisor} width={selectWidth} \n                        validate={[required]} name=\"supervisor\" disableDefValueOption={disableDefSupervisorOption} disableDefValueOptionText={disableDefSupervisorOptionText}/>\n            </div> */}\n      <div className={classes.field + ' ' + classes.inputField}>\n        <label className={classes.fieldLabel}>{t('addActivity.points')}</label>\n        <Field component={AuthInput} name=\"points\" validate={[required]} />\n      </div>\n      <div className={classes.field}>\n        <label className={classes.fieldLabel}>{t('addActivity.description')}</label>\n        <Field\n          component={TextAreaCustom}\n          name=\"description\"\n          maxLength={maxLength}\n          left={charactersLeft}\n          rows={1}\n          onChange={handleTextArea}\n        />\n      </div>\n      <div className={classes.field}>\n        <label className={classes.fieldLabel}>{t('addActivity.date')}</label>\n        <div className={classes.dates}>\n          <Field component={Calendar} name=\"start\" />\n          <StyledLabel direction={props.direction}>{t('addActivity.to')}</StyledLabel>\n          <Field component={Calendar} name=\"end\" />\n        </div>\n      </div>\n      <div className={classes.field}>\n        <label className={classes.fieldLabel}>{t('addActivity.type')}</label>\n        <p></p>\n        <Field\n          component={CustomSelect}\n          options={types}\n          setFunction={props.setType}\n          width={selectWidth}\n          validate={[required]}\n          name=\"type\"\n          disableDefValueOption={disableDefValueOption}\n          disableDefValueOptionText={disableDefValueOptionText}\n        />\n      </div>\n      <div className={classes.field}>\n        <label className={classes.fieldLabel}>{t('addActivity.visibility')}</label>\n        <div className={classes.radios}>\n          <div className={classes.visibilityBlock}>\n            <input\n              type=\"radio\"\n              name=\"visibility\"\n              id=\"public\"\n              onChange={e => {\n                props.setVisibility(e.target.value);\n              }}\n              value=\"public\"\n            />\n            <label htmlFor={'public'}>Public</label>\n            <div className={classes.check}></div>\n          </div>\n          <div className={classes.visibilityBlock}>\n            <input\n              type=\"radio\"\n              name=\"visibility\"\n              id=\"private\"\n              checked\n              onChange={e => {\n                props.setVisibility(e.target.value);\n              }}\n              value=\"private\"\n            />\n            <label htmlFor={'private'}>Private</label>\n            <div className={classes.check}></div>\n          </div>\n        </div>\n      </div>\n      <div className={classes.field}>\n        <label className={classes.fieldLabel}>{t('addActivity.upload')}</label>\n        <div className={classes.dragNdrop}>\n          <input onChange={onFileInputChange} ref={fileInputRef} type=\"file\" className={classes.hidden} multiple />\n          <FileDrop\n            onDrop={(files, event) => onDropHandler(files, event)}\n            onTargetClick={onTargetClick}\n            className={classes.drop}\n            draggingOverFrameClassName={classes.onDrag}\n            targetClassName={classes.dropInner}\n          >\n            <div className={classes.uploadBut}>\n              <img src={uploadicon} />\n              <p>{t('addActivity.upload')}</p>\n            </div>\n            <p className={classes.dragText}>{t('addActivity.drag')}</p>\n          </FileDrop>\n        </div>\n        {props.files.length > 0 && <div className={classes.files}>{viewFiles}</div>}\n      </div>\n      <div className={classes.fieldBut}>\n        <button>{t('editActivity.title')}</button>\n        <NavLink to={`/activities/view/${props.activityId}`}>{t('addActivity.cancel')}</NavLink>\n      </div>\n    </form>\n  );\n};\n\nlet EditActivityReduxForm = reduxForm({ form: 'editActivity' })(EditActivityForm);\n\nEditActivityReduxForm = connect(\n  state => ({\n    initialValues: state.activities.currentActivity,\n  }),\n  {}\n)(EditActivityReduxForm);\n\nconst EditActivity = props => {\n  const { t, i18n } = useTranslation();\n  const [type, setType] = useState('');\n  const [visibility, setVisibility] = useState('private');\n  const [supervisor, setSupervisor] = useState('');\n\n  const [files, setFiles] = useState([]);\n\n  useEffect(() => {\n    let activityId = props.match.params.activityId;\n    props.getActivity(activityId, props.user.selectedOrganizationId);\n  }, []);\n\n  let onSubmit = formData => {\n    console.log(formData);\n  };\n  return (\n    <div className={classes.main}>\n      {props.isFetching && <Preloader />}\n      <div className={classes.header}>\n        <div className={classes.headerContainer}>\n          <h1>{t('editActivity.title')}</h1>\n        </div>\n      </div>\n      <div className={classes.formContainer}>\n        <EditActivityReduxForm\n          onSubmit={onSubmit}\n          setFiles={setFiles}\n          files={files}\n          setSupervisor={setSupervisor}\n          setType={setType}\n          visibility={visibility}\n          setVisibility={setVisibility}\n          activityId={props.match.params.activityId}\n          direction={props.direction}\n        />\n      </div>\n    </div>\n  );\n};\n\nlet WithUrlDataContainerComponent = withRouter(EditActivity);\n\nlet mapStateToProps = state => ({\n  isFetching: state.common.isFetching,\n  user: state.user.user,\n  direction: state.common.direction,\n});\n\nexport default connect(mapStateToProps, {\n  getActivity,\n})(WithUrlDataContainerComponent);\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Activities/Routes.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/PageNotFound.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/PrivateRoute.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Store/Reducers/index.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Store/Reducers/authentication.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Config/constants.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Utils/actionTypes.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Services/authentication.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Styles/Colors.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Form/index.js",["578"],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Button/index.js",["579"],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/InputGroup/index.js",["580"],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Label/index.js",["581"],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Input/index.js",["582"],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Programs/Routes.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Pages/Programs/AddEdit/index.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Layout/Main/index.js",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Navbar/NavbarContainer.jsx",["583","584","585"],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Navbar/Navbar.jsx",["586","587"],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Navbar/Burger/Burger.jsx",[],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Navbar/ProfileMenu/ProfileMenu.jsx",["588","589"],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Navbar/Submenu/Submenu.jsx",["590"],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Navbar/Burger/BurgerMenu.jsx",["591","592"],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Notifications/NotificationsContainer.jsx",["593"],"import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Preloader } from '../../Components';\nimport Notifications from './Notifications';\nimport { getNotifications } from '../../Store/Reducers/notifications';\n\nconst NotificationsContainer = props => {\n  useEffect(() => {\n    props.getNotifications(props.currentPage, props.pageSize);\n  }, [props.pageSize, props.currentPage]);\n\n  return <>{props.isFetching ? <Preloader /> : <Notifications notifications={props.notifications} />}</>;\n};\n\nlet mapStateToProps = state => ({\n  isFetching: state.common.isFetching,\n  notifications: state.notifications.notifications,\n  currentPage: state.notifications.currentPage,\n  pageSize: state.notifications.pageSize,\n});\n\nexport default connect(mapStateToProps, {\n  getNotifications,\n})(NotificationsContainer);\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Notifications/NotificationsModal/NotificationsModal.jsx",["594","595"],"import React, { useEffect, useRef, useState } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport classes from './NotificationsModal.module.css';\nimport { useTranslation } from 'react-i18next';\nimport { NavLink } from 'react-router-dom';\nimport NotificationModalItem from './NotificationModalItem/NotificationModalItem';\n\nconst StyledModal = styled.div`\n  transform: ${({ direction, notifications }) => (direction === 'ltr' ? 'translateX(-138px)' : 'translateX(138px);')};\n  ../..media screen and (max-width: 1020px) {\n    transform: ${({ direction, notifications }) => (direction === 'ltr' ? 'translateX(-232px)' : 'translateX(232px);')};\n  }\n  ../..media screen and (max-width: 507px) {\n    transform: ${({ direction, notifications }) => (direction === 'ltr' ? 'translateX(-155px)' : 'translateX(155px);')};\n  }\n  ../..media screen and (max-width: 375px) {\n    transform: ${({ direction, notifications }) => (direction === 'ltr' ? 'translateX(-139px)' : 'translateX(139px);')};\n  }\n`;\n\nconst StyledArrow = styled.div`\n  left: ${({ direction }) => (direction === 'ltr' ? '-42px' : '42px')};\n\n  & div {\n    left: ${({ direction }) => (direction === 'ltr' ? '-4.2px' : '3.5px')};\n  }\n\n  ../..media screen and (max-width: 507px) {\n    left: ${({ direction }) => (direction === 'ltr' ? '-118px' : '118px')};\n  }\n  ../..media screen and (max-width: 428px) {\n    left: ${({ direction }) => (direction === 'ltr' ? '-53px' : '53px')};\n  }\n  ../..media screen and (max-width: 375px) {\n    left: ${({ direction }) => (direction === 'ltr' ? '-70px' : '70px')};\n  }\n`;\n\nconst NotificationsModal = props => {\n  const { t, i18n } = useTranslation();\n\n  const [isScroll, setIsScroll] = useState(false);\n  const modalRef = useRef(null);\n\n  const windowRef = useRef(null);\n\n  function logit() {\n    setIsScroll(!isScroll);\n  }\n\n  useEffect(() => {\n    if (modalRef.current) {\n      modalRef.current.addEventListener('scroll', logit);\n    }\n    window.addEventListener('mousedown', event => {\n      if (event.target.classList.value.includes('detectClick')) {\n        return;\n      }\n      props.setIsOpenNotificationsModal(false);\n    });\n  }, [modalRef.current]);\n\n  let notifications = [];\n\n  if (props.notifications) {\n    notifications = props.notifications.map(notification => {\n      return <NotificationModalItem item={notification} key={notification.notificationId} isScroll={isScroll} />;\n    });\n  }\n\n  return (\n    <StyledModal\n      className={classes.main + ' ' + classes.detectClick}\n      direction={props.direction}\n      notifications={props.notifications}\n      ref={windowRef}\n    >\n      <StyledArrow className={classes.arrow + ' ' + classes.detectClick} direction={props.direction}>\n        <div className={classes.innerArrow + ' ' + classes.detectClick}></div>\n      </StyledArrow>\n      <div className={classes.body + ' ' + classes.detectClick}>\n        <div className={classes.header + ' ' + classes.detectClick}>\n          <h3 className={classes.detectClick}>{t('notificationsModal.title')}</h3>\n          <NavLink\n            to=\"/home/notifications\"\n            className={classes.detectClick}\n            onClick={() => {\n              props.setIsOpenNotificationsModal(false);\n            }}\n          >\n            {t('notificationsModal.viewAll')}\n          </NavLink>\n        </div>\n        {notifications.length > 0 && notifications ? (\n          <div className={classes.notifications + ' ' + classes.detectClick} ref={modalRef}>\n            {notifications}\n          </div>\n        ) : (\n          <div className={classes.empty + ' ' + classes.detectClick}>\n            <span>{t('notificationsModal.empty')}</span>\n          </div>\n        )}\n      </div>\n    </StyledModal>\n  );\n};\n\nlet mapStateToProps = state => ({\n  direction: state.common.direction,\n  notifications: state.notifications.unreadNotifications,\n});\n\nexport default connect(mapStateToProps, {})(NotificationsModal);\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Notifications/Notifications.jsx",["596","597","598","599"],"import React from 'react';\nimport classes from './Notifications.module.css';\nimport { notificationicon } from '../../Assets/Images/notification';\nimport { useTranslation } from 'react-i18next';\nimport markasreadicon from '../../Assets/Images/asreadicon.svg';\nimport NotificationItem from './NotificationItem/NotificationItem';\n\nconst Notifications = (props) => {\n    const {t, i18n} = useTranslation();\n    \n    let newNotifications = [];\n    let notifications = [];\n\n    newNotifications = props.notifications.map(notify => {\n        if(!notify.isRead){\n            return <NotificationItem isRead={false} item={notify} key={notify.notificationId}/>\n        }\n    });\n\n    notifications = props.notifications.map(notify => {\n        if(notify.isRead){\n            return <NotificationItem isRead={true} item={notify} key={notify.notificationId}/>\n        }\n    })\n\n    return(\n        <div className={classes.main}>\n            <div className={classes.container}>\n                <div className={classes.header}>\n                    <div className={classes.headerSide}>\n                        {notificationicon}\n                        <h3>{t(\"notifications.title\")}</h3>\n                    </div>\n                    <div className={classes.headerSide}>\n                        <button>\n                            <img src={markasreadicon}/>\n                            <span>{t(\"notifications.markAllRead\")}</span>\n                        </button>\n                    </div>\n                </div>\n                <div className={classes.contentContainer}>\n                    <div className={classes.new}>\n                        {newNotifications}\n                    </div>\n                    <h3>{t(\"notifications.earlier\")}</h3>\n                    <div className={classes.itemsList}>\n                        {notifications}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Notifications;\n\n","/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Notifications/NotificationsModal/NotificationModalItem/NotificationModalItem.jsx",["600","601","602","603","604","605"],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Notifications/NotificationItem/NotificationItem.jsx",["606","607","608","609","610"],"/Users/ky/Documents/projects/alwasaet/lxp-frontend/src/Components/Notifications/NotificationsModal/NotificationModalItem/NotificationModalItemMenu/NotificationModalItemMenu.jsx",["611","612","613"],{"ruleId":"614","replacedBy":"615"},{"ruleId":"616","replacedBy":"617"},{"ruleId":"618","severity":1,"message":"619","line":5,"column":27,"nodeType":"620","messageId":"621","endLine":5,"endColumn":33},{"ruleId":"618","severity":1,"message":"622","line":7,"column":22,"nodeType":"620","messageId":"621","endLine":7,"endColumn":35},{"ruleId":"618","severity":1,"message":"623","line":7,"column":67,"nodeType":"620","messageId":"621","endLine":7,"endColumn":79},{"ruleId":"618","severity":1,"message":"624","line":18,"column":3,"nodeType":"620","messageId":"621","endLine":18,"endColumn":9},{"ruleId":"618","severity":1,"message":"625","line":25,"column":7,"nodeType":"620","messageId":"621","endLine":25,"endColumn":29},{"ruleId":"618","severity":1,"message":"626","line":31,"column":11,"nodeType":"620","messageId":"621","endLine":31,"endColumn":12},{"ruleId":"627","severity":1,"message":"628","line":10,"column":21,"nodeType":"629","messageId":"630","endLine":10,"endColumn":22,"suggestions":"631"},{"ruleId":"632","severity":1,"message":"633","line":12,"column":6,"nodeType":"634","endLine":12,"endColumn":8,"suggestions":"635"},{"ruleId":"632","severity":1,"message":"633","line":13,"column":6,"nodeType":"634","endLine":13,"endColumn":29,"suggestions":"636"},{"ruleId":"632","severity":1,"message":"633","line":17,"column":6,"nodeType":"634","endLine":17,"endColumn":32,"suggestions":"637"},{"ruleId":"618","severity":1,"message":"638","line":1,"column":28,"nodeType":"620","messageId":"621","endLine":1,"endColumn":36},{"ruleId":"632","severity":1,"message":"633","line":13,"column":6,"nodeType":"634","endLine":13,"endColumn":29,"suggestions":"639"},{"ruleId":"632","severity":1,"message":"633","line":17,"column":6,"nodeType":"634","endLine":17,"endColumn":32,"suggestions":"640"},{"ruleId":"632","severity":1,"message":"633","line":12,"column":6,"nodeType":"634","endLine":12,"endColumn":8,"suggestions":"641"},{"ruleId":"618","severity":1,"message":"642","line":12,"column":15,"nodeType":"620","messageId":"621","endLine":12,"endColumn":19},{"ruleId":"618","severity":1,"message":"643","line":8,"column":10,"nodeType":"620","messageId":"621","endLine":8,"endColumn":21},{"ruleId":"618","severity":1,"message":"644","line":8,"column":23,"nodeType":"620","messageId":"621","endLine":8,"endColumn":37},{"ruleId":"632","severity":1,"message":"633","line":41,"column":6,"nodeType":"634","endLine":41,"endColumn":8,"suggestions":"645"},{"ruleId":"618","severity":1,"message":"642","line":13,"column":14,"nodeType":"620","messageId":"621","endLine":13,"endColumn":18},{"ruleId":"618","severity":1,"message":"642","line":58,"column":14,"nodeType":"620","messageId":"621","endLine":58,"endColumn":18},{"ruleId":"632","severity":1,"message":"633","line":62,"column":6,"nodeType":"634","endLine":62,"endColumn":8,"suggestions":"646"},{"ruleId":"618","severity":1,"message":"642","line":12,"column":14,"nodeType":"620","messageId":"621","endLine":12,"endColumn":18},{"ruleId":"618","severity":1,"message":"642","line":55,"column":14,"nodeType":"620","messageId":"621","endLine":55,"endColumn":18},{"ruleId":"632","severity":1,"message":"633","line":63,"column":6,"nodeType":"634","endLine":63,"endColumn":8,"suggestions":"647"},{"ruleId":"618","severity":1,"message":"648","line":1,"column":17,"nodeType":"620","messageId":"621","endLine":1,"endColumn":26},{"ruleId":"618","severity":1,"message":"638","line":1,"column":28,"nodeType":"620","messageId":"621","endLine":1,"endColumn":36},{"ruleId":"618","severity":1,"message":"642","line":13,"column":15,"nodeType":"620","messageId":"621","endLine":13,"endColumn":19},{"ruleId":"649","severity":1,"message":"650","line":25,"column":3,"nodeType":"651","messageId":"652","endLine":47,"endColumn":5},{"ruleId":"618","severity":1,"message":"642","line":16,"column":15,"nodeType":"620","messageId":"621","endLine":16,"endColumn":19},{"ruleId":"618","severity":1,"message":"653","line":2,"column":10,"nodeType":"620","messageId":"621","endLine":2,"endColumn":17},{"ruleId":"618","severity":1,"message":"642","line":14,"column":14,"nodeType":"620","messageId":"621","endLine":14,"endColumn":18},{"ruleId":"654","severity":1,"message":"655","line":18,"column":41,"nodeType":"656","messageId":"657","endLine":18,"endColumn":43},{"ruleId":"658","severity":1,"message":"659","line":76,"column":64,"nodeType":"660","messageId":"661","endLine":76,"endColumn":66},{"ruleId":"618","severity":1,"message":"642","line":7,"column":15,"nodeType":"620","messageId":"621","endLine":7,"endColumn":19},{"ruleId":"618","severity":1,"message":"642","line":13,"column":14,"nodeType":"620","messageId":"621","endLine":13,"endColumn":18},{"ruleId":"632","severity":1,"message":"633","line":19,"column":6,"nodeType":"634","endLine":19,"endColumn":8,"suggestions":"662"},{"ruleId":"663","severity":1,"message":"664","line":37,"column":9,"nodeType":"665","endLine":41,"endColumn":11},{"ruleId":"618","severity":1,"message":"666","line":61,"column":7,"nodeType":"620","messageId":"621","endLine":61,"endColumn":22},{"ruleId":"618","severity":1,"message":"642","line":11,"column":14,"nodeType":"620","messageId":"621","endLine":11,"endColumn":18},{"ruleId":"632","severity":1,"message":"633","line":17,"column":6,"nodeType":"634","endLine":17,"endColumn":8,"suggestions":"667"},{"ruleId":"618","severity":1,"message":"642","line":13,"column":14,"nodeType":"620","messageId":"621","endLine":13,"endColumn":18},{"ruleId":"632","severity":1,"message":"633","line":32,"column":6,"nodeType":"634","endLine":32,"endColumn":18,"suggestions":"668"},{"ruleId":"663","severity":1,"message":"664","line":43,"column":11,"nodeType":"665","endLine":46,"endColumn":13},{"ruleId":"663","severity":1,"message":"664","line":47,"column":11,"nodeType":"665","endLine":47,"endColumn":63},{"ruleId":"618","severity":1,"message":"642","line":7,"column":15,"nodeType":"620","messageId":"621","endLine":7,"endColumn":19},{"ruleId":"658","severity":1,"message":"659","line":11,"column":36,"nodeType":"660","messageId":"661","endLine":11,"endColumn":38},{"ruleId":"663","severity":1,"message":"664","line":11,"column":49,"nodeType":"665","endLine":11,"endColumn":78},{"ruleId":"618","severity":1,"message":"642","line":8,"column":14,"nodeType":"620","messageId":"621","endLine":8,"endColumn":18},{"ruleId":"618","severity":1,"message":"669","line":2,"column":16,"nodeType":"620","messageId":"621","endLine":2,"endColumn":27},{"ruleId":"618","severity":1,"message":"642","line":9,"column":16,"nodeType":"620","messageId":"621","endLine":9,"endColumn":20},{"ruleId":"618","severity":1,"message":"670","line":2,"column":16,"nodeType":"620","messageId":"621","endLine":2,"endColumn":23},{"ruleId":"618","severity":1,"message":"642","line":9,"column":16,"nodeType":"620","messageId":"621","endLine":9,"endColumn":20},{"ruleId":"618","severity":1,"message":"642","line":6,"column":16,"nodeType":"620","messageId":"621","endLine":6,"endColumn":20},{"ruleId":"618","severity":1,"message":"642","line":10,"column":15,"nodeType":"620","messageId":"621","endLine":10,"endColumn":19},{"ruleId":"654","severity":1,"message":"671","line":14,"column":51,"nodeType":"656","messageId":"672","endLine":14,"endColumn":53},{"ruleId":"658","severity":1,"message":"659","line":31,"column":68,"nodeType":"660","messageId":"661","endLine":31,"endColumn":70},{"ruleId":"618","severity":1,"message":"642","line":11,"column":14,"nodeType":"620","messageId":"621","endLine":11,"endColumn":18},{"ruleId":"654","severity":1,"message":"671","line":21,"column":51,"nodeType":"656","messageId":"672","endLine":21,"endColumn":53},{"ruleId":"658","severity":1,"message":"659","line":36,"column":68,"nodeType":"660","messageId":"661","endLine":36,"endColumn":70},{"ruleId":"618","severity":1,"message":"648","line":1,"column":17,"nodeType":"620","messageId":"621","endLine":1,"endColumn":26},{"ruleId":"618","severity":1,"message":"642","line":12,"column":16,"nodeType":"620","messageId":"621","endLine":12,"endColumn":20},{"ruleId":"618","severity":1,"message":"642","line":8,"column":15,"nodeType":"620","messageId":"621","endLine":8,"endColumn":19},{"ruleId":"658","severity":1,"message":"659","line":13,"column":36,"nodeType":"660","messageId":"661","endLine":13,"endColumn":38},{"ruleId":"663","severity":1,"message":"664","line":13,"column":49,"nodeType":"665","endLine":13,"endColumn":78},{"ruleId":"632","severity":1,"message":"633","line":13,"column":6,"nodeType":"634","endLine":13,"endColumn":29,"suggestions":"673"},{"ruleId":"618","severity":1,"message":"648","line":1,"column":17,"nodeType":"620","messageId":"621","endLine":1,"endColumn":26},{"ruleId":"618","severity":1,"message":"638","line":1,"column":28,"nodeType":"620","messageId":"621","endLine":1,"endColumn":36},{"ruleId":"618","severity":1,"message":"642","line":14,"column":14,"nodeType":"620","messageId":"621","endLine":14,"endColumn":18},{"ruleId":"618","severity":1,"message":"642","line":13,"column":14,"nodeType":"620","messageId":"621","endLine":13,"endColumn":18},{"ruleId":"658","severity":1,"message":"659","line":77,"column":88,"nodeType":"660","messageId":"661","endLine":77,"endColumn":90},{"ruleId":"618","severity":1,"message":"642","line":33,"column":14,"nodeType":"620","messageId":"621","endLine":33,"endColumn":18},{"ruleId":"663","severity":1,"message":"664","line":8,"column":13,"nodeType":"665","endLine":8,"endColumn":35},{"ruleId":"618","severity":1,"message":"638","line":1,"column":28,"nodeType":"620","messageId":"621","endLine":1,"endColumn":36},{"ruleId":"618","severity":1,"message":"674","line":6,"column":10,"nodeType":"620","messageId":"621","endLine":6,"endColumn":15},{"ruleId":"632","severity":1,"message":"675","line":32,"column":6,"nodeType":"634","endLine":32,"endColumn":18,"suggestions":"676"},{"ruleId":"632","severity":1,"message":"677","line":36,"column":6,"nodeType":"634","endLine":36,"endColumn":32,"suggestions":"678"},{"ruleId":"618","severity":1,"message":"642","line":18,"column":15,"nodeType":"620","messageId":"621","endLine":18,"endColumn":19},{"ruleId":"632","severity":1,"message":"679","line":19,"column":7,"nodeType":"634","endLine":19,"endColumn":9,"suggestions":"680"},{"ruleId":"632","severity":1,"message":"633","line":56,"column":7,"nodeType":"634","endLine":56,"endColumn":9,"suggestions":"681"},{"ruleId":"618","severity":1,"message":"682","line":58,"column":12,"nodeType":"620","messageId":"621","endLine":58,"endColumn":26},{"ruleId":"618","severity":1,"message":"683","line":59,"column":12,"nodeType":"620","messageId":"621","endLine":59,"endColumn":26},{"ruleId":"618","severity":1,"message":"684","line":60,"column":12,"nodeType":"620","messageId":"621","endLine":60,"endColumn":28},{"ruleId":"685","severity":1,"message":"686","line":63,"column":103,"nodeType":"687","endLine":63,"endColumn":130},{"ruleId":"685","severity":1,"message":"686","line":64,"column":108,"nodeType":"687","endLine":64,"endColumn":135},{"ruleId":"618","severity":1,"message":"688","line":1,"column":17,"nodeType":"620","messageId":"621","endLine":1,"endColumn":28},{"ruleId":"618","severity":1,"message":"689","line":6,"column":20,"nodeType":"620","messageId":"621","endLine":6,"endColumn":23},{"ruleId":"618","severity":1,"message":"642","line":20,"column":14,"nodeType":"620","messageId":"621","endLine":20,"endColumn":18},{"ruleId":"618","severity":1,"message":"690","line":28,"column":7,"nodeType":"620","messageId":"621","endLine":28,"endColumn":33},{"ruleId":"618","severity":1,"message":"691","line":29,"column":7,"nodeType":"620","messageId":"621","endLine":29,"endColumn":37},{"ruleId":"618","severity":1,"message":"692","line":57,"column":7,"nodeType":"620","messageId":"621","endLine":57,"endColumn":25},{"ruleId":"663","severity":1,"message":"664","line":194,"column":15,"nodeType":"665","endLine":194,"endColumn":39},{"ruleId":"618","severity":1,"message":"642","line":213,"column":14,"nodeType":"620","messageId":"621","endLine":213,"endColumn":18},{"ruleId":"618","severity":1,"message":"693","line":214,"column":10,"nodeType":"620","messageId":"621","endLine":214,"endColumn":14},{"ruleId":"618","severity":1,"message":"694","line":215,"column":10,"nodeType":"620","messageId":"621","endLine":215,"endColumn":20},{"ruleId":"663","severity":1,"message":"664","line":22,"column":17,"nodeType":"665","endLine":22,"endColumn":37},{"ruleId":"618","severity":1,"message":"642","line":21,"column":14,"nodeType":"620","messageId":"621","endLine":21,"endColumn":18},{"ruleId":"618","severity":1,"message":"690","line":29,"column":7,"nodeType":"620","messageId":"621","endLine":29,"endColumn":33},{"ruleId":"618","severity":1,"message":"691","line":30,"column":7,"nodeType":"620","messageId":"621","endLine":30,"endColumn":37},{"ruleId":"618","severity":1,"message":"692","line":58,"column":7,"nodeType":"620","messageId":"621","endLine":58,"endColumn":25},{"ruleId":"663","severity":1,"message":"664","line":195,"column":15,"nodeType":"665","endLine":195,"endColumn":39},{"ruleId":"618","severity":1,"message":"642","line":221,"column":14,"nodeType":"620","messageId":"621","endLine":221,"endColumn":18},{"ruleId":"618","severity":1,"message":"693","line":222,"column":10,"nodeType":"620","messageId":"621","endLine":222,"endColumn":14},{"ruleId":"618","severity":1,"message":"694","line":224,"column":10,"nodeType":"620","messageId":"621","endLine":224,"endColumn":20},{"ruleId":"632","severity":1,"message":"633","line":231,"column":6,"nodeType":"634","endLine":231,"endColumn":8,"suggestions":"695"},{"ruleId":"618","severity":1,"message":"696","line":1,"column":8,"nodeType":"620","messageId":"621","endLine":1,"endColumn":13},{"ruleId":"618","severity":1,"message":"696","line":1,"column":8,"nodeType":"620","messageId":"621","endLine":1,"endColumn":13},{"ruleId":"618","severity":1,"message":"696","line":1,"column":8,"nodeType":"620","messageId":"621","endLine":1,"endColumn":13},{"ruleId":"618","severity":1,"message":"696","line":1,"column":8,"nodeType":"620","messageId":"621","endLine":1,"endColumn":13},{"ruleId":"618","severity":1,"message":"696","line":1,"column":8,"nodeType":"620","messageId":"621","endLine":1,"endColumn":13},{"ruleId":"632","severity":1,"message":"633","line":13,"column":6,"nodeType":"634","endLine":13,"endColumn":41,"suggestions":"697"},{"ruleId":"658","severity":1,"message":"659","line":19,"column":27,"nodeType":"660","messageId":"661","endLine":19,"endColumn":29},{"ruleId":"658","severity":1,"message":"659","line":19,"column":61,"nodeType":"660","messageId":"661","endLine":19,"endColumn":63},{"ruleId":"618","severity":1,"message":"642","line":43,"column":14,"nodeType":"620","messageId":"621","endLine":43,"endColumn":18},{"ruleId":"663","severity":1,"message":"664","line":158,"column":15,"nodeType":"665","endLine":158,"endColumn":82},{"ruleId":"618","severity":1,"message":"698","line":1,"column":28,"nodeType":"620","messageId":"621","endLine":1,"endColumn":38},{"ruleId":"632","severity":1,"message":"633","line":45,"column":6,"nodeType":"634","endLine":45,"endColumn":8,"suggestions":"699"},{"ruleId":"618","severity":1,"message":"642","line":22,"column":15,"nodeType":"620","messageId":"621","endLine":22,"endColumn":19},{"ruleId":"618","severity":1,"message":"700","line":6,"column":9,"nodeType":"620","messageId":"621","endLine":6,"endColumn":19},{"ruleId":"618","severity":1,"message":"642","line":33,"column":15,"nodeType":"620","messageId":"621","endLine":33,"endColumn":19},{"ruleId":"632","severity":1,"message":"633","line":10,"column":6,"nodeType":"634","endLine":10,"endColumn":41,"suggestions":"701"},{"ruleId":"618","severity":1,"message":"642","line":41,"column":14,"nodeType":"620","messageId":"621","endLine":41,"endColumn":18},{"ruleId":"632","severity":1,"message":"702","line":62,"column":6,"nodeType":"634","endLine":62,"endColumn":24,"suggestions":"703"},{"ruleId":"618","severity":1,"message":"642","line":9,"column":15,"nodeType":"620","messageId":"621","endLine":9,"endColumn":19},{"ruleId":"654","severity":1,"message":"671","line":14,"column":55,"nodeType":"656","messageId":"672","endLine":14,"endColumn":57},{"ruleId":"654","severity":1,"message":"671","line":20,"column":52,"nodeType":"656","messageId":"672","endLine":20,"endColumn":54},{"ruleId":"663","severity":1,"message":"664","line":36,"column":29,"nodeType":"665","endLine":36,"endColumn":56},{"ruleId":"618","severity":1,"message":"704","line":1,"column":17,"nodeType":"620","messageId":"621","endLine":1,"endColumn":25},{"ruleId":"618","severity":1,"message":"642","line":15,"column":15,"nodeType":"620","messageId":"621","endLine":15,"endColumn":19},{"ruleId":"658","severity":1,"message":"659","line":43,"column":21,"nodeType":"660","messageId":"661","endLine":43,"endColumn":23},{"ruleId":"658","severity":1,"message":"659","line":45,"column":27,"nodeType":"660","messageId":"661","endLine":45,"endColumn":29},{"ruleId":"658","severity":1,"message":"659","line":47,"column":27,"nodeType":"660","messageId":"661","endLine":47,"endColumn":29},{"ruleId":"663","severity":1,"message":"664","line":66,"column":17,"nodeType":"665","endLine":66,"endColumn":74},{"ruleId":"618","severity":1,"message":"642","line":27,"column":15,"nodeType":"620","messageId":"621","endLine":27,"endColumn":19},{"ruleId":"658","severity":1,"message":"659","line":47,"column":21,"nodeType":"660","messageId":"661","endLine":47,"endColumn":23},{"ruleId":"658","severity":1,"message":"659","line":49,"column":27,"nodeType":"660","messageId":"661","endLine":49,"endColumn":29},{"ruleId":"658","severity":1,"message":"659","line":51,"column":27,"nodeType":"660","messageId":"661","endLine":51,"endColumn":29},{"ruleId":"663","severity":1,"message":"664","line":71,"column":17,"nodeType":"665","endLine":71,"endColumn":42},{"ruleId":"618","severity":1,"message":"642","line":28,"column":15,"nodeType":"620","messageId":"621","endLine":28,"endColumn":19},{"ruleId":"663","severity":1,"message":"664","line":38,"column":25,"nodeType":"665","endLine":38,"endColumn":84},{"ruleId":"663","severity":1,"message":"664","line":44,"column":25,"nodeType":"665","endLine":44,"endColumn":80},"no-native-reassign",["705"],"no-negated-in-lhs",["706"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'ErrorBoundary' is defined but never used.","'PrivateRoute' is defined but never used.","'NavBar' is defined but never used.","'StyledContentContainer' is assigned a value but never used.","'t' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["707","708"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["709"],["710"],["711"],"'useState' is defined but never used.",["712"],["713"],["714"],"'i18n' is assigned a value but never used.","'searchValue' is assigned a value but never used.","'setSearchValue' is assigned a value but never used.",["715"],["716"],["717"],"'useEffect' is defined but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'connect' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["718"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ProfilePassword' is assigned a value but never used.",["719"],["720"],"'useLocation' is defined but never used.","'NavLink' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd",["721"],"'Login' is defined but never used.","React Hook useEffect has missing dependencies: 'getProfile', 'getUnreadNotifications', 'getUserProfile', 'isStartData', 'limit', and 'user.organizationId'. Either include them or remove the dependency array. If 'getUnreadNotifications' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["722"],"React Hook useEffect has a missing dependency: 'setCurrentRoute'. Either include it or remove the dependency array. Outer scope values like 'window.location.pathname' aren't valid dependencies because mutating them doesn't re-render the component.",["723"],"React Hook useEffect has a missing dependency: 'input'. Either include it or remove the dependency array.",["724"],["725"],"'filterOneValue' is assigned a value but never used.","'filterTwoValue' is assigned a value but never used.","'filterThreeValue' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useCallback' is defined but never used.","'foo' is defined but never used.","'disableDefSupervisorOption' is assigned a value but never used.","'disableDefSupervisorOptionText' is assigned a value but never used.","'supervisorsOptions' is assigned a value but never used.","'type' is assigned a value but never used.","'supervisor' is assigned a value but never used.",["726"],"'React' is defined but never used.",["727"],"'useReducer' is defined but never used.",["728"],"'planeticon' is defined but never used.",["729"],"React Hook useEffect has missing dependencies: 'logit' and 'props'. Either include them or remove the dependency array. Mutable values like 'modalRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["730"],"'Fragment' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"731","fix":"732","desc":"733"},{"messageId":"734","fix":"735","desc":"736"},{"desc":"737","fix":"738"},{"desc":"739","fix":"740"},{"desc":"741","fix":"742"},{"desc":"739","fix":"743"},{"desc":"741","fix":"744"},{"desc":"737","fix":"745"},{"desc":"737","fix":"746"},{"desc":"737","fix":"747"},{"desc":"737","fix":"748"},{"desc":"737","fix":"749"},{"desc":"737","fix":"750"},{"desc":"751","fix":"752"},{"desc":"739","fix":"753"},{"desc":"754","fix":"755"},{"desc":"756","fix":"757"},{"desc":"758","fix":"759"},{"desc":"737","fix":"760"},{"desc":"737","fix":"761"},{"desc":"762","fix":"763"},{"desc":"737","fix":"764"},{"desc":"765","fix":"766"},{"desc":"767","fix":"768"},"removeEscape",{"range":"769","text":"770"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"771","text":"772"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [props]",{"range":"773","text":"774"},"Update the dependencies array to be: [props, props.user.employeeId]",{"range":"775","text":"776"},"Update the dependencies array to be: [props, props.user.joinedCourses]",{"range":"777","text":"778"},{"range":"779","text":"776"},{"range":"780","text":"778"},{"range":"781","text":"774"},{"range":"782","text":"774"},{"range":"783","text":"774"},{"range":"784","text":"774"},{"range":"785","text":"774"},{"range":"786","text":"774"},"Update the dependencies array to be: [props, props.user]",{"range":"787","text":"788"},{"range":"789","text":"776"},"Update the dependencies array to be: [employeeId, getProfile, getUnreadNotifications, getUserProfile, isStartData, limit, user.organizationId]",{"range":"790","text":"791"},"Update the dependencies array to be: [setCurrentRoute]",{"range":"792","text":"793"},"Update the dependencies array to be: [input]",{"range":"794","text":"795"},{"range":"796","text":"774"},{"range":"797","text":"774"},"Update the dependencies array to be: [props, props.currentPage, props.pageSize]",{"range":"798","text":"799"},{"range":"800","text":"774"},"Update the dependencies array to be: [props.pageSize, props.currentPage, props]",{"range":"801","text":"802"},"Update the dependencies array to be: [logit, props]",{"range":"803","text":"804"},[202,203],"",[202,202],"\\",[408,410],"[props]",[490,513],"[props, props.user.employeeId]",[596,622],"[props, props.user.joinedCourses]",[497,520],[603,629],[420,422],[1232,1234],[2123,2125],[2074,2076],[670,672],[568,570],[994,1006],"[props, props.user]",[482,505],[945,957],"[employeeId, getProfile, getUnreadNotifications, getUserProfile, isStartData, limit, user.organizationId]",[1033,1059],"[setCurrentRoute]",[612,614],"[input]",[2207,2209],[8267,8269],[536,571],"[props, props.currentPage, props.pageSize]",[1603,1605],[374,409],"[props.pageSize, props.currentPage, props]",[2175,2193],"[logit, props]"]